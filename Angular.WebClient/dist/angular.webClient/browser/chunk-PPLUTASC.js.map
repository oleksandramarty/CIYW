{"version":3,"sources":["node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/form-field.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/material/fesm2022/input.mjs","node_modules/@angular/material/fesm2022/datepicker.mjs","node_modules/@angular/cdk/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/card.mjs","node_modules/@angular/material/fesm2022/sort.mjs","node_modules/@angular/material/fesm2022/select.mjs","node_modules/@angular/material/fesm2022/tooltip.mjs","node_modules/@angular/material/fesm2022/paginator.mjs","src/modules/areas/auth-area/auth-area/auth-area.component.ts","src/modules/areas/auth-area/auth-area/auth-area.component.html","node_modules/@angular/material/fesm2022/grid-list.mjs","node_modules/@angular/material/fesm2022/radio.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","node_modules/@angular/material/fesm2022/slider.mjs","src/modules/common/common-input/input/input.component.ts","src/modules/common/common-input/input/input.component.html","node_modules/@angular/material/fesm2022/autocomplete.mjs","src/modules/common/common-input/app-common-input.module.ts","node_modules/@angular/material/fesm2022/divider.mjs","src/modules/areas/auth-area/auth-forgot/auth-forgot.component.ts","src/modules/areas/auth-area/auth-forgot/auth-forgot.component.html","src/modules/areas/auth-area/auth-sign-in/auth-sign-in.component.ts","src/modules/areas/auth-area/auth-sign-in/auth-sign-in.component.html","src/modules/areas/auth-area/auth-sign-up/auth-sign-up.component.ts","src/modules/areas/auth-area/auth-sign-up/auth-sign-up.component.html","src/modules/areas/auth-area/auth-restore/auth-restore.component.ts","src/modules/areas/auth-area/auth-restore/auth-restore.component.html","src/modules/areas/auth-area/auth-area.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  constructor( /** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    this._destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    this._resizeSubject = new Subject();\n    /** A map of elements to streams of their resize events. */\n    this._elementObservables = new Map();\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    constructor() {\n      /** Map of box type to shared resize observer. */\n      this._observers = new Map();\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          window.addEventListener('error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        window.removeEventListener('error', loopLimitExceededErrorHandler);\n      }\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static {\n      this.ɵfac = function SharedResizeObserver_Factory(t) {\n        return new (t || SharedResizeObserver)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SharedResizeObserver,\n        factory: SharedResizeObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, Attribute, Input, inject, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, contentChild, Injector, computed, afterRender, ANIMATION_MODULE_TYPE, Optional, Inject, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/platform';\nimport { DOCUMENT, NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"textField\"];\nconst _c4 = [\"iconPrefixContainer\"];\nconst _c5 = [\"textPrefixContainer\"];\nconst _c6 = [\"iconSuffixContainer\"];\nconst _c7 = [\"textSuffixContainer\"];\nconst _c8 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c9 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 21);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(!ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 4);\n    i0.ɵɵprojection(2, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction MatFormField_Case_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵprojection(1, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n  }\n}\nfunction MatFormField_Case_17_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, MatFormField_Case_17_Conditional_1_Template, 2, 2, \"mat-hint\", 22);\n    i0.ɵɵprojection(2, 7);\n    i0.ɵɵelement(3, \"div\", 23);\n    i0.ɵɵprojection(4, 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.hintLabel ? 1 : -1);\n  }\n}\nlet MatLabel = /*#__PURE__*/(() => {\n  class MatLabel {\n    static {\n      this.ɵfac = function MatLabel_Factory(t) {\n        return new (t || MatLabel)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatLabel,\n        selectors: [[\"mat-label\"]],\n        standalone: true\n      });\n    }\n  }\n  return MatLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = /*#__PURE__*/new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nlet MatError = /*#__PURE__*/(() => {\n  class MatError {\n    constructor(ariaLive, elementRef) {\n      this.id = `mat-mdc-error-${nextUniqueId$2++}`;\n      // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n      // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n      if (!ariaLive) {\n        elementRef.nativeElement.setAttribute('aria-live', 'polite');\n      }\n    }\n    static {\n      this.ɵfac = function MatError_Factory(t) {\n        return new (t || MatError)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatError,\n        selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n        hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n        hostVars: 1,\n        hostBindings: function MatError_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n          }\n        },\n        inputs: {\n          id: \"id\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_ERROR,\n          useExisting: MatError\n        }])]\n      });\n    }\n  }\n  return MatError;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId$1 = 0;\n/** Hint text to be shown underneath the form field control. */\nlet MatHint = /*#__PURE__*/(() => {\n  class MatHint {\n    constructor() {\n      /** Whether to align the hint label at the start or end of the line. */\n      this.align = 'start';\n      /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n      this.id = `mat-mdc-hint-${nextUniqueId$1++}`;\n    }\n    static {\n      this.ɵfac = function MatHint_Factory(t) {\n        return new (t || MatHint)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatHint,\n        selectors: [[\"mat-hint\"]],\n        hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n        hostVars: 4,\n        hostBindings: function MatHint_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"align\", null);\n            i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\",\n          id: \"id\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatHint;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = /*#__PURE__*/new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nlet MatPrefix = /*#__PURE__*/(() => {\n  class MatPrefix {\n    constructor() {\n      this._isText = false;\n    }\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    static {\n      this.ɵfac = function MatPrefix_Factory(t) {\n        return new (t || MatPrefix)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatPrefix,\n        selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n        inputs: {\n          _isTextSelector: [0, \"matTextPrefix\", \"_isTextSelector\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_PREFIX,\n          useExisting: MatPrefix\n        }])]\n      });\n    }\n  }\n  return MatPrefix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = /*#__PURE__*/new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nlet MatSuffix = /*#__PURE__*/(() => {\n  class MatSuffix {\n    constructor() {\n      this._isText = false;\n    }\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    static {\n      this.ɵfac = function MatSuffix_Factory(t) {\n        return new (t || MatSuffix)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSuffix,\n        selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n        inputs: {\n          _isTextSelector: [0, \"matTextSuffix\", \"_isTextSelector\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SUFFIX,\n          useExisting: MatSuffix\n        }])]\n      });\n    }\n  }\n  return MatSuffix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = /*#__PURE__*/new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nlet MatFormFieldFloatingLabel = /*#__PURE__*/(() => {\n  class MatFormFieldFloatingLabel {\n    /** Whether the label is floating. */\n    get floating() {\n      return this._floating;\n    }\n    set floating(value) {\n      this._floating = value;\n      if (this.monitorResize) {\n        this._handleResize();\n      }\n    }\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n      return this._monitorResize;\n    }\n    set monitorResize(value) {\n      this._monitorResize = value;\n      if (this._monitorResize) {\n        this._subscribeToResize();\n      } else {\n        this._resizeSubscription.unsubscribe();\n      }\n    }\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      this._floating = false;\n      this._monitorResize = false;\n      /** The shared ResizeObserver. */\n      this._resizeObserver = inject(SharedResizeObserver);\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      /** The parent form-field. */\n      this._parent = inject(FLOATING_LABEL_PARENT);\n      /** The current resize event subscription. */\n      this._resizeSubscription = new Subscription();\n    }\n    ngOnDestroy() {\n      this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n      return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n      return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n      // In the case where the label grows in size, the following sequence of events occurs:\n      // 1. The label grows by 1px triggering the ResizeObserver\n      // 2. The notch is expanded to accommodate the entire label\n      // 3. The label expands to its full width, triggering the ResizeObserver again\n      //\n      // This is expected, but If we allow this to all happen within the same macro task it causes an\n      // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n      // the next macro task.\n      setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n      this._resizeSubscription.unsubscribe();\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n          box: 'border-box'\n        }).subscribe(() => this._handleResize());\n      });\n    }\n    static {\n      this.ɵfac = function MatFormFieldFloatingLabel_Factory(t) {\n        return new (t || MatFormFieldFloatingLabel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldFloatingLabel,\n        selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n        hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n        hostVars: 2,\n        hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n          }\n        },\n        inputs: {\n          floating: \"floating\",\n          monitorResize: \"monitorResize\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatFormFieldFloatingLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nlet MatFormFieldLineRipple = /*#__PURE__*/(() => {\n  class MatFormFieldLineRipple {\n    constructor(_elementRef, ngZone) {\n      this._elementRef = _elementRef;\n      this._handleTransitionEnd = event => {\n        const classList = this._elementRef.nativeElement.classList;\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n        if (event.propertyName === 'opacity' && isDeactivating) {\n          classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n        }\n      };\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('transitionend', this._handleTransitionEnd);\n      });\n    }\n    activate() {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove(DEACTIVATING_CLASS);\n      classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n      this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    ngOnDestroy() {\n      this._elementRef.nativeElement.removeEventListener('transitionend', this._handleTransitionEnd);\n    }\n    static {\n      this.ɵfac = function MatFormFieldLineRipple_Factory(t) {\n        return new (t || MatFormFieldLineRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldLineRipple,\n        selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n        hostAttrs: [1, \"mdc-line-ripple\"],\n        standalone: true\n      });\n    }\n  }\n  return MatFormFieldLineRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nlet MatFormFieldNotchedOutline = /*#__PURE__*/(() => {\n  class MatFormFieldNotchedOutline {\n    constructor(_elementRef, _ngZone) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      /** Whether the notch should be opened. */\n      this.open = false;\n    }\n    ngAfterViewInit() {\n      const label = this._elementRef.nativeElement.querySelector('.mdc-floating-label');\n      if (label) {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--upgraded');\n        if (typeof requestAnimationFrame === 'function') {\n          label.style.transitionDuration = '0s';\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => label.style.transitionDuration = '');\n          });\n        }\n      } else {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--no-label');\n      }\n    }\n    _setNotchWidth(labelWidth) {\n      if (!this.open || !labelWidth) {\n        this._notch.nativeElement.style.width = '';\n      } else {\n        const NOTCH_ELEMENT_PADDING = 8;\n        const NOTCH_ELEMENT_BORDER = 1;\n        this._notch.nativeElement.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n      }\n    }\n    static {\n      this.ɵfac = function MatFormFieldNotchedOutline_Factory(t) {\n        return new (t || MatFormFieldNotchedOutline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFormFieldNotchedOutline,\n        selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n        viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mdc-notched-outline\"],\n        hostVars: 2,\n        hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n          }\n        },\n        inputs: {\n          open: [0, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        attrs: _c1,\n        ngContentSelectors: _c2,\n        decls: 5,\n        vars: 0,\n        consts: [[\"notch\", \"\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__leading\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__notch\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__trailing\"]],\n        template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"div\", 1);\n            i0.ɵɵelementStart(1, \"div\", 2, 0);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"div\", 3);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFormFieldNotchedOutline;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: /*#__PURE__*/trigger('transitionMessages', [\n  /*#__PURE__*/\n  // TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), /*#__PURE__*/transition('void => enter', [/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'translateY(-5px)'\n  }), /*#__PURE__*/animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nlet MatFormFieldControl = /*#__PURE__*/(() => {\n  class MatFormFieldControl {\n    static {\n      this.ɵfac = function MatFormFieldControl_Factory(t) {\n        return new (t || MatFormFieldControl)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldControl\n      });\n    }\n  }\n  return MatFormFieldControl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = /*#__PURE__*/new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nlet MatFormField = /*#__PURE__*/(() => {\n  class MatFormField {\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n      return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n      this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n      return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n      if (value !== this._floatLabel) {\n        this._floatLabel = value;\n        // For backwards compatibility. Custom form field controls or directives might set\n        // the \"floatLabel\" input and expect the form field view to be updated automatically.\n        // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n        // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** The form field appearance style. */\n    get appearance() {\n      return this._appearance;\n    }\n    set appearance(value) {\n      const oldValue = this._appearance;\n      const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n          throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n        }\n      }\n      this._appearance = newAppearance;\n      if (this._appearance === 'outline' && this._appearance !== oldValue) {\n        // If the appearance has been switched to `outline`, the label offset needs to be updated.\n        // The update can happen once the view has been re-checked, but not immediately because\n        // the view has not been updated and the notched-outline floating label is not present.\n        this._needsOutlineLabelOffsetUpdate = true;\n      }\n    }\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n      return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n      this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n      return this._hintLabel;\n    }\n    set hintLabel(value) {\n      this._hintLabel = value;\n      this._processHints();\n    }\n    /** Gets the current form field control */\n    get _control() {\n      return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n      this._explicitFormFieldControl = value;\n    }\n    constructor(_elementRef, _changeDetectorRef,\n    /**\n     * @deprecated not needed, to be removed.\n     * @breaking-change 19.0.0 remove this param\n     */\n    _unusedNgZone, _dir, _platform, _defaults, _animationMode,\n    /**\n     * @deprecated not needed, to be removed.\n     * @breaking-change 17.0.0 remove this param\n     */\n    _unusedDocument) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dir = _dir;\n      this._platform = _platform;\n      this._defaults = _defaults;\n      this._animationMode = _animationMode;\n      this._labelChild = contentChild(MatLabel);\n      this._hideRequiredMarker = false;\n      /**\n       * Theme color of the form field. This API is supported in M2 themes only, it\n       * has no effect in M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'primary';\n      this._appearance = DEFAULT_APPEARANCE;\n      this._subscriptSizing = null;\n      this._hintLabel = '';\n      this._hasIconPrefix = false;\n      this._hasTextPrefix = false;\n      this._hasIconSuffix = false;\n      this._hasTextSuffix = false;\n      // Unique id for the internal form field label.\n      this._labelId = `mat-mdc-form-field-label-${nextUniqueId++}`;\n      // Unique id for the hint label.\n      this._hintLabelId = `mat-mdc-hint-${nextUniqueId++}`;\n      /** State of the mat-hint and mat-error animations. */\n      this._subscriptAnimationState = '';\n      this._destroyed = new Subject();\n      this._isFocused = null;\n      this._needsOutlineLabelOffsetUpdate = false;\n      this._previousControl = null;\n      this._injector = inject(Injector);\n      /**\n       * Gets the id of the label element. If no label is present, returns `null`.\n       */\n      this.getLabelId = computed(() => this._hasFloatingLabel() ? this._labelId : null);\n      this._hasFloatingLabel = computed(() => !!this._labelChild());\n      if (_defaults) {\n        if (_defaults.appearance) {\n          this.appearance = _defaults.appearance;\n        }\n        this._hideRequiredMarker = Boolean(_defaults?.hideRequiredMarker);\n        if (_defaults.color) {\n          this.color = _defaults.color;\n        }\n      }\n    }\n    ngAfterViewInit() {\n      // Initial focus state sync. This happens rarely, but we want to account for\n      // it in case the form field control has \"focused\" set to true on init.\n      this._updateFocusState();\n      // Enable animations now. This ensures we don't animate on initial render.\n      this._subscriptAnimationState = 'enter';\n      // Because the above changes a value used in the template after it was checked, we need\n      // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n      this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n      this._assertFormFieldControl();\n      this._initializeSubscript();\n      this._initializePrefixAndSuffix();\n      this._initializeOutlineLabelOffsetSubscriptions();\n    }\n    ngAfterContentChecked() {\n      this._assertFormFieldControl();\n      if (this._control !== this._previousControl) {\n        this._initializeControl(this._previousControl);\n        this._previousControl = this._control;\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges?.unsubscribe();\n      this._valueChanges?.unsubscribe();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n      return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n      // This is for backwards compatibility only. Consumers of the form field might use\n      // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n      // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n      // animation. This is different in MDC where the label always animates, so this method\n      // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n      // the floating label state without animations. The non-MDC implementation was inconsistent\n      // because it always animates if \"floatLabel\" is set away from \"always\".\n      // TODO(devversion): consider removing this method when releasing the MDC form field.\n      if (this._hasFloatingLabel()) {\n        this.floatLabel = 'always';\n      }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n      const control = this._control;\n      const classPrefix = 'mat-mdc-form-field-type-';\n      if (previousControl) {\n        this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n      }\n      if (control.controlType) {\n        this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n      }\n      // Subscribe to changes in the child control state in order to update the form field UI.\n      this._stateChanges?.unsubscribe();\n      this._stateChanges = control.stateChanges.subscribe(() => {\n        this._updateFocusState();\n        this._syncDescribedByIds();\n        this._changeDetectorRef.markForCheck();\n      });\n      this._valueChanges?.unsubscribe();\n      // Run change detection if the value changes.\n      if (control.ngControl && control.ngControl.valueChanges) {\n        this._valueChanges = control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n      }\n    }\n    _checkPrefixAndSuffixTypes() {\n      this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n      this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n      this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n      this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n      this._checkPrefixAndSuffixTypes();\n      // Mark the form field as dirty whenever the prefix or suffix children change. This\n      // is necessary because we conditionally display the prefix/suffix containers based\n      // on whether there is projected content.\n      merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n        this._checkPrefixAndSuffixTypes();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n      // Re-validate when the number of hints changes.\n      this._hintChildren.changes.subscribe(() => {\n        this._processHints();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Update the aria-described by when the number of errors changes.\n      this._errorChildren.changes.subscribe(() => {\n        this._syncDescribedByIds();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Initial mat-hint validation and subscript describedByIds sync.\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n      if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatFormFieldMissingControlError();\n      }\n    }\n    _updateFocusState() {\n      // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n      // certain DOM events are emitted. This is not possible in our implementation of the\n      // form field because we support abstract form field controls which are not necessarily\n      // of type input, nor do we have a reference to a native form field control element. Instead\n      // we handle the focus by checking if the abstract form field control focused state changes.\n      if (this._control.focused && !this._isFocused) {\n        this._isFocused = true;\n        this._lineRipple?.activate();\n      } else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n        this._isFocused = false;\n        this._lineRipple?.deactivate();\n      }\n      this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n    }\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _initializeOutlineLabelOffsetSubscriptions() {\n      // Whenever the prefix changes, schedule an update of the label offset.\n      // TODO(mmalerba): Use ResizeObserver to better support dynamically changing prefix content.\n      this._prefixChildren.changes.subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n      // TODO(mmalerba): Split this into separate `afterRender` calls using the `EarlyRead` and\n      //  `Write` phases.\n      afterRender(() => {\n        if (this._needsOutlineLabelOffsetUpdate) {\n          this._needsOutlineLabelOffsetUpdate = false;\n          this._updateOutlineLabelOffset();\n        }\n      }, {\n        injector: this._injector\n      });\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n      return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n      return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n      return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _shouldLabelFloat() {\n      if (!this._hasFloatingLabel()) {\n        return false;\n      }\n      return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n      const control = this._control ? this._control.ngControl : null;\n      return control && control[prop];\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n      this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n      if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n        this._notchedOutline?._setNotchWidth(0);\n      } else {\n        this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n      }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n      if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        let startHint;\n        let endHint;\n        this._hintChildren.forEach(hint => {\n          if (hint.align === 'start') {\n            if (startHint || this.hintLabel) {\n              throw getMatFormFieldDuplicatedHintError('start');\n            }\n            startHint = hint;\n          } else if (hint.align === 'end') {\n            if (endHint) {\n              throw getMatFormFieldDuplicatedHintError('end');\n            }\n            endHint = hint;\n          }\n        });\n      }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n      if (this._control) {\n        let ids = [];\n        // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n        if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n          ids.push(...this._control.userAriaDescribedBy.split(' '));\n        }\n        if (this._getDisplayedMessages() === 'hint') {\n          const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n          const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n          if (startHint) {\n            ids.push(startHint.id);\n          } else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n          }\n          if (endHint) {\n            ids.push(endHint.id);\n          }\n        } else if (this._errorChildren) {\n          ids.push(...this._errorChildren.map(error => error.id));\n        }\n        this._control.setDescribedByIds(ids);\n      }\n    }\n    /**\n     * Updates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _updateOutlineLabelOffset() {\n      if (!this._hasOutline() || !this._floatingLabel) {\n        return;\n      }\n      const floatingLabel = this._floatingLabel.element;\n      // If no prefix is displayed, reset the outline label offset from potential\n      // previous label offset updates.\n      if (!(this._iconPrefixContainer || this._textPrefixContainer)) {\n        floatingLabel.style.transform = '';\n        return;\n      }\n      // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n      // the label offset update until the zone stabilizes.\n      if (!this._isAttachedToDom()) {\n        this._needsOutlineLabelOffsetUpdate = true;\n        return;\n      }\n      const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n      const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n      const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n      const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n      const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n      const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n      // If the directionality is RTL, the x-axis transform needs to be inverted. This\n      // is because `transformX` does not change based on the page directionality.\n      const negate = this._dir.value === 'rtl' ? '-1' : '1';\n      const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n      const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n      const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n      // Update the translateX of the floating label to account for the prefix container,\n      // but allow the CSS to override this setting via a CSS variable when the label is\n      // floating.\n      floatingLabel.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        ${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset})\n    )`;\n      // Prevent the label from overlapping the suffix when in resting position.\n      const prefixAndSuffixWidth = iconPrefixContainerWidth + textPrefixContainerWidth + iconSuffixContainerWidth + textSuffixContainerWidth;\n      this._elementRef.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n      const element = this._elementRef.nativeElement;\n      if (element.getRootNode) {\n        const rootNode = element.getRootNode();\n        // If the element is inside the DOM the root node will be either the document\n        // or the closest shadow root, otherwise it'll be the element itself.\n        return rootNode && rootNode !== element;\n      }\n      // Otherwise fall back to checking if it's in the document. This doesn't account for\n      // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n      return document.documentElement.contains(element);\n    }\n    static {\n      this.ɵfac = function MatFormField_Factory(t) {\n        return new (t || MatFormField)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.Directionality), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFormField,\n        selectors: [[\"mat-form-field\"]],\n        contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuerySignal(dirIndex, ctx._labelChild, MatLabel, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵqueryAdvance();\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n          }\n        },\n        viewQuery: function MatFormField_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c3, 5);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n            i0.ɵɵviewQuery(_c6, 5);\n            i0.ɵɵviewQuery(_c7, 5);\n            i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n            i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n            i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconSuffixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textSuffixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-form-field\"],\n        hostVars: 42,\n        hostBindings: function MatFormField_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-no-animations\", ctx._animationMode === \"NoopAnimations\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-focused\", ctx._control.focused)(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n          }\n        },\n        inputs: {\n          hideRequiredMarker: \"hideRequiredMarker\",\n          color: \"color\",\n          floatLabel: \"floatLabel\",\n          appearance: \"appearance\",\n          subscriptSizing: \"subscriptSizing\",\n          hintLabel: \"hintLabel\"\n        },\n        exportAs: [\"matFormField\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_FORM_FIELD,\n          useExisting: MatFormField\n        }, {\n          provide: FLOATING_LABEL_PARENT,\n          useExisting: MatFormField\n        }]), i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c9,\n        decls: 18,\n        vars: 21,\n        consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [\"textSuffixContainer\", \"\"], [\"iconSuffixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [1, \"mat-mdc-form-field-error-wrapper\"], [1, \"mat-mdc-form-field-hint-wrapper\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n        template: function MatFormField_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c8);\n            i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(2, \"div\", 6, 1);\n            i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n            });\n            i0.ɵɵtemplate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 7);\n            i0.ɵɵelementStart(5, \"div\", 8);\n            i0.ɵɵtemplate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 9)(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 10)(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 11);\n            i0.ɵɵelementStart(9, \"div\", 12);\n            i0.ɵɵtemplate(10, MatFormField_Conditional_10_Template, 1, 1, null, 13);\n            i0.ɵɵprojection(11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, MatFormField_Conditional_12_Template, 3, 0, \"div\", 14)(13, MatFormField_Conditional_13_Template, 3, 0, \"div\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 16);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 17);\n            i0.ɵɵtemplate(16, MatFormField_Case_16_Template, 2, 1, \"div\", 18)(17, MatFormField_Case_17_Template, 5, 2, \"div\", 19);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_16_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasOutline() ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasIconPrefix ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasTextPrefix ? 8 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasTextSuffix ? 12 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasIconSuffix ? 13 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx._hasOutline() ? 14 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional((tmp_16_0 = ctx._getDisplayedMessages()) === \"error\" ? 16 : tmp_16_0 === \"hint\" ? 17 : -1);\n          }\n        },\n        dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n        styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-filled-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-outlined-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--disabled .cdk-high-contrast-active .mdc-text-field__input{background-color:Window}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top));border-top-right-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color, var(--mat-app-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)));padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px);padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.cdk-high-contrast-active .mdc-text-field--disabled .mdc-floating-label{z-index:1}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-filled-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-filled-text-field-hover-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-filled-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-filled-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-filled-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-filled-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-filled-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-outlined-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-hover-label-text-color, var(--mat-app-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-outlined-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-outlined-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-outlined-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-outlined-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-outline-color, var(--mat-app-outline));border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-hover-outline-color, var(--mat-app-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-focus-outline-color, var(--mat-app-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-hover-outline-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-focus-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),100% - max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))*2)}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none;--mat-form-field-notch-max-width: 100%}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color, var(--mat-app-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color, var(--mat-app-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color, var(--mat-app-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color, var(--mat-app-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height);padding-top:var(--mat-form-field-filled-with-label-container-padding-top);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding);padding-bottom:var(--mat-form-field-container-vertical-padding)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-app-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-app-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-app-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-app-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-app-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-app-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color)}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-app-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-app-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-app-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-app-body-large-weight))}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color)}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color)}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-app-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-app-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-app-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matFormFieldAnimations.transitionMessages]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatFormFieldModule = /*#__PURE__*/(() => {\n  class MatFormFieldModule {\n    static {\n      this.ɵfac = function MatFormFieldModule_Factory(t) {\n        return new (t || MatFormFieldModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatFormFieldModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, ObserversModule, MatCommonModule]\n      });\n    }\n  }\n  return MatFormFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, booleanAttribute, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nlet AutofillMonitor = /*#__PURE__*/(() => {\n  class AutofillMonitor {\n    constructor(_platform, _ngZone) {\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n      if (!this._platform.isBrowser) {\n        return EMPTY;\n      }\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        return info.subject;\n      }\n      const result = new Subject();\n      const cssClass = 'cdk-text-field-autofilled';\n      const listener = event => {\n        // Animation events fire on initial element render, we check for the presence of the autofill\n        // CSS class to make sure this is a real change in state, not just the initial render before\n        // we fire off events.\n        if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {\n          element.classList.add(cssClass);\n          this._ngZone.run(() => result.next({\n            target: event.target,\n            isAutofilled: true\n          }));\n        } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {\n          element.classList.remove(cssClass);\n          this._ngZone.run(() => result.next({\n            target: event.target,\n            isAutofilled: false\n          }));\n        }\n      };\n      this._ngZone.runOutsideAngular(() => {\n        element.addEventListener('animationstart', listener, listenerOptions);\n        element.classList.add('cdk-text-field-autofill-monitored');\n      });\n      this._monitoredElements.set(element, {\n        subject: result,\n        unlisten: () => {\n          element.removeEventListener('animationstart', listener, listenerOptions);\n        }\n      });\n      return result;\n    }\n    stopMonitoring(elementOrRef) {\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        info.unlisten();\n        info.subject.complete();\n        element.classList.remove('cdk-text-field-autofill-monitored');\n        element.classList.remove('cdk-text-field-autofilled');\n        this._monitoredElements.delete(element);\n      }\n    }\n    ngOnDestroy() {\n      this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    static {\n      this.ɵfac = function AutofillMonitor_Factory(t) {\n        return new (t || AutofillMonitor)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AutofillMonitor,\n        factory: AutofillMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AutofillMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nlet CdkAutofill = /*#__PURE__*/(() => {\n  class CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n      this._elementRef = _elementRef;\n      this._autofillMonitor = _autofillMonitor;\n      /** Emits when the autofill state of the element changes. */\n      this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n      this._autofillMonitor.monitor(this._elementRef).subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n      this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n    static {\n      this.ɵfac = function CdkAutofill_Factory(t) {\n        return new (t || CdkAutofill)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(AutofillMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAutofill,\n        selectors: [[\"\", \"cdkAutofill\", \"\"]],\n        outputs: {\n          cdkAutofill: \"cdkAutofill\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return CdkAutofill;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Directive to automatically resize a textarea to fit its content. */\nlet CdkTextareaAutosize = /*#__PURE__*/(() => {\n  class CdkTextareaAutosize {\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n      return this._minRows;\n    }\n    set minRows(value) {\n      this._minRows = coerceNumberProperty(value);\n      this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n      return this._maxRows;\n    }\n    set maxRows(value) {\n      this._maxRows = coerceNumberProperty(value);\n      this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n      return this._enabled;\n    }\n    set enabled(value) {\n      // Only act if the actual value changed. This specifically helps to not run\n      // resizeToFitContent too early (i.e. before ngAfterViewInit)\n      if (this._enabled !== value) {\n        (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n      }\n    }\n    get placeholder() {\n      return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n      this._cachedPlaceholderHeight = undefined;\n      if (value) {\n        this._textareaElement.setAttribute('placeholder', value);\n      } else {\n        this._textareaElement.removeAttribute('placeholder');\n      }\n      this._cacheTextareaPlaceholderHeight();\n    }\n    constructor(_elementRef, _platform, _ngZone, /** @breaking-change 11.0.0 make document required */\n    document) {\n      this._elementRef = _elementRef;\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._destroyed = new Subject();\n      this._enabled = true;\n      /**\n       * Value of minRows as of last resize. If the minRows has decreased, the\n       * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n       * does not have the same problem because it does not affect the textarea's scrollHeight.\n       */\n      this._previousMinRows = -1;\n      this._isViewInited = false;\n      /** Handles `focus` and `blur` events. */\n      this._handleFocusEvent = event => {\n        this._hasFocus = event.type === 'focus';\n      };\n      this._document = document;\n      this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n      const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n      if (minHeight) {\n        this._textareaElement.style.minHeight = minHeight;\n      }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n      const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n      if (maxHeight) {\n        this._textareaElement.style.maxHeight = maxHeight;\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        // Remember the height which we started with in case autosizing is disabled\n        this._initialHeight = this._textareaElement.style.height;\n        this.resizeToFitContent();\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          fromEvent(window, 'resize').pipe(auditTime(16), takeUntil(this._destroyed)).subscribe(() => this.resizeToFitContent(true));\n          this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n          this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n        });\n        this._isViewInited = true;\n        this.resizeToFitContent(true);\n      }\n    }\n    ngOnDestroy() {\n      this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n      this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n      if (this._cachedLineHeight) {\n        return;\n      }\n      // Use a clone element because we have to override some styles.\n      let textareaClone = this._textareaElement.cloneNode(false);\n      textareaClone.rows = 1;\n      // Use `position: absolute` so that this doesn't cause a browser layout and use\n      // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n      // would affect the height.\n      textareaClone.style.position = 'absolute';\n      textareaClone.style.visibility = 'hidden';\n      textareaClone.style.border = 'none';\n      textareaClone.style.padding = '0';\n      textareaClone.style.height = '';\n      textareaClone.style.minHeight = '';\n      textareaClone.style.maxHeight = '';\n      // In Firefox it happens that textarea elements are always bigger than the specified amount\n      // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n      // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n      // to hidden. This ensures that there is no invalid calculation of the line height.\n      // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n      textareaClone.style.overflow = 'hidden';\n      this._textareaElement.parentNode.appendChild(textareaClone);\n      this._cachedLineHeight = textareaClone.clientHeight;\n      textareaClone.remove();\n      // Min and max heights have to be re-calculated if the cached line height changes\n      this._setMinHeight();\n      this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n      const element = this._textareaElement;\n      const previousMargin = element.style.marginBottom || '';\n      const isFirefox = this._platform.FIREFOX;\n      const needsMarginFiller = isFirefox && this._hasFocus;\n      const measuringClass = isFirefox ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';\n      // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n      // work around it by assigning a temporary margin with the same height as the `textarea` so that\n      // it occupies the same amount of space. See #23233.\n      if (needsMarginFiller) {\n        element.style.marginBottom = `${element.clientHeight}px`;\n      }\n      // Reset the textarea height to auto in order to shrink back to its default size.\n      // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n      element.classList.add(measuringClass);\n      // The measuring class includes a 2px padding to workaround an issue with Chrome,\n      // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n      const scrollHeight = element.scrollHeight - 4;\n      element.classList.remove(measuringClass);\n      if (needsMarginFiller) {\n        element.style.marginBottom = previousMargin;\n      }\n      return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n      if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n        return;\n      }\n      if (!this.placeholder) {\n        this._cachedPlaceholderHeight = 0;\n        return;\n      }\n      const value = this._textareaElement.value;\n      this._textareaElement.value = this._textareaElement.placeholder;\n      this._cachedPlaceholderHeight = this._measureScrollHeight();\n      this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n      if (this._platform.isBrowser) {\n        this.resizeToFitContent();\n      }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n      // If autosizing is disabled, just skip everything else\n      if (!this._enabled) {\n        return;\n      }\n      this._cacheTextareaLineHeight();\n      this._cacheTextareaPlaceholderHeight();\n      // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n      // in checking the height of the textarea.\n      if (!this._cachedLineHeight) {\n        return;\n      }\n      const textarea = this._elementRef.nativeElement;\n      const value = textarea.value;\n      // Only resize if the value or minRows have changed since these calculations can be expensive.\n      if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n        return;\n      }\n      const scrollHeight = this._measureScrollHeight();\n      const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n      // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n      textarea.style.height = `${height}px`;\n      this._ngZone.runOutsideAngular(() => {\n        if (typeof requestAnimationFrame !== 'undefined') {\n          requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n        } else {\n          setTimeout(() => this._scrollToCaretPosition(textarea));\n        }\n      });\n      this._previousValue = value;\n      this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n      // Do not try to change the textarea, if the initialHeight has not been determined yet\n      // This might potentially remove styles when reset() is called before ngAfterViewInit\n      if (this._initialHeight !== undefined) {\n        this._textareaElement.style.height = this._initialHeight;\n      }\n    }\n    _noopInputHandler() {\n      // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n      const {\n        selectionStart,\n        selectionEnd\n      } = textarea;\n      // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n      // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n      // between the time we requested the animation frame and when it was executed.\n      // Also note that we have to assert that the textarea is focused before we set the\n      // selection range. Setting the selection range on a non-focused textarea will cause\n      // it to receive focus on IE and Edge.\n      if (!this._destroyed.isStopped && this._hasFocus) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n      }\n    }\n    static {\n      this.ɵfac = function CdkTextareaAutosize_Factory(t) {\n        return new (t || CdkTextareaAutosize)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTextareaAutosize,\n        selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]],\n        hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"],\n        hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() {\n              return ctx._noopInputHandler();\n            });\n          }\n        },\n        inputs: {\n          minRows: [0, \"cdkAutosizeMinRows\", \"minRows\"],\n          maxRows: [0, \"cdkAutosizeMaxRows\", \"maxRows\"],\n          enabled: [2, \"cdkTextareaAutosize\", \"enabled\", booleanAttribute],\n          placeholder: \"placeholder\"\n        },\n        exportAs: [\"cdkTextareaAutosize\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkTextareaAutosize;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TextFieldModule = /*#__PURE__*/(() => {\n  class TextFieldModule {\n    static {\n      this.ɵfac = function TextFieldModule_Factory(t) {\n        return new (t || TextFieldModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: TextFieldModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return TextFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];\nlet nextUniqueId = 0;\nlet MatInput = /*#__PURE__*/(() => {\n  class MatInput {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n      // Browsers may not fire the blur event if the input is disabled too quickly.\n      // Reset from here to ensure that the element doesn't become stuck.\n      if (this.focused) {\n        this.focused = false;\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n      return this._type;\n    }\n    set type(value) {\n      this._type = value || 'text';\n      this._validateType();\n      // When using Angular inputs, developers are no longer able to set the properties on the native\n      // input element. To ensure that bindings for `type` work, we need to sync the setter\n      // with the native property. Textarea elements don't support the type property or attribute.\n      if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n        this._elementRef.nativeElement.type = this._type;\n      }\n      this._ensureWheelDefaultBehavior();\n    }\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n      return this._inputValueAccessor.value;\n    }\n    set value(value) {\n      if (value !== this.value) {\n        this._inputValueAccessor.value = value;\n        this.stateChanges.next();\n      }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n      return this._readonly;\n    }\n    set readonly(value) {\n      this._readonly = coerceBooleanProperty(value);\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_elementRef, _platform, ngControl, parentForm, parentFormGroup, defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, _ngZone,\n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form field for determining whether the placeholder has been promoted.\n    _formField) {\n      this._elementRef = _elementRef;\n      this._platform = _platform;\n      this.ngControl = ngControl;\n      this._autofillMonitor = _autofillMonitor;\n      this._ngZone = _ngZone;\n      this._formField = _formField;\n      this._uid = `mat-input-${nextUniqueId++}`;\n      this._webkitBlinkWheelListenerAttached = false;\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.focused = false;\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.stateChanges = new Subject();\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.controlType = 'mat-input';\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.autofilled = false;\n      this._disabled = false;\n      this._type = 'text';\n      this._readonly = false;\n      this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(t => getSupportedInputTypes().has(t));\n      this._iOSKeyupListener = event => {\n        const el = event.target;\n        // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n        // indicate different things. If the value is 0, it means that the caret is at the start\n        // of the input, whereas a value of `null` means that the input doesn't support\n        // manipulating the selection range. Inputs that don't support setting the selection range\n        // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n        // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n        if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting\n          // `1, 1` fixes it for the first time that you type text and\n          // then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      };\n      this._webkitBlinkWheelListener = () => {\n        // This is a noop function and is used to enable mouse wheel input\n        // on number inputs\n        // on blink and webkit browsers.\n      };\n      const element = this._elementRef.nativeElement;\n      const nodeName = element.nodeName.toLowerCase();\n      // If no input value accessor was explicitly specified, use the element as the input value\n      // accessor.\n      this._inputValueAccessor = inputValueAccessor || element;\n      this._previousNativeValue = this.value;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n      // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n      // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n      // exists on iOS, we only bother to install the listener on iOS.\n      if (_platform.IOS) {\n        _ngZone.runOutsideAngular(() => {\n          _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n        });\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._isServer = !this._platform.isBrowser;\n      this._isNativeSelect = nodeName === 'select';\n      this._isTextarea = nodeName === 'textarea';\n      this._isInFormField = !!_formField;\n      if (this._isNativeSelect) {\n        this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n          this.autofilled = event.isAutofilled;\n          this.stateChanges.next();\n        });\n      }\n    }\n    ngOnChanges() {\n      this.stateChanges.next();\n    }\n    ngOnDestroy() {\n      this.stateChanges.complete();\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n      }\n      if (this._platform.IOS) {\n        this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n      }\n      if (this._webkitBlinkWheelListenerAttached) {\n        this._elementRef.nativeElement.removeEventListener('wheel', this._webkitBlinkWheelListener);\n      }\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n        // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n        // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n        // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n        // disabled.\n        if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n          this.disabled = this.ngControl.disabled;\n          this.stateChanges.next();\n        }\n      }\n      // We need to dirty-check the native element's value, because there are some cases where\n      // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n      // updating the value using `emitEvent: false`).\n      this._dirtyCheckNativeValue();\n      // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n      // present or not depends on a query which is prone to \"changed after checked\" errors.\n      this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n      if (isFocused !== this.focused) {\n        this.focused = isFocused;\n        this.stateChanges.next();\n      }\n    }\n    _onInput() {\n      // This is a noop function and is used to let Angular know whenever the value changes.\n      // Angular will run a new change detection each time the `input` event has been dispatched.\n      // It's necessary that Angular recognizes the value change, because when floatingLabel\n      // is set to false and Angular forms aren't used, the placeholder won't recognize the\n      // value changes and will not disappear.\n      // Listening to the input event wouldn't be necessary when the input is using the\n      // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n      const newValue = this._elementRef.nativeElement.value;\n      if (this._previousNativeValue !== newValue) {\n        this._previousNativeValue = newValue;\n        this.stateChanges.next();\n      }\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n      const placeholder = this._getPlaceholder();\n      if (placeholder !== this._previousPlaceholder) {\n        const element = this._elementRef.nativeElement;\n        this._previousPlaceholder = placeholder;\n        placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n      }\n    }\n    /** Gets the current placeholder of the form field. */\n    _getPlaceholder() {\n      return this.placeholder || null;\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n      if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatInputUnsupportedTypeError(this._type);\n      }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n      return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n      // The `validity` property won't be present on platform-server.\n      let validity = this._elementRef.nativeElement.validity;\n      return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n      return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      if (this._isNativeSelect) {\n        // For a single-selection `<select>`, the label should float when the selected option has\n        // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n        // overlapping the label with the options.\n        const selectElement = this._elementRef.nativeElement;\n        const firstOption = selectElement.options[0];\n        // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n        // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n        return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n      } else {\n        return this.focused || !this.empty;\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      if (ids.length) {\n        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        this._elementRef.nativeElement.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n      // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n      // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n      if (!this.focused) {\n        this.focus();\n      }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n      const element = this._elementRef.nativeElement;\n      return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n    /**\n     * In blink and webkit browsers a focused number input does not increment or decrement its value\n     * on mouse wheel interaction unless a wheel event listener is attached to it or one of its ancestors or a passive wheel listener is attached somewhere in the DOM.\n     * For example: Hitting a tooltip once enables the mouse wheel input for all number inputs as long as it exists.\n     * In order to get reliable and intuitive behavior we apply a wheel event on our own\n     * thus making sure increment and decrement by mouse wheel works every time.\n     * @docs-private\n     */\n    _ensureWheelDefaultBehavior() {\n      if (!this._webkitBlinkWheelListenerAttached && this._type === 'number' && (this._platform.BLINK || this._platform.WEBKIT)) {\n        this._ngZone.runOutsideAngular(() => {\n          this._elementRef.nativeElement.addEventListener('wheel', this._webkitBlinkWheelListener);\n        });\n        this._webkitBlinkWheelListenerAttached = true;\n      }\n      if (this._webkitBlinkWheelListenerAttached && this._type !== 'number') {\n        this._elementRef.nativeElement.removeEventListener('wheel', this._webkitBlinkWheelListener);\n        this._webkitBlinkWheelListenerAttached = true;\n      }\n    }\n    static {\n      this.ɵfac = function MatInput_Factory(t) {\n        return new (t || MatInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.NgControl, 10), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(i4.AutofillMonitor), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatInput,\n        selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-input-element\"],\n        hostVars: 18,\n        hostBindings: function MatInput_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() {\n              return ctx._focusChanged(true);\n            })(\"blur\", function MatInput_blur_HostBindingHandler() {\n              return ctx._focusChanged(false);\n            })(\"input\", function MatInput_input_HostBindingHandler() {\n              return ctx._onInput();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n            i0.ɵɵattribute(\"name\", ctx.name || null)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required)(\"id\", ctx.id);\n            i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-form-field-textarea-control\", ctx._isInFormField && ctx._isTextarea)(\"mat-mdc-form-field-input-control\", ctx._isInFormField)(\"mdc-text-field__input\", ctx._isInFormField)(\"mat-mdc-native-select-inline\", ctx._isInlineSelect());\n          }\n        },\n        inputs: {\n          disabled: \"disabled\",\n          id: \"id\",\n          placeholder: \"placeholder\",\n          name: \"name\",\n          required: \"required\",\n          type: \"type\",\n          errorStateMatcher: \"errorStateMatcher\",\n          userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n          value: \"value\",\n          readonly: \"readonly\"\n        },\n        exportAs: [\"matInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatInput\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatInputModule = /*#__PURE__*/(() => {\n  class MatInputModule {\n    static {\n      this.ɵfac = function MatInputModule_Factory(t) {\n        return new (t || MatInputModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatInputModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule]\n      });\n    }\n  }\n  return MatInputModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import { CdkMonitorFocus, CdkTrapFocus, A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { NgClass, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, EventEmitter, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, ChangeDetectorRef, booleanAttribute, Directive, signal, Attribute, ContentChild, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButton, MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { normalizePassiveListenerOptions, Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { startWith, take, filter } from 'rxjs/operators';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/** @docs-private */\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction _forTrack0($index, $item) {\n  return this._trackRow($item);\n}\nconst _forTrack1 = ($index, $item) => $item.id;\nfunction MatCalendarBody_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0._firstRowOffset);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0._firstRowOffset >= ctx_r0.labelMinRequiredCells ? ctx_r0.label : \"\", \" \");\n  }\n}\nfunction MatCalendarBody_For_2_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6)(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MatCalendarBody_For_2_For_3_Template_button_click_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._cellClicked(item_r3, $event));\n    })(\"focus\", function MatCalendarBody_For_2_For_3_Template_button_focus_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._emitActiveDateChange(item_r3, $event));\n    });\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ɵ$index_14_r4 = ctx.$index;\n    const ɵ$index_7_r5 = i0.ɵɵnextContext().$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r0._cellWidth)(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"data-mat-row\", ɵ$index_7_r5)(\"data-mat-col\", ɵ$index_14_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r3.enabled)(\"mat-calendar-body-active\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-range-start\", ctx_r0._isRangeStart(item_r3.compareValue))(\"mat-calendar-body-range-end\", ctx_r0._isRangeEnd(item_r3.compareValue))(\"mat-calendar-body-in-range\", ctx_r0._isInRange(item_r3.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r0._isComparisonBridgeStart(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-bridge-end\", ctx_r0._isComparisonBridgeEnd(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-start\", ctx_r0._isComparisonStart(item_r3.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r0._isComparisonEnd(item_r3.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r0._isInComparisonRange(item_r3.compareValue))(\"mat-calendar-body-preview-start\", ctx_r0._isPreviewStart(item_r3.compareValue))(\"mat-calendar-body-preview-end\", ctx_r0._isPreviewEnd(item_r3.compareValue))(\"mat-calendar-body-in-preview\", ctx_r0._isInPreview(item_r3.compareValue));\n    i0.ɵɵproperty(\"ngClass\", item_r3.cssClasses)(\"tabindex\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4) ? 0 : -1);\n    i0.ɵɵattribute(\"aria-label\", item_r3.ariaLabel)(\"aria-disabled\", !item_r3.enabled || null)(\"aria-pressed\", ctx_r0._isSelected(item_r3.compareValue))(\"aria-current\", ctx_r0.todayValue === item_r3.compareValue ? \"date\" : null)(\"aria-describedby\", ctx_r0._getDescribedby(item_r3.compareValue));\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r0._isSelected(item_r3.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r0._isComparisonIdentical(item_r3.compareValue))(\"mat-calendar-body-today\", ctx_r0.todayValue === item_r3.compareValue);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r3.displayValue, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵtemplate(1, MatCalendarBody_For_2_Conditional_1_Template, 2, 6, \"td\", 4);\n    i0.ɵɵrepeaterCreate(2, MatCalendarBody_For_2_For_3_Template, 5, 48, \"td\", 5, _forTrack1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    const ɵ$index_7_r5 = ctx.$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ɵ$index_7_r5 === 0 && ctx_r0._firstRowOffset ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(row_r6);\n  }\n}\nfunction MatMonthView_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 2)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.long);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\nfunction MatCalendar_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-month-view\", 4);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"_userSelection\", function MatCalendar_Case_2_Template_mat_month_view__userSelection_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dateSelected($event));\n    })(\"dragStarted\", function MatCalendar_Case_2_Template_mat_month_view_dragStarted_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragStarted($event));\n    })(\"dragEnded\", function MatCalendar_Case_2_Template_mat_month_view_dragEnded_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragEnded($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd)(\"startDateAccessibleName\", ctx_r1.startDateAccessibleName)(\"endDateAccessibleName\", ctx_r1.endDateAccessibleName)(\"activeDrag\", ctx_r1._activeDrag);\n  }\n}\nfunction MatCalendar_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-year-view\", 5);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"monthSelected\", function MatCalendar_Case_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._monthSelectedInYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"month\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatCalendar_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-multi-year-view\", 6);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"yearSelected\", function MatCalendar_Case_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._yearSelectedInMultiYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"year\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) {}\nconst _c2 = [\"button\"];\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction MatDatepickerToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction createMissingDateImplError(provider) {\n  return Error(`MatDatepicker: No provider found for ${provider}. You must add one of the following ` + `to your app config: provideNativeDateAdapter, provideDateFnsAdapter, ` + `provideLuxonDateAdapter, provideMomentDateAdapter, or provide a custom implementation.`);\n}\n\n/** Datepicker data that requires internationalization. */\nlet MatDatepickerIntl = /*#__PURE__*/(() => {\n  class MatDatepickerIntl {\n    constructor() {\n      /**\n       * Stream that emits whenever the labels here are changed. Use this to notify\n       * components if the labels have changed after initialization.\n       */\n      this.changes = new Subject();\n      /** A label for the calendar popup (used by screen readers). */\n      this.calendarLabel = 'Calendar';\n      /** A label for the button used to open the calendar popup (used by screen readers). */\n      this.openCalendarLabel = 'Open calendar';\n      /** Label for the button used to close the calendar popup. */\n      this.closeCalendarLabel = 'Close calendar';\n      /** A label for the previous month button (used by screen readers). */\n      this.prevMonthLabel = 'Previous month';\n      /** A label for the next month button (used by screen readers). */\n      this.nextMonthLabel = 'Next month';\n      /** A label for the previous year button (used by screen readers). */\n      this.prevYearLabel = 'Previous year';\n      /** A label for the next year button (used by screen readers). */\n      this.nextYearLabel = 'Next year';\n      /** A label for the previous multi-year button (used by screen readers). */\n      this.prevMultiYearLabel = 'Previous 24 years';\n      /** A label for the next multi-year button (used by screen readers). */\n      this.nextMultiYearLabel = 'Next 24 years';\n      /** A label for the 'switch to month view' button (used by screen readers). */\n      this.switchToMonthViewLabel = 'Choose date';\n      /** A label for the 'switch to year view' button (used by screen readers). */\n      this.switchToMultiYearViewLabel = 'Choose month and year';\n      /**\n       * A label for the first date of a range of dates (used by screen readers).\n       * @deprecated Provide your own internationalization string.\n       * @breaking-change 17.0.0\n       */\n      this.startDateLabel = 'Start date';\n      /**\n       * A label for the last date of a range of dates (used by screen readers).\n       * @deprecated Provide your own internationalization string.\n       * @breaking-change 17.0.0\n       */\n      this.endDateLabel = 'End date';\n    }\n    /** Formats a range of years (used for visuals). */\n    formatYearRange(start, end) {\n      return `${start} \\u2013 ${end}`;\n    }\n    /** Formats a label for a range of years (used by screen readers). */\n    formatYearRangeLabel(start, end) {\n      return `${start} to ${end}`;\n    }\n    static {\n      this.ɵfac = function MatDatepickerIntl_Factory(t) {\n        return new (t || MatDatepickerIntl)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatDatepickerIntl,\n        factory: MatDatepickerIntl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatDatepickerIntl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet uniqueIdCounter$1 = 0;\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n  constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n    this.cssClasses = cssClasses;\n    this.compareValue = compareValue;\n    this.rawValue = rawValue;\n    this.id = uniqueIdCounter$1++;\n  }\n}\nlet calendarBodyId = 1;\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n/** Event options that can be used to bind a passive, capturing event. */\nconst passiveCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Event options that can be used to bind a passive, non-capturing event. */\nconst passiveEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nlet MatCalendarBody = /*#__PURE__*/(() => {\n  class MatCalendarBody {\n    ngAfterViewChecked() {\n      if (this._focusActiveCellAfterViewChecked) {\n        this._focusActiveCell();\n        this._focusActiveCellAfterViewChecked = false;\n      }\n    }\n    constructor(_elementRef, _ngZone) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._platform = inject(Platform);\n      /**\n       * Used to focus the active cell after change detection has run.\n       */\n      this._focusActiveCellAfterViewChecked = false;\n      /** The number of columns in the table. */\n      this.numCols = 7;\n      /** The cell number of the active cell in the table. */\n      this.activeCell = 0;\n      /** Whether a range is being selected. */\n      this.isRange = false;\n      /**\n       * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n       * maintained even as the table resizes.\n       */\n      this.cellAspectRatio = 1;\n      /** Start of the preview range. */\n      this.previewStart = null;\n      /** End of the preview range. */\n      this.previewEnd = null;\n      /** Emits when a new value is selected. */\n      this.selectedValueChange = new EventEmitter();\n      /** Emits when the preview has changed as a result of a user action. */\n      this.previewChange = new EventEmitter();\n      this.activeDateChange = new EventEmitter();\n      /** Emits the date at the possible start of a drag event. */\n      this.dragStarted = new EventEmitter();\n      /** Emits the date at the conclusion of a drag, or null if mouse was not released on a date. */\n      this.dragEnded = new EventEmitter();\n      this._didDragSinceMouseDown = false;\n      this._injector = inject(Injector);\n      /**\n       * Tracking function for rows based on their identity. Ideally we would use some sort of\n       * key on the row, but that would require a breaking change for the `rows` input. We don't\n       * use the built-in identity tracking, because it logs warnings.\n       */\n      this._trackRow = row => row;\n      /**\n       * Event handler for when the user enters an element\n       * inside the calendar body (e.g. by hovering in or focus).\n       */\n      this._enterHandler = event => {\n        if (this._skipNextFocus && event.type === 'focus') {\n          this._skipNextFocus = false;\n          return;\n        }\n        // We only need to hit the zone when we're selecting a range.\n        if (event.target && this.isRange) {\n          const cell = this._getCellFromElement(event.target);\n          if (cell) {\n            this._ngZone.run(() => this.previewChange.emit({\n              value: cell.enabled ? cell : null,\n              event\n            }));\n          }\n        }\n      };\n      this._touchmoveHandler = event => {\n        if (!this.isRange) return;\n        const target = getActualTouchTarget(event);\n        const cell = target ? this._getCellFromElement(target) : null;\n        if (target !== event.target) {\n          this._didDragSinceMouseDown = true;\n        }\n        // If the initial target of the touch is a date cell, prevent default so\n        // that the move is not handled as a scroll.\n        if (getCellElement(event.target)) {\n          event.preventDefault();\n        }\n        this._ngZone.run(() => this.previewChange.emit({\n          value: cell?.enabled ? cell : null,\n          event\n        }));\n      };\n      /**\n       * Event handler for when the user's pointer leaves an element\n       * inside the calendar body (e.g. by hovering out or blurring).\n       */\n      this._leaveHandler = event => {\n        // We only need to hit the zone when we're selecting a range.\n        if (this.previewEnd !== null && this.isRange) {\n          if (event.type !== 'blur') {\n            this._didDragSinceMouseDown = true;\n          }\n          // Only reset the preview end value when leaving cells. This looks better, because\n          // we have a gap between the cells and the rows and we don't want to remove the\n          // range just for it to show up again when the user moves a few pixels to the side.\n          if (event.target && this._getCellFromElement(event.target) && !(event.relatedTarget && this._getCellFromElement(event.relatedTarget))) {\n            this._ngZone.run(() => this.previewChange.emit({\n              value: null,\n              event\n            }));\n          }\n        }\n      };\n      /**\n       * Triggered on mousedown or touchstart on a date cell.\n       * Respsonsible for starting a drag sequence.\n       */\n      this._mousedownHandler = event => {\n        if (!this.isRange) return;\n        this._didDragSinceMouseDown = false;\n        // Begin a drag if a cell within the current range was targeted.\n        const cell = event.target && this._getCellFromElement(event.target);\n        if (!cell || !this._isInRange(cell.compareValue)) {\n          return;\n        }\n        this._ngZone.run(() => {\n          this.dragStarted.emit({\n            value: cell.rawValue,\n            event\n          });\n        });\n      };\n      /** Triggered on mouseup anywhere. Respsonsible for ending a drag sequence. */\n      this._mouseupHandler = event => {\n        if (!this.isRange) return;\n        const cellElement = getCellElement(event.target);\n        if (!cellElement) {\n          // Mouseup happened outside of datepicker. Cancel drag.\n          this._ngZone.run(() => {\n            this.dragEnded.emit({\n              value: null,\n              event\n            });\n          });\n          return;\n        }\n        if (cellElement.closest('.mat-calendar-body') !== this._elementRef.nativeElement) {\n          // Mouseup happened inside a different month instance.\n          // Allow it to handle the event.\n          return;\n        }\n        this._ngZone.run(() => {\n          const cell = this._getCellFromElement(cellElement);\n          this.dragEnded.emit({\n            value: cell?.rawValue ?? null,\n            event\n          });\n        });\n      };\n      /** Triggered on touchend anywhere. Respsonsible for ending a drag sequence. */\n      this._touchendHandler = event => {\n        const target = getActualTouchTarget(event);\n        if (target) {\n          this._mouseupHandler({\n            target\n          });\n        }\n      };\n      this._id = `mat-calendar-body-${calendarBodyId++}`;\n      this._startDateLabelId = `${this._id}-start-date`;\n      this._endDateLabelId = `${this._id}-end-date`;\n      _ngZone.runOutsideAngular(() => {\n        const element = _elementRef.nativeElement;\n        // `touchmove` is active since we need to call `preventDefault`.\n        element.addEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n        element.addEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n        element.addEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n        element.addEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n        element.addEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n        element.addEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n        element.addEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n        if (this._platform.isBrowser) {\n          window.addEventListener('mouseup', this._mouseupHandler);\n          window.addEventListener('touchend', this._touchendHandler);\n        }\n      });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n      // Ignore \"clicks\" that are actually canceled drags (eg the user dragged\n      // off and then went back to this cell to undo).\n      if (this._didDragSinceMouseDown) {\n        return;\n      }\n      if (cell.enabled) {\n        this.selectedValueChange.emit({\n          value: cell.value,\n          event\n        });\n      }\n    }\n    _emitActiveDateChange(cell, event) {\n      if (cell.enabled) {\n        this.activeDateChange.emit({\n          value: cell.value,\n          event\n        });\n      }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n      return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n      const columnChanges = changes['numCols'];\n      const {\n        rows,\n        numCols\n      } = this;\n      if (changes['rows'] || columnChanges) {\n        this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n      }\n      if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n        this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n      }\n      if (columnChanges || !this._cellWidth) {\n        this._cellWidth = `${100 / numCols}%`;\n      }\n    }\n    ngOnDestroy() {\n      const element = this._elementRef.nativeElement;\n      element.removeEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n      element.removeEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n      element.removeEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n      element.removeEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n      element.removeEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n      element.removeEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n      element.removeEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n      if (this._platform.isBrowser) {\n        window.removeEventListener('mouseup', this._mouseupHandler);\n        window.removeEventListener('touchend', this._touchendHandler);\n      }\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n      let cellNumber = rowIndex * this.numCols + colIndex;\n      // Account for the fact that the first row may not have as many cells.\n      if (rowIndex) {\n        cellNumber -= this._firstRowOffset;\n      }\n      return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     *\n     * Adding a 0ms setTimeout seems to fix Voiceover losing focus when pressing PageUp/PageDown\n     * (issue #24330).\n     *\n     * Determined a 0ms by gradually increasing duration from 0 and testing two use cases with screen\n     * reader enabled:\n     *\n     * 1. Pressing PageUp/PageDown repeatedly with pausing between each key press.\n     * 2. Pressing and holding the PageDown key with repeated keys enabled.\n     *\n     * Test 1 worked roughly 95-99% of the time with 0ms and got a little bit better as the duration\n     * increased. Test 2 got slightly better until the duration was long enough to interfere with\n     * repeated keys. If the repeated key speed was faster than the timeout duration, then pressing\n     * and holding pagedown caused the entire page to scroll.\n     *\n     * Since repeated key speed can verify across machines, determined that any duration could\n     * potentially interfere with repeated keys. 0ms would be best because it almost entirely\n     * eliminates the focus being lost in Voiceover (#24330) without causing unintended side effects.\n     * Adding delay also complicates writing tests.\n     */\n    _focusActiveCell(movePreview = true) {\n      afterNextRender(() => {\n        setTimeout(() => {\n          const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n          if (activeCell) {\n            if (!movePreview) {\n              this._skipNextFocus = true;\n            }\n            activeCell.focus();\n          }\n        });\n      }, {\n        injector: this._injector\n      });\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _scheduleFocusActiveCellAfterViewChecked() {\n      this._focusActiveCellAfterViewChecked = true;\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n      return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n      return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n      return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n      return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n      if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n        return false;\n      }\n      let previousCell = this.rows[rowIndex][colIndex - 1];\n      if (!previousCell) {\n        const previousRow = this.rows[rowIndex - 1];\n        previousCell = previousRow && previousRow[previousRow.length - 1];\n      }\n      return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n      if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n        return false;\n      }\n      let nextCell = this.rows[rowIndex][colIndex + 1];\n      if (!nextCell) {\n        const nextRow = this.rows[rowIndex + 1];\n        nextCell = nextRow && nextRow[0];\n      }\n      return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n      return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n      return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n      // Note that we don't need to null check the start/end\n      // here, because the `value` will always be defined.\n      return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n      return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n      return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n      return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Gets ids of aria descriptions for the start and end of a date range. */\n    _getDescribedby(value) {\n      if (!this.isRange) {\n        return null;\n      }\n      if (this.startValue === value && this.endValue === value) {\n        return `${this._startDateLabelId} ${this._endDateLabelId}`;\n      } else if (this.startValue === value) {\n        return this._startDateLabelId;\n      } else if (this.endValue === value) {\n        return this._endDateLabelId;\n      }\n      return null;\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n      const cell = getCellElement(element);\n      if (cell) {\n        const row = cell.getAttribute('data-mat-row');\n        const col = cell.getAttribute('data-mat-col');\n        if (row && col) {\n          return this.rows[parseInt(row)][parseInt(col)];\n        }\n      }\n      return null;\n    }\n    static {\n      this.ɵfac = function MatCalendarBody_Factory(t) {\n        return new (t || MatCalendarBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendarBody,\n        selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n        hostAttrs: [1, \"mat-calendar-body\"],\n        inputs: {\n          label: \"label\",\n          rows: \"rows\",\n          todayValue: \"todayValue\",\n          startValue: \"startValue\",\n          endValue: \"endValue\",\n          labelMinRequiredCells: \"labelMinRequiredCells\",\n          numCols: \"numCols\",\n          activeCell: \"activeCell\",\n          isRange: \"isRange\",\n          cellAspectRatio: \"cellAspectRatio\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          previewStart: \"previewStart\",\n          previewEnd: \"previewEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\"\n        },\n        outputs: {\n          selectedValueChange: \"selectedValueChange\",\n          previewChange: \"previewChange\",\n          activeDateChange: \"activeDateChange\",\n          dragStarted: \"dragStarted\",\n          dragEnded: \"dragEnded\"\n        },\n        exportAs: [\"matCalendarBody\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        decls: 7,\n        vars: 5,\n        consts: [[\"aria-hidden\", \"true\"], [\"role\", \"row\"], [1, \"mat-calendar-body-hidden-label\", 3, \"id\"], [1, \"mat-calendar-body-label\"], [1, \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\", 3, \"width\", \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\"], [\"type\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"click\", \"focus\", \"ngClass\", \"tabindex\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-cell-preview\"]],\n        template: function MatCalendarBody_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatCalendarBody_Conditional_0_Template, 3, 6, \"tr\", 0);\n            i0.ɵɵrepeaterCreate(1, MatCalendarBody_For_2_Template, 4, 1, \"tr\", 1, _forTrack0, true);\n            i0.ɵɵelementStart(3, \"span\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"span\", 2);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx._firstRowOffset < ctx.labelMinRequiredCells ? 0 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵrepeater(ctx.rows);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"id\", ctx._startDateLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.startDateAccessibleName, \"\\n\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"id\", ctx._endDateLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.endDateAccessibleName, \"\\n\");\n          }\n        },\n        dependencies: [NgClass],\n        styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendarBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n  return node?.nodeName === 'TD';\n}\n/**\n * Gets the date table cell element that is or contains the specified element.\n * Or returns null if element is not part of a date cell.\n */\nfunction getCellElement(element) {\n  let cell;\n  if (isTableCell(element)) {\n    cell = element;\n  } else if (isTableCell(element.parentNode)) {\n    cell = element.parentNode;\n  } else if (isTableCell(element.parentNode?.parentNode)) {\n    cell = element.parentNode.parentNode;\n  }\n  return cell?.getAttribute('data-mat-row') != null ? cell : null;\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n  return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n  return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n  return rangeEnabled && start !== null && end !== null && start !== end && value >= start && value <= end;\n}\n/**\n * Extracts the element that actually corresponds to a touch event's location\n * (rather than the element that initiated the sequence of touch events).\n */\nfunction getActualTouchTarget(event) {\n  const touchLocation = event.changedTouches[0];\n  return document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\n}\n\n/** A class representing a range of dates. */\nclass DateRange {\n  constructor( /** The start date of the range. */\n  start, /** The end date of the range. */\n  end) {\n    this.start = start;\n    this.end = end;\n  }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nlet MatDateSelectionModel = /*#__PURE__*/(() => {\n  class MatDateSelectionModel {\n    constructor( /** The current selection. */\n    selection, _adapter) {\n      this.selection = selection;\n      this._adapter = _adapter;\n      this._selectionChanged = new Subject();\n      /** Emits when the selection has changed. */\n      this.selectionChanged = this._selectionChanged;\n      this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n      const oldValue = this.selection;\n      this.selection = value;\n      this._selectionChanged.next({\n        selection: value,\n        source,\n        oldValue\n      });\n    }\n    ngOnDestroy() {\n      this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n      return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    static {\n      this.ɵfac = function MatDateSelectionModel_Factory(t) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatDateSelectionModel,\n        factory: MatDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nlet MatSingleDateSelectionModel = /*#__PURE__*/(() => {\n  class MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n      super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n      super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n      return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n      return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n      const clone = new MatSingleDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n    static {\n      this.ɵfac = function MatSingleDateSelectionModel_Factory(t) {\n        return new (t || MatSingleDateSelectionModel)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatSingleDateSelectionModel,\n        factory: MatSingleDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatSingleDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nlet MatRangeDateSelectionModel = /*#__PURE__*/(() => {\n  class MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n      super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n      let {\n        start,\n        end\n      } = this.selection;\n      if (start == null) {\n        start = date;\n      } else if (end == null) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n      super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n      const {\n        start,\n        end\n      } = this.selection;\n      // Empty ranges are valid.\n      if (start == null && end == null) {\n        return true;\n      }\n      // Complete ranges are only valid if both dates are valid and the start is before the end.\n      if (start != null && end != null) {\n        return this._isValidDateInstance(start) && this._isValidDateInstance(end) && this._adapter.compareDate(start, end) <= 0;\n      }\n      // Partial ranges are valid if the start/end is valid.\n      return (start == null || this._isValidDateInstance(start)) && (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n      return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n      const clone = new MatRangeDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n    static {\n      this.ɵfac = function MatRangeDateSelectionModel_Factory(t) {\n        return new (t || MatRangeDateSelectionModel)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatRangeDateSelectionModel,\n        factory: MatRangeDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatRangeDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY\n};\n\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = /*#__PURE__*/new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nlet DefaultMatCalendarRangeStrategy = /*#__PURE__*/(() => {\n  class DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n      this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n      let {\n        start,\n        end\n      } = currentRange;\n      if (start == null) {\n        start = date;\n      } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n      return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n      let start = null;\n      let end = null;\n      if (currentRange.start && !currentRange.end && activeDate) {\n        start = currentRange.start;\n        end = activeDate;\n      }\n      return new DateRange(start, end);\n    }\n    createDrag(dragOrigin, originalRange, newDate) {\n      let start = originalRange.start;\n      let end = originalRange.end;\n      if (!start || !end) {\n        // Can't drag from an incomplete range.\n        return null;\n      }\n      const adapter = this._dateAdapter;\n      const isRange = adapter.compareDate(start, end) !== 0;\n      const diffYears = adapter.getYear(newDate) - adapter.getYear(dragOrigin);\n      const diffMonths = adapter.getMonth(newDate) - adapter.getMonth(dragOrigin);\n      const diffDays = adapter.getDate(newDate) - adapter.getDate(dragOrigin);\n      if (isRange && adapter.sameDate(dragOrigin, originalRange.start)) {\n        start = newDate;\n        if (adapter.compareDate(newDate, end) > 0) {\n          end = adapter.addCalendarYears(end, diffYears);\n          end = adapter.addCalendarMonths(end, diffMonths);\n          end = adapter.addCalendarDays(end, diffDays);\n        }\n      } else if (isRange && adapter.sameDate(dragOrigin, originalRange.end)) {\n        end = newDate;\n        if (adapter.compareDate(newDate, start) < 0) {\n          start = adapter.addCalendarYears(start, diffYears);\n          start = adapter.addCalendarMonths(start, diffMonths);\n          start = adapter.addCalendarDays(start, diffDays);\n        }\n      } else {\n        start = adapter.addCalendarYears(start, diffYears);\n        start = adapter.addCalendarMonths(start, diffMonths);\n        start = adapter.addCalendarDays(start, diffDays);\n        end = adapter.addCalendarYears(end, diffYears);\n        end = adapter.addCalendarMonths(end, diffMonths);\n        end = adapter.addCalendarDays(end, diffDays);\n      }\n      return new DateRange(start, end);\n    }\n    static {\n      this.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) {\n        return new (t || DefaultMatCalendarRangeStrategy)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultMatCalendarRangeStrategy,\n        factory: DefaultMatCalendarRangeStrategy.ɵfac\n      });\n    }\n  }\n  return DefaultMatCalendarRangeStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY\n};\nconst DAYS_PER_WEEK = 7;\nlet uniqueIdCounter = 0;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nlet MatMonthView = /*#__PURE__*/(() => {\n  class MatMonthView {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      const oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateFormats = _dateFormats;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rangeStrategy = _rangeStrategy;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Origin of active drag, or null when dragging is not active. */\n      this.activeDrag = null;\n      /** Emits when a new date is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits when any date is selected. */\n      this._userSelection = new EventEmitter();\n      /** Emits when the user initiates a date range drag via mouse or touch. */\n      this.dragStarted = new EventEmitter();\n      /**\n       * Emits when the user completes or cancels a date range drag.\n       * Emits null when the drag was canceled or the newly selected date range if completed.\n       */\n      this.dragEnded = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n      const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n      if (comparisonChange && !comparisonChange.firstChange) {\n        this._setRanges(this.selected);\n      }\n      if (changes['activeDrag'] && !this.activeDrag) {\n        this._clearPreview();\n      }\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n      const date = event.value;\n      const selectedDate = this._getDateFromDayOfMonth(date);\n      let rangeStartDate;\n      let rangeEndDate;\n      if (this._selected instanceof DateRange) {\n        rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n        rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n      } else {\n        rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n      }\n      if (rangeStartDate !== date || rangeEndDate !== date) {\n        this.selectedChange.emit(selectedDate);\n      }\n      this._userSelection.emit({\n        value: selectedDate,\n        event: event.event\n      });\n      this._clearPreview();\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const month = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromDayOfMonth(month);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this._activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n          break;\n        case PAGE_UP:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n          break;\n        case ENTER:\n        case SPACE:\n          this._selectionKeyPressed = true;\n          if (this._canSelect(this._activeDate)) {\n            // Prevent unexpected default actions such as form submission.\n            // Note that we only prevent the default action here while the selection happens in\n            // `keyup` below. We can't do the selection here, because it can cause the calendar to\n            // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n            // because it's too late (see #23305).\n            event.preventDefault();\n          }\n          return;\n        case ESCAPE:\n          // Abort the current range selection if the user presses escape mid-selection.\n          if (this._previewEnd != null && !hasModifierKey(event)) {\n            this._clearPreview();\n            // If a drag is in progress, cancel the drag without changing the\n            // current selection.\n            if (this.activeDrag) {\n              this.dragEnded.emit({\n                value: null,\n                event\n              });\n            } else {\n              this.selectedChange.emit(null);\n              this._userSelection.emit({\n                value: null,\n                event\n              });\n            }\n            event.preventDefault();\n            event.stopPropagation(); // Prevents the overlay from closing.\n          }\n          return;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n        this._focusActiveCellAfterViewChecked();\n      }\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n          this._dateSelected({\n            value: this._dateAdapter.getDate(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    /** Initializes this month view. */\n    _init() {\n      this._setRanges(this.selected);\n      this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n      this._monthLabel = this._dateFormats.display.monthLabel ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel) : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n      let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n      this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n      this._initWeekdays();\n      this._createWeekCells();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n      this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({\n      event,\n      value: cell\n    }) {\n      if (this._rangeStrategy) {\n        // We can assume that this will be a range, because preview\n        // events aren't fired for single date selections.\n        const value = cell ? cell.rawValue : null;\n        const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n        this._previewStart = this._getCellCompareValue(previewRange.start);\n        this._previewEnd = this._getCellCompareValue(previewRange.end);\n        if (this.activeDrag && value) {\n          const dragRange = this._rangeStrategy.createDrag?.(this.activeDrag.value, this.selected, value, event);\n          if (dragRange) {\n            this._previewStart = this._getCellCompareValue(dragRange.start);\n            this._previewEnd = this._getCellCompareValue(dragRange.end);\n          }\n        }\n        // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n        // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n        // when navigating one month back using the keyboard which will cause this handler\n        // to throw a \"changed after checked\" error when updating the preview state.\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * Called when the user has ended a drag. If the drag/drop was successful,\n     * computes and emits the new range selection.\n     */\n    _dragEnded(event) {\n      if (!this.activeDrag) return;\n      if (event.value) {\n        // Propagate drag effect\n        const dragDropResult = this._rangeStrategy?.createDrag?.(this.activeDrag.value, this.selected, event.value, event.event);\n        this.dragEnded.emit({\n          value: dragDropResult ?? null,\n          event: event.event\n        });\n      } else {\n        this.dragEnded.emit({\n          value: null,\n          event: event.event\n        });\n      }\n    }\n    /**\n     * Takes a day of the month and returns a new date in the same month and year as the currently\n     *  active date. The returned date will have the same day of the month as the argument date.\n     */\n    _getDateFromDayOfMonth(dayOfMonth) {\n      return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), dayOfMonth);\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n      const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n      const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n      const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n      // Rotate the labels for days of the week based on the configured first day of the week.\n      let weekdays = longWeekdays.map((long, i) => {\n        return {\n          long,\n          narrow: narrowWeekdays[i],\n          id: uniqueIdCounter++\n        };\n      });\n      this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n      const dateNames = this._dateAdapter.getDateNames();\n      this._weeks = [[]];\n      for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n        if (cell == DAYS_PER_WEEK) {\n          this._weeks.push([]);\n          cell = 0;\n        }\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n        const enabled = this._shouldEnableDate(date);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n        this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n      }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n      return !!date && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n      return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n      return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n      if (date) {\n        // We use the time since the Unix epoch to compare dates in this view, rather than the\n        // cell values, because we need to support ranges that span across multiple months/years.\n        const year = this._dateAdapter.getYear(date);\n        const month = this._dateAdapter.getMonth(date);\n        const day = this._dateAdapter.getDate(date);\n        return new Date(year, month, day).getTime();\n      }\n      return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n      if (selectedValue instanceof DateRange) {\n        this._rangeStart = this._getCellCompareValue(selectedValue.start);\n        this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n        this._isRange = true;\n      } else {\n        this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n        this._isRange = false;\n      }\n      this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n      this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n      return !this.dateFilter || this.dateFilter(date);\n    }\n    /** Clears out preview state. */\n    _clearPreview() {\n      this._previewStart = this._previewEnd = null;\n    }\n    static {\n      this.ɵfac = function MatMonthView_Factory(t) {\n        return new (t || MatMonthView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMonthView,\n        selectors: [[\"mat-month-view\"]],\n        viewQuery: function MatMonthView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\",\n          activeDrag: \"activeDrag\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          _userSelection: \"_userSelection\",\n          dragStarted: \"dragStarted\",\n          dragEnded: \"dragEnded\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matMonthView\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        decls: 8,\n        vars: 14,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\"], [\"aria-hidden\", \"true\"], [\"colspan\", \"7\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"previewChange\", \"dragStarted\", \"dragEnded\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [1, \"cdk-visually-hidden\"]],\n        template: function MatMonthView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵrepeaterCreate(3, MatMonthView_For_4_Template, 5, 2, \"th\", 2, _forTrack1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"tr\", 3);\n            i0.ɵɵelement(6, \"th\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"tbody\", 5);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_7_listener($event) {\n              return ctx._dateSelected($event);\n            })(\"activeDateChange\", function MatMonthView_Template_tbody_activeDateChange_7_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_7_listener($event) {\n              return ctx._previewChanged($event);\n            })(\"dragStarted\", function MatMonthView_Template_tbody_dragStarted_7_listener($event) {\n              return ctx.dragStarted.emit($event);\n            })(\"dragEnded\", function MatMonthView_Template_tbody_dragEnded_7_listener($event) {\n              return ctx._dragEnded($event);\n            })(\"keyup\", function MatMonthView_Template_tbody_keyup_7_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatMonthView_Template_tbody_keydown_7_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵrepeater(ctx._weekdays);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1)(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMonthView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nlet MatMultiYearView = /*#__PURE__*/(() => {\n  class MatMultiYearView {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      let oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Emits when a new year is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits the selected year. This doesn't imply a change on the selected date */\n      this.yearSelected = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n      this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n      // We want a range years such that we maximize the number of\n      // enabled dates visible at once. This prevents issues where the minimum year\n      // is the last item of a page OR the maximum year is the first item of a page.\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view.\n      const activeYear = this._dateAdapter.getYear(this._activeDate);\n      const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n      this._years = [];\n      for (let i = 0, row = []; i < yearsPerPage; i++) {\n        row.push(minYearOfPage + i);\n        if (row.length == yearsPerRow) {\n          this._years.push(row.map(year => this._createCellForYear(year)));\n          row = [];\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n      const year = event.value;\n      const selectedYear = this._dateAdapter.createDate(year, 0, 1);\n      const selectedDate = this._getDateFromYear(year);\n      this.yearSelected.emit(selectedYear);\n      this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const year = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromYear(year);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n          break;\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n          break;\n        case ENTER:\n        case SPACE:\n          // Note that we only prevent the default action here while the selection happens in\n          // `keyup` below. We can't do the selection here, because it can cause the calendar to\n          // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n          // because it's too late (see #23305).\n          this._selectionKeyPressed = true;\n          break;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n      this._focusActiveCellAfterViewChecked();\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed) {\n          this._yearSelected({\n            value: this._dateAdapter.getYear(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    _getActiveCell() {\n      return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Takes a year and returns a new date on the same day and month as the currently active date\n     *  The returned date will have the same year as the argument date.\n     */\n    _getDateFromYear(year) {\n      const activeMonth = this._dateAdapter.getMonth(this.activeDate);\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, activeMonth, 1));\n      const normalizedDate = this._dateAdapter.createDate(year, activeMonth, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n      return normalizedDate;\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n      const date = this._dateAdapter.createDate(year, 0, 1);\n      const yearName = this._dateAdapter.getYearName(date);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n      return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n      // disable if the year is greater than maxDate lower than minDate\n      if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n        return false;\n      }\n      // enable if it reaches here and there's no filter defined\n      if (!this.dateFilter) {\n        return true;\n      }\n      const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n      // If any date in the year is enabled count the year as enabled.\n      for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n      this._selectedYear = null;\n      if (value instanceof DateRange) {\n        const displayValue = value.start || value.end;\n        if (displayValue) {\n          this._selectedYear = this._dateAdapter.getYear(displayValue);\n        }\n      } else if (value) {\n        this._selectedYear = this._dateAdapter.getYear(value);\n      }\n    }\n    static {\n      this.ɵfac = function MatMultiYearView_Factory(t) {\n        return new (t || MatMultiYearView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMultiYearView,\n        selectors: [[\"mat-multi-year-view\"]],\n        viewQuery: function MatMultiYearView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          yearSelected: \"yearSelected\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matMultiYearView\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 7,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n        template: function MatMultiYearView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵelement(3, \"th\", 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"tbody\", 3);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n              return ctx._yearSelected($event);\n            })(\"activeDateChange\", function MatMultiYearView_Template_tbody_activeDateChange_4_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"keyup\", function MatMultiYearView_Template_tbody_keyup_4_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMultiYearView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nlet MatYearView = /*#__PURE__*/(() => {\n  class MatYearView {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      let oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateFormats = _dateFormats;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Emits when a new month is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits the selected month. This doesn't imply a change on the selected date */\n      this.monthSelected = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n      const month = event.value;\n      const selectedMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      this.monthSelected.emit(selectedMonth);\n      const selectedDate = this._getDateFromMonth(month);\n      this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const month = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromMonth(month);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n          break;\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n          break;\n        case ENTER:\n        case SPACE:\n          // Note that we only prevent the default action here while the selection happens in\n          // `keyup` below. We can't do the selection here, because it can cause the calendar to\n          // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n          // because it's too late (see #23305).\n          this._selectionKeyPressed = true;\n          break;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n        this._focusActiveCellAfterViewChecked();\n      }\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed) {\n          this._monthSelected({\n            value: this._dateAdapter.getMonth(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    /** Initializes this year view. */\n    _init() {\n      this._setSelectedMonth(this.selected);\n      this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n      this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n      let monthNames = this._dateAdapter.getMonthNames('short');\n      // First row of months only contains 5 elements so we can fit the year label on the same row.\n      this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /** Schedules the matCalendarBody to focus the active cell after change detection has run */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n      return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Takes a month and returns a new date in the same day and year as the currently active date.\n     *  The returned date will have the same month as the argument date.\n     */\n    _getDateFromMonth(month) {\n      const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n      return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n      const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n      return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n      const activeYear = this._dateAdapter.getYear(this.activeDate);\n      if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n        return false;\n      }\n      if (!this.dateFilter) {\n        return true;\n      }\n      const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n      // If any date in the month is enabled count the month as enabled.\n      for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n      if (this.maxDate) {\n        const maxYear = this._dateAdapter.getYear(this.maxDate);\n        const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n        return year > maxYear || year === maxYear && month > maxMonth;\n      }\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n      if (this.minDate) {\n        const minYear = this._dateAdapter.getYear(this.minDate);\n        const minMonth = this._dateAdapter.getMonth(this.minDate);\n        return year < minYear || year === minYear && month < minMonth;\n      }\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n      if (value instanceof DateRange) {\n        this._selectedMonth = this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n      } else {\n        this._selectedMonth = this._getMonthInCurrentYear(value);\n      }\n    }\n    static {\n      this.ɵfac = function MatYearView_Factory(t) {\n        return new (t || MatYearView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatYearView,\n        selectors: [[\"mat-year-view\"]],\n        viewQuery: function MatYearView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          monthSelected: \"monthSelected\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matYearView\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 9,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n        template: function MatYearView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵelement(3, \"th\", 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"tbody\", 3);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n              return ctx._monthSelected($event);\n            })(\"activeDateChange\", function MatYearView_Template_tbody_activeDateChange_4_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"keyup\", function MatYearView_Template_tbody_keyup_4_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatYearView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet calendarHeaderId = 1;\n/** Default header for MatCalendar */\nlet MatCalendarHeader = /*#__PURE__*/(() => {\n  class MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n      this._intl = _intl;\n      this.calendar = calendar;\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      this._id = `mat-calendar-header-${calendarHeaderId++}`;\n      this._periodButtonLabelId = `${this._id}-period-label`;\n      this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The display text for the current calendar view. */\n    get periodButtonText() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      }\n      return this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());\n    }\n    /** The aria description for the current calendar view. */\n    get periodButtonDescription() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      }\n      // Format a label for the window of years displayed in the multi-year calendar view. Use\n      // `formatYearRangeLabel` because it is TTS friendly.\n      return this._intl.formatYearRangeLabel(...this._formatMinAndMaxYearLabels());\n    }\n    /** The `aria-label` for changing the calendar view. */\n    get periodButtonLabel() {\n      return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n      return {\n        'month': this._intl.prevMonthLabel,\n        'year': this._intl.prevYearLabel,\n        'multi-year': this._intl.prevMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n      return {\n        'month': this._intl.nextMonthLabel,\n        'year': this._intl.nextYearLabel,\n        'multi-year': this._intl.nextMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n      this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n      if (!this.calendar.minDate) {\n        return true;\n      }\n      return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n      return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n      }\n      // Otherwise we are in 'multi-year' view.\n      return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n    /**\n     * Format two individual labels for the minimum year and maximum year available in the multi-year\n     * calendar view. Returns an array of two strings where the first string is the formatted label\n     * for the minimum year, and the second string is the formatted label for the maximum year.\n     */\n    _formatMinAndMaxYearLabels() {\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view, and the last year is\n      // just yearsPerPage - 1 away.\n      const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n      const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n      const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n      const minYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n      const maxYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n      return [minYearLabel, maxYearLabel];\n    }\n    static {\n      this.ɵfac = function MatCalendarHeader_Factory(t) {\n        return new (t || MatCalendarHeader)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendarHeader,\n        selectors: [[\"mat-calendar-header\"]],\n        exportAs: [\"matCalendarHeader\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 11,\n        consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"aria-live\", \"polite\", 1, \"cdk-visually-hidden\", 3, \"id\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-period-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"viewBox\", \"0 0 10 5\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-calendar-arrow\"], [\"points\", \"0,0 5,5 10,0\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"click\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"click\", \"disabled\"]],\n        template: function MatCalendarHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_4_listener() {\n              return ctx.currentPeriodClicked();\n            });\n            i0.ɵɵelementStart(5, \"span\", 4);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(7, \"svg\", 5);\n            i0.ɵɵelement(8, \"polygon\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelement(9, \"div\", 7);\n            i0.ɵɵprojection(10);\n            i0.ɵɵelementStart(11, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_11_listener() {\n              return ctx.previousClicked();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_12_listener() {\n              return ctx.nextClicked();\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"id\", ctx._periodButtonLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.periodButtonDescription);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._periodButtonLabelId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.periodButtonText);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n            i0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n            i0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n          }\n        },\n        dependencies: [MatButton, MatIconButton],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendarHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A calendar that is used as part of the datepicker. */\nlet MatCalendar = /*#__PURE__*/(() => {\n  class MatCalendar {\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n      return this._startAt;\n    }\n    set startAt(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n      return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n      this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n      this.stateChanges.next();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n      return this._currentView;\n    }\n    set currentView(value) {\n      const viewChangedResult = this._currentView !== value ? value : null;\n      this._currentView = value;\n      this._moveFocusOnNextTick = true;\n      this._changeDetectorRef.markForCheck();\n      if (viewChangedResult) {\n        this.viewChanged.emit(viewChangedResult);\n      }\n    }\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      this._changeDetectorRef = _changeDetectorRef;\n      /**\n       * Used for scheduling that focus should be moved to the active cell on the next tick.\n       * We need to schedule it, rather than do it immediately, because we have to wait\n       * for Angular to re-evaluate the view children.\n       */\n      this._moveFocusOnNextTick = false;\n      /** Whether the calendar should be started in month or year view. */\n      this.startView = 'month';\n      /** Emits when the currently selected date changes. */\n      this.selectedChange = new EventEmitter();\n      /**\n       * Emits the year chosen in multiyear view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.yearSelected = new EventEmitter();\n      /**\n       * Emits the month chosen in year view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.monthSelected = new EventEmitter();\n      /**\n       * Emits when the current view changes.\n       */\n      this.viewChanged = new EventEmitter(true);\n      /** Emits when any date is selected. */\n      this._userSelection = new EventEmitter();\n      /** Emits a new date range value when the user completes a drag drop operation. */\n      this._userDragDrop = new EventEmitter();\n      /** Origin of active drag, or null when dragging is not active. */\n      this._activeDrag = null;\n      /**\n       * Emits whenever there is a state change that the header may need to respond to.\n       */\n      this.stateChanges = new Subject();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._intlChanges = _intl.changes.subscribe(() => {\n        _changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      });\n    }\n    ngAfterContentInit() {\n      this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n      this.activeDate = this.startAt || this._dateAdapter.today();\n      // Assign to the private property since we don't want to move focus on init.\n      this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n      if (this._moveFocusOnNextTick) {\n        this._moveFocusOnNextTick = false;\n        this.focusActiveCell();\n      }\n    }\n    ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n      this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n      // Ignore date changes that are at a different time on the same day. This fixes issues where\n      // the calendar re-renders when there is no meaningful change to [minDate] or [maxDate]\n      // (#24435).\n      const minDateChange = changes['minDate'] && !this._dateAdapter.sameDate(changes['minDate'].previousValue, changes['minDate'].currentValue) ? changes['minDate'] : undefined;\n      const maxDateChange = changes['maxDate'] && !this._dateAdapter.sameDate(changes['maxDate'].previousValue, changes['maxDate'].currentValue) ? changes['maxDate'] : undefined;\n      const changeRequiringRerender = minDateChange || maxDateChange || changes['dateFilter'];\n      if (changeRequiringRerender && !changeRequiringRerender.firstChange) {\n        const view = this._getCurrentViewComponent();\n        if (view) {\n          // Schedule focus to be moved to the active date since re-rendering\n          // can blur the active cell. See #29265.\n          this._moveFocusOnNextTick = true;\n          // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n          // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n          this._changeDetectorRef.detectChanges();\n          view._init();\n        }\n      }\n      this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n      this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n      this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n      const date = event.value;\n      if (this.selected instanceof DateRange || date && !this._dateAdapter.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n      this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n      this.activeDate = date;\n      this.currentView = view;\n    }\n    /** Called when the user starts dragging to change a date range. */\n    _dragStarted(event) {\n      this._activeDrag = event;\n    }\n    /**\n     * Called when a drag completes. It may end in cancelation or in the selection\n     * of a new range.\n     */\n    _dragEnded(event) {\n      if (!this._activeDrag) return;\n      if (event.value) {\n        this._userDragDrop.emit(event);\n      }\n      this._activeDrag = null;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n      // The return type is explicitly written as a union to ensure that the Closure compiler does\n      // not optimize calls to _init(). Without the explicit return type, TypeScript narrows it to\n      // only the first component type. See https://github.com/angular/components/issues/22996.\n      return this.monthView || this.yearView || this.multiYearView;\n    }\n    static {\n      this.ɵfac = function MatCalendar_Factory(t) {\n        return new (t || MatCalendar)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendar,\n        selectors: [[\"mat-calendar\"]],\n        viewQuery: function MatCalendar_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatMonthView, 5);\n            i0.ɵɵviewQuery(MatYearView, 5);\n            i0.ɵɵviewQuery(MatMultiYearView, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-calendar\"],\n        inputs: {\n          headerComponent: \"headerComponent\",\n          startAt: \"startAt\",\n          startView: \"startView\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          yearSelected: \"yearSelected\",\n          monthSelected: \"monthSelected\",\n          viewChanged: \"viewChanged\",\n          _userSelection: \"_userSelection\",\n          _userDragDrop: \"_userDragDrop\"\n        },\n        exportAs: [\"matCalendar\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 2,\n        consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"_userSelection\", \"dragStarted\", \"dragEnded\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDateChange\", \"monthSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"yearSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"]],\n        template: function MatCalendar_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵtemplate(2, MatCalendar_Case_2_Template, 1, 11, \"mat-month-view\", 2)(3, MatCalendar_Case_3_Template, 1, 6, \"mat-year-view\", 3)(4, MatCalendar_Case_4_Template, 1, 6, \"mat-multi-year-view\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional((tmp_1_0 = ctx.currentView) === \"month\" ? 2 : tmp_1_0 === \"year\" ? 3 : tmp_1_0 === \"multi-year\" ? 4 : -1);\n          }\n        },\n        dependencies: [CdkPortalOutlet, CdkMonitorFocus, MatMonthView, MatYearView, MatMultiYearView],\n        styles: [\".mat-calendar{display:block;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: /*#__PURE__*/trigger('transformPanel', [/*#__PURE__*/transition('void => enter-dropdown', /*#__PURE__*/animate('120ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  }), /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  })]))), /*#__PURE__*/transition('void => enter-dialog', /*#__PURE__*/animate('150ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.7)'\n  }), /*#__PURE__*/style({\n    transform: 'none',\n    opacity: 1\n  })]))), /*#__PURE__*/transition('* => void', /*#__PURE__*/animate('100ms linear', /*#__PURE__*/style({\n    opacity: 0\n  })))]),\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: /*#__PURE__*/trigger('fadeInCalendar', [/*#__PURE__*/state('void', /*#__PURE__*/style({\n    opacity: 0\n  })), /*#__PURE__*/state('enter', /*#__PURE__*/style({\n    opacity: 1\n  })),\n  /*#__PURE__*/\n  // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', /*#__PURE__*/animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-datepicker-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nlet MatDatepickerContent = /*#__PURE__*/(() => {\n  class MatDatepickerContent {\n    constructor(_elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._globalModel = _globalModel;\n      this._dateAdapter = _dateAdapter;\n      this._rangeSelectionStrategy = _rangeSelectionStrategy;\n      this._subscriptions = new Subscription();\n      /** Emits when an animation has finished. */\n      this._animationDone = new Subject();\n      /** Whether there is an in-progress animation. */\n      this._isAnimating = false;\n      /** Portal with projected action buttons. */\n      this._actionsPortal = null;\n      this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n      this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n      this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      }));\n      this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n      this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n      const selection = this._model.selection;\n      const value = event.value;\n      const isRange = selection instanceof DateRange;\n      // If we're selecting a range and we have a selection strategy, always pass the value through\n      // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n      // A null value when picking a range means that the user cancelled the selection (e.g. by\n      // pressing escape), whereas when selecting a single value it means that the value didn't\n      // change. This isn't very intuitive, but it's here for backwards-compatibility.\n      if (isRange && this._rangeSelectionStrategy) {\n        const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n        this._model.updateSelection(newSelection, this);\n      } else if (value && (isRange || !this._dateAdapter.sameDate(value, selection))) {\n        this._model.add(value);\n      }\n      // Delegate closing the overlay to the actions.\n      if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n        this.datepicker.close();\n      }\n    }\n    _handleUserDragDrop(event) {\n      this._model.updateSelection(event.value, this);\n    }\n    _startExitAnimation() {\n      this._animationState = 'void';\n      this._changeDetectorRef.markForCheck();\n    }\n    _handleAnimationEvent(event) {\n      this._isAnimating = event.phaseName === 'start';\n      if (!this._isAnimating) {\n        this._animationDone.next();\n      }\n    }\n    _getSelected() {\n      return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n      if (this._model !== this._globalModel) {\n        this._globalModel.updateSelection(this._model.selection, this);\n      }\n    }\n    /**\n     * Assigns a new portal containing the datepicker actions.\n     * @param portal Portal with the actions to be assigned.\n     * @param forceRerender Whether a re-render of the portal should be triggered. This isn't\n     * necessary if the portal is assigned during initialization, but it may be required if it's\n     * added at a later point.\n     */\n    _assignActions(portal, forceRerender) {\n      // If we have actions, clone the model so that we have the ability to cancel the selection,\n      // otherwise update the global model directly. Note that we want to assign this as soon as\n      // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n      this._model = portal ? this._globalModel.clone() : this._globalModel;\n      this._actionsPortal = portal;\n      if (forceRerender) {\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    static {\n      this.ɵfac = function MatDatepickerContent_Factory(t) {\n        return new (t || MatDatepickerContent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MatDateSelectionModel), i0.ɵɵdirectiveInject(i1.DateAdapter), i0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), i0.ɵɵdirectiveInject(MatDatepickerIntl));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerContent,\n        selectors: [[\"mat-datepicker-content\"]],\n        viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendar, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-datepicker-content\"],\n        hostVars: 5,\n        hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵsyntheticHostListener(\"@transformPanel.start\", function MatDatepickerContent_animation_transformPanel_start_HostBindingHandler($event) {\n              return ctx._handleAnimationEvent($event);\n            })(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler($event) {\n              return ctx._handleAnimationEvent($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n          }\n        },\n        inputs: {\n          color: \"color\"\n        },\n        exportAs: [\"matDatepickerContent\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 27,\n        consts: [[\"cdkTrapFocus\", \"\", \"role\", \"dialog\", 1, \"mat-datepicker-content-container\"], [3, \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\", \"_userDragDrop\", \"id\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"focus\", \"blur\", \"click\", \"color\"]],\n        template: function MatDatepickerContent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-calendar\", 1);\n            i0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) {\n              return ctx.datepicker._selectYear($event);\n            })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) {\n              return ctx.datepicker._selectMonth($event);\n            })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) {\n              return ctx.datepicker._viewChanged($event);\n            })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) {\n              return ctx._handleUserSelection($event);\n            })(\"_userDragDrop\", function MatDatepickerContent_Template_mat_calendar__userDragDrop_1_listener($event) {\n              return ctx._handleUserDragDrop($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n            i0.ɵɵelementStart(3, \"button\", 3);\n            i0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() {\n              return ctx._closeButtonFocused = true;\n            })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() {\n              return ctx._closeButtonFocused = false;\n            })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() {\n              return ctx.datepicker.close();\n            });\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            let tmp_3_0;\n            i0.ɵɵclassProp(\"mat-datepicker-content-container-with-custom-header\", ctx.datepicker.calendarHeaderComponent)(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n            i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", (tmp_3_0 = ctx._dialogLabelId) !== null && tmp_3_0 !== undefined ? tmp_3_0 : undefined);\n            i0.ɵɵadvance();\n            i0.ɵɵclassMap(ctx.datepicker.panelClass);\n            i0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\")(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n            i0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx._closeButtonText);\n          }\n        },\n        dependencies: [CdkTrapFocus, MatCalendar, CdkPortalOutlet, MatButton],\n        styles: [\".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Base class for a datepicker. */\nlet MatDatepickerBase = /*#__PURE__*/(() => {\n  class MatDatepickerBase {\n    /** The date to open the calendar to initially. */\n    get startAt() {\n      // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n      // selected value is.\n      return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Theme color of the datepicker's calendar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n      this._color = value;\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n      return this._disabled === undefined && this.datepickerInput ? this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n      if (value !== this._disabled) {\n        this._disabled = value;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /** Classes to be passed to the date picker panel. */\n    get panelClass() {\n      return this._panelClass;\n    }\n    set panelClass(value) {\n      this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n      return this._opened;\n    }\n    set opened(value) {\n      if (value) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n      return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n      return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n      return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    constructor(_overlay,\n    /**\n     * @deprecated parameter is unused and will be removed\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n      this._overlay = _overlay;\n      this._viewContainerRef = _viewContainerRef;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._model = _model;\n      this._inputStateChanges = Subscription.EMPTY;\n      this._document = inject(DOCUMENT);\n      /** The view that the calendar should start in. */\n      this.startView = 'month';\n      /**\n       * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n       * than a dropdown and elements have more padding to allow for bigger touch targets.\n       */\n      this.touchUi = false;\n      /** Preferred position of the datepicker in the X axis. */\n      this.xPosition = 'start';\n      /** Preferred position of the datepicker in the Y axis. */\n      this.yPosition = 'below';\n      /**\n       * Whether to restore focus to the previously-focused element when the calendar is closed.\n       * Note that automatic focus restoration is an accessibility feature and it is recommended that\n       * you provide your own equivalent, if you decide to turn it off.\n       */\n      this.restoreFocus = true;\n      /**\n       * Emits selected year in multiyear view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.yearSelected = new EventEmitter();\n      /**\n       * Emits selected month in year view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.monthSelected = new EventEmitter();\n      /**\n       * Emits when the current view changes.\n       */\n      this.viewChanged = new EventEmitter(true);\n      /** Emits when the datepicker has been opened. */\n      this.openedStream = new EventEmitter();\n      /** Emits when the datepicker has been closed. */\n      this.closedStream = new EventEmitter();\n      this._opened = false;\n      /** The id for the datepicker calendar. */\n      this.id = `mat-datepicker-${datepickerUid++}`;\n      /** The element that was focused before the datepicker was opened. */\n      this._focusedElementBeforeOpen = null;\n      /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n      this._backdropHarnessClass = `${this.id}-backdrop`;\n      /** Emits when the datepicker's state changes. */\n      this.stateChanges = new Subject();\n      this._injector = inject(Injector);\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      this._scrollStrategy = scrollStrategy;\n      this._model.selectionChanged.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const positionChange = changes['xPosition'] || changes['yPosition'];\n      if (positionChange && !positionChange.firstChange && this._overlayRef) {\n        const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n        if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n          this._setConnectedPositions(positionStrategy);\n          if (this.opened) {\n            this._overlayRef.updatePosition();\n          }\n        }\n      }\n      this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n      this._destroyOverlay();\n      this.close();\n      this._inputStateChanges.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n      this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n      this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n      if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single input.');\n      }\n      this._inputStateChanges.unsubscribe();\n      this.datepickerInput = input;\n      this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n      return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n      if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single actions row.');\n      }\n      this._actionsPortal = portal;\n      this._componentRef?.instance._assignActions(portal, true);\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n      if (portal === this._actionsPortal) {\n        this._actionsPortal = null;\n        this._componentRef?.instance._assignActions(null, true);\n      }\n    }\n    /** Open the calendar. */\n    open() {\n      // Skip reopening if there's an in-progress animation to avoid overlapping\n      // sequences which can cause \"changed after checked\" errors. See #25837.\n      if (this._opened || this.disabled || this._componentRef?.instance._isAnimating) {\n        return;\n      }\n      if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Attempted to open an MatDatepicker with no associated input.');\n      }\n      this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n      this._openOverlay();\n      this._opened = true;\n      this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n      // Skip reopening if there's an in-progress animation to avoid overlapping\n      // sequences which can cause \"changed after checked\" errors. See #25837.\n      if (!this._opened || this._componentRef?.instance._isAnimating) {\n        return;\n      }\n      const canRestoreFocus = this.restoreFocus && this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function';\n      const completeClose = () => {\n        // The `_opened` could've been reset already if\n        // we got two events in quick succession.\n        if (this._opened) {\n          this._opened = false;\n          this.closedStream.emit();\n        }\n      };\n      if (this._componentRef) {\n        const {\n          instance,\n          location\n        } = this._componentRef;\n        instance._startExitAnimation();\n        instance._animationDone.pipe(take(1)).subscribe(() => {\n          const activeElement = this._document.activeElement;\n          // Since we restore focus after the exit animation, we have to check that\n          // the user didn't move focus themselves inside the `close` handler.\n          if (canRestoreFocus && (!activeElement || activeElement === this._document.activeElement || location.nativeElement.contains(activeElement))) {\n            this._focusedElementBeforeOpen.focus();\n          }\n          this._focusedElementBeforeOpen = null;\n          this._destroyOverlay();\n        });\n      }\n      if (canRestoreFocus) {\n        // Because IE moves focus asynchronously, we can't count on it being restored before we've\n        // marked the datepicker as closed. If the event fires out of sequence and the element that\n        // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n        // able to close the calendar at all. We work around it by making the logic, that marks\n        // the datepicker as closed, async as well.\n        setTimeout(completeClose);\n      } else {\n        completeClose();\n      }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n      this._componentRef?.instance?._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n      instance.datepicker = this;\n      instance.color = this.color;\n      instance._dialogLabelId = this.datepickerInput.getOverlayLabelId();\n      instance._assignActions(this._actionsPortal, false);\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n      this._destroyOverlay();\n      const isDialog = this.touchUi;\n      const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n      const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n        positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n        hasBackdrop: true,\n        backdropClass: [isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n        direction: this._dir,\n        scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n        panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`\n      }));\n      this._getCloseStream(overlayRef).subscribe(event => {\n        if (event) {\n          event.preventDefault();\n        }\n        this.close();\n      });\n      // The `preventDefault` call happens inside the calendar as well, however focus moves into\n      // it inside a timeout which can give browsers a chance to fire off a keyboard event in-between\n      // that can scroll the page (see #24969). Always block default actions of arrow keys for the\n      // entire overlay so the page doesn't get scrolled by accident.\n      overlayRef.keydownEvents().subscribe(event => {\n        const keyCode = event.keyCode;\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW || keyCode === PAGE_UP || keyCode === PAGE_DOWN) {\n          event.preventDefault();\n        }\n      });\n      this._componentRef = overlayRef.attach(portal);\n      this._forwardContentValues(this._componentRef.instance);\n      // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n      if (!isDialog) {\n        afterNextRender(() => {\n          overlayRef.updatePosition();\n        }, {\n          injector: this._injector\n        });\n      }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._overlayRef = this._componentRef = null;\n      }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n      return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n      const strategy = this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();\n      return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n      const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n      const secondaryX = primaryX === 'start' ? 'end' : 'start';\n      const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n      const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n      return strategy.withPositions([{\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      }, {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      }, {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      }, {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n      const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n      return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE && !hasModifierKey(event) || this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n      })));\n    }\n    static {\n      this.ɵfac = function MatDatepickerBase_Factory(t) {\n        return new (t || MatDatepickerBase)(i0.ɵɵdirectiveInject(i4.Overlay), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MatDateSelectionModel));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerBase,\n        inputs: {\n          calendarHeaderComponent: \"calendarHeaderComponent\",\n          startAt: \"startAt\",\n          startView: \"startView\",\n          color: \"color\",\n          touchUi: [2, \"touchUi\", \"touchUi\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          xPosition: \"xPosition\",\n          yPosition: \"yPosition\",\n          restoreFocus: [2, \"restoreFocus\", \"restoreFocus\", booleanAttribute],\n          dateClass: \"dateClass\",\n          panelClass: \"panelClass\",\n          opened: [2, \"opened\", \"opened\", booleanAttribute]\n        },\n        outputs: {\n          yearSelected: \"yearSelected\",\n          monthSelected: \"monthSelected\",\n          viewChanged: \"viewChanged\",\n          openedStream: \"opened\",\n          closedStream: \"closed\"\n        },\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatDatepickerBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nlet MatDatepicker = /*#__PURE__*/(() => {\n  class MatDatepicker extends MatDatepickerBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDatepicker_BaseFactory;\n        return function MatDatepicker_Factory(t) {\n          return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDatepicker)))(t || MatDatepicker);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepicker,\n        selectors: [[\"mat-datepicker\"]],\n        exportAs: [\"matDatepicker\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n          provide: MatDatepickerBase,\n          useExisting: MatDatepicker\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDatepicker_Template(rf, ctx) {},\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepicker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n  constructor( /** Reference to the datepicker input component that emitted the event. */\n  target, /** Reference to the native input element associated with the datepicker input. */\n  targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n}\n/** Base class for datepicker inputs. */\nlet MatDatepickerInputBase = /*#__PURE__*/(() => {\n  class MatDatepickerInputBase {\n    /** The value of the input. */\n    get value() {\n      return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n      this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n      return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n      const newValue = value;\n      const element = this._elementRef.nativeElement;\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.stateChanges.next(undefined);\n      }\n      // We need to null check the `blur` method, because it's undefined during SSR.\n      // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n      // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n      // element has been inserted.\n      if (newValue && this._isInitialized && element.blur) {\n        // Normally, native input elements automatically blur if they turn disabled. This behavior\n        // is problematic, because it would mean that it triggers another change detection cycle,\n        // which then causes a changed after checked error if the input element was focused before.\n        element.blur();\n      }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n      return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n      this._model = model;\n      this._valueChangesSubscription.unsubscribe();\n      if (this._pendingValue) {\n        this._assignValue(this._pendingValue);\n      }\n      this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n        if (this._shouldHandleChangeEvent(event)) {\n          const value = this._getValueFromModel(event.selection);\n          this._lastValueValid = this._isValidValue(value);\n          this._cvaOnChange(value);\n          this._onTouched();\n          this._formatValue(value);\n          this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n          this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n      });\n    }\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n      this._elementRef = _elementRef;\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      /** Emits when a `change` event is fired on this `<input>`. */\n      this.dateChange = new EventEmitter();\n      /** Emits when an `input` event is fired on this `<input>`. */\n      this.dateInput = new EventEmitter();\n      /** Emits when the internal state has changed */\n      this.stateChanges = new Subject();\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._cvaOnChange = () => {};\n      this._valueChangesSubscription = Subscription.EMPTY;\n      this._localeSubscription = Subscription.EMPTY;\n      /** The form control validator for whether the input parses. */\n      this._parseValidator = () => {\n        return this._lastValueValid ? null : {\n          'matDatepickerParse': {\n            'text': this._elementRef.nativeElement.value\n          }\n        };\n      };\n      /** The form control validator for the date filter. */\n      this._filterValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        return !controlValue || this._matchesFilter(controlValue) ? null : {\n          'matDatepickerFilter': true\n        };\n      };\n      /** The form control validator for the min date. */\n      this._minValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const min = this._getMinDate();\n        return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0 ? null : {\n          'matDatepickerMin': {\n            'min': min,\n            'actual': controlValue\n          }\n        };\n      };\n      /** The form control validator for the max date. */\n      this._maxValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const max = this._getMaxDate();\n        return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0 ? null : {\n          'matDatepickerMax': {\n            'max': max,\n            'actual': controlValue\n          }\n        };\n      };\n      /** Whether the last value set on the input was valid. */\n      this._lastValueValid = false;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      // Update the displayed date when the locale changes.\n      this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n        this._assignValueProgrammatically(this.value);\n      });\n    }\n    ngAfterViewInit() {\n      this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n    ngOnDestroy() {\n      this._valueChangesSubscription.unsubscribe();\n      this._localeSubscription.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n      return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n      this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n      const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n      const isAltDownArrow = hasModifierKey(event, 'altKey') && event.keyCode === DOWN_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n      if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n        this._openPopup();\n        event.preventDefault();\n      }\n    }\n    _onInput(value) {\n      const lastValueWasValid = this._lastValueValid;\n      let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n      this._lastValueValid = this._isValidValue(date);\n      date = this._dateAdapter.getValidDateOrNull(date);\n      const hasChanged = !this._dateAdapter.sameDate(date, this.value);\n      // We need to fire the CVA change event for all\n      // nulls, otherwise the validators won't run.\n      if (!date || hasChanged) {\n        this._cvaOnChange(date);\n      } else {\n        // Call the CVA change handler for invalid values\n        // since this is what marks the control as dirty.\n        if (value && !this.value) {\n          this._cvaOnChange(date);\n        }\n        if (lastValueWasValid !== this._lastValueValid) {\n          this._validatorOnChange();\n        }\n      }\n      if (hasChanged) {\n        this._assignValue(date);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      }\n    }\n    _onChange() {\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n      // Reformat the input only if we have a valid value.\n      if (this.value) {\n        this._formatValue(this.value);\n      }\n      this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n      this._elementRef.nativeElement.value = value != null ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n      // We may get some incoming values before the model was\n      // assigned. Save the value so that we can assign it later.\n      if (this._model) {\n        this._assignValueToModel(value);\n        this._pendingValue = null;\n      } else {\n        this._pendingValue = value;\n      }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n      return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n      return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = this._isValidValue(value);\n      value = this._dateAdapter.getValidDateOrNull(value);\n      this._assignValue(value);\n      this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n      const filter = this._getDateFilter();\n      return !filter || filter(value);\n    }\n    static {\n      this.ɵfac = function MatDatepickerInputBase_Factory(t) {\n        return new (t || MatDatepickerInputBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerInputBase,\n        inputs: {\n          value: \"value\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatDatepickerInputBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n  const keys = Object.keys(changes);\n  for (let key of keys) {\n    const {\n      previousValue,\n      currentValue\n    } = changes[key];\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nlet MatDatepickerInput = /*#__PURE__*/(() => {\n  class MatDatepickerInput extends MatDatepickerInputBase {\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n      if (datepicker) {\n        this._datepicker = datepicker;\n        this._ariaOwns.set(datepicker.opened ? datepicker.id : null);\n        this._closedSubscription = datepicker.closedStream.subscribe(() => {\n          this._onTouched();\n          this._ariaOwns.set(null);\n        });\n        this._openedSubscription = datepicker.openedStream.subscribe(() => {\n          this._ariaOwns.set(datepicker.id);\n        });\n        this._registerModel(datepicker.registerInput(this));\n      }\n    }\n    /** The minimum valid date. */\n    get min() {\n      return this._min;\n    }\n    set min(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n        this._validatorOnChange();\n      }\n    }\n    /** The maximum valid date. */\n    get max() {\n      return this._max;\n    }\n    set max(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n        this._validatorOnChange();\n      }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n      return this._dateFilter;\n    }\n    set dateFilter(value) {\n      const wasMatchingValue = this._matchesFilter(this.value);\n      this._dateFilter = value;\n      if (this._matchesFilter(this.value) !== wasMatchingValue) {\n        this._validatorOnChange();\n      }\n    }\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n      super(elementRef, dateAdapter, dateFormats);\n      this._formField = _formField;\n      this._closedSubscription = Subscription.EMPTY;\n      this._openedSubscription = Subscription.EMPTY;\n      /** The id of the panel owned by this input. */\n      this._ariaOwns = signal(null);\n      this._validator = Validators.compose(super._getValidators());\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n      if (this._formField) {\n        return this._formField.getLabelId();\n      }\n      return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n      return this.value;\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._closedSubscription.unsubscribe();\n      this._openedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n      if (this._datepicker) {\n        this._datepicker.open();\n      }\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue;\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        this._model.updateSelection(value, this);\n      }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n      return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n      return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n      return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n      return event.source !== this;\n    }\n    static {\n      this.ɵfac = function MatDatepickerInput_Factory(t) {\n        return new (t || MatDatepickerInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerInput,\n        selectors: [[\"input\", \"matDatepicker\", \"\"]],\n        hostAttrs: [1, \"mat-datepicker-input\"],\n        hostVars: 6,\n        hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", ctx._ariaOwns())(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n          }\n        },\n        inputs: {\n          matDatepicker: \"matDatepicker\",\n          min: \"min\",\n          max: \"max\",\n          dateFilter: [0, \"matDatepickerFilter\", \"dateFilter\"]\n        },\n        exportAs: [\"matDatepickerInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n          provide: MAT_INPUT_VALUE_ACCESSOR,\n          useExisting: MatDatepickerInput\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDatepickerInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nlet MatDatepickerToggleIcon = /*#__PURE__*/(() => {\n  class MatDatepickerToggleIcon {\n    static {\n      this.ɵfac = function MatDatepickerToggleIcon_Factory(t) {\n        return new (t || MatDatepickerToggleIcon)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerToggleIcon,\n        selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerToggleIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDatepickerToggle = /*#__PURE__*/(() => {\n  class MatDatepickerToggle {\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n      if (this._disabled === undefined && this.datepicker) {\n        return this.datepicker.disabled;\n      }\n      return !!this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._stateChanges = Subscription.EMPTY;\n      const parsedTabIndex = Number(defaultTabIndex);\n      this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    ngOnChanges(changes) {\n      if (changes['datepicker']) {\n        this._watchStateChanges();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n      this._watchStateChanges();\n    }\n    _open(event) {\n      if (this.datepicker && !this.disabled) {\n        this.datepicker.open();\n        event.stopPropagation();\n      }\n    }\n    _watchStateChanges() {\n      const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n      const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ? this.datepicker.datepickerInput.stateChanges : of();\n      const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n      this._stateChanges.unsubscribe();\n      this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    static {\n      this.ɵfac = function MatDatepickerToggle_Factory(t) {\n        return new (t || MatDatepickerToggle)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerToggle,\n        selectors: [[\"mat-datepicker-toggle\"]],\n        contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n          }\n        },\n        viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._button = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-datepicker-toggle\"],\n        hostVars: 8,\n        hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) {\n              return ctx._open($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n            i0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n          }\n        },\n        inputs: {\n          datepicker: [0, \"for\", \"datepicker\"],\n          tabIndex: \"tabIndex\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: \"disableRipple\"\n        },\n        exportAs: [\"matDatepickerToggle\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 4,\n        vars: 6,\n        consts: [[\"button\", \"\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n        template: function MatDatepickerToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵelementStart(0, \"button\", 1, 0);\n            i0.ɵɵtemplate(2, MatDatepickerToggle_Conditional_2_Template, 2, 0, \":svg:svg\", 2);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._customIcon ? 2 : -1);\n          }\n        },\n        dependencies: [MatIconButton],\n        styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// This file contains the `_computeAriaAccessibleName` function, which computes what the *expected*\n// ARIA accessible name would be for a given element. Implements a subset of ARIA specification\n// [Accessible Name and Description Computation 1.2](https://www.w3.org/TR/accname-1.2/).\n//\n// Specification accname-1.2 can be summarized by returning the result of the first method\n// available.\n//\n//  1. `aria-labelledby` attribute\n//     ```\n//       <!-- example using aria-labelledby-->\n//       <label id='label-id'>Start Date</label>\n//       <input aria-labelledby='label-id'/>\n//     ```\n//  2. `aria-label` attribute (e.g. `<input aria-label=\"Departure\"/>`)\n//  3. Label with `for`/`id`\n//     ```\n//       <!-- example using for/id -->\n//       <label for=\"current-node\">Label</label>\n//       <input id=\"current-node\"/>\n//     ```\n//  4. `placeholder` attribute (e.g. `<input placeholder=\"06/03/1990\"/>`)\n//  5. `title` attribute (e.g. `<input title=\"Check-In\"/>`)\n//  6. text content\n//     ```\n//       <!-- example using text content -->\n//       <label for=\"current-node\"><span>Departure</span> Date</label>\n//       <input id=\"current-node\"/>\n//     ```\n/**\n * Computes the *expected* ARIA accessible name for argument element based on [accname-1.2\n * specification](https://www.w3.org/TR/accname-1.2/). Implements a subset of accname-1.2,\n * and should only be used for the Datepicker's specific use case.\n *\n * Intended use:\n * This is not a general use implementation. Only implements the parts of accname-1.2 that are\n * required for the Datepicker's specific use case. This function is not intended for any other\n * use.\n *\n * Limitations:\n *  - Only covers the needs of `matStartDate` and `matEndDate`. Does not support other use cases.\n *  - See NOTES's in implementation for specific details on what parts of the accname-1.2\n *  specification are not implemented.\n *\n *  @param element {HTMLInputElement} native &lt;input/&gt; element of `matStartDate` or\n *  `matEndDate` component. Corresponds to the 'Root Element' from accname-1.2\n *\n *  @return expected ARIA accessible name of argument &lt;input/&gt;\n */\nfunction _computeAriaAccessibleName(element) {\n  return _computeAriaAccessibleNameInternal(element, true);\n}\n/**\n * Determine if argument node is an Element based on `nodeType` property. This function is safe to\n * use with server-side rendering.\n */\nfunction ssrSafeIsElement(node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Determine if argument node is an HTMLInputElement based on `nodeName` property. This funciton is\n * safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLInputElement(node) {\n  return node.nodeName === 'INPUT';\n}\n/**\n * Determine if argument node is an HTMLTextAreaElement based on `nodeName` property. This\n * funciton is safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLTextAreaElement(node) {\n  return node.nodeName === 'TEXTAREA';\n}\n/**\n * Calculate the expected ARIA accessible name for given DOM Node. Given DOM Node may be either the\n * \"Root node\" passed to `_computeAriaAccessibleName` or \"Current node\" as result of recursion.\n *\n * @return the accessible name of argument DOM Node\n *\n * @param currentNode node to determine accessible name of\n * @param isDirectlyReferenced true if `currentNode` is the root node to calculate ARIA accessible\n * name of. False if it is a result of recursion.\n */\nfunction _computeAriaAccessibleNameInternal(currentNode, isDirectlyReferenced) {\n  // NOTE: this differs from accname-1.2 specification.\n  //  - Does not implement Step 1. of accname-1.2: '''If `currentNode`'s role prohibits naming,\n  //    return the empty string (\"\")'''.\n  //  - Does not implement Step 2.A. of accname-1.2: '''if current node is hidden and not directly\n  //    referenced by aria-labelledby... return the empty string.'''\n  // acc-name-1.2 Step 2.B.: aria-labelledby\n  if (ssrSafeIsElement(currentNode) && isDirectlyReferenced) {\n    const labelledbyIds = currentNode.getAttribute?.('aria-labelledby')?.split(/\\s+/g) || [];\n    const validIdRefs = labelledbyIds.reduce((validIds, id) => {\n      const elem = document.getElementById(id);\n      if (elem) {\n        validIds.push(elem);\n      }\n      return validIds;\n    }, []);\n    if (validIdRefs.length) {\n      return validIdRefs.map(idRef => {\n        return _computeAriaAccessibleNameInternal(idRef, false);\n      }).join(' ');\n    }\n  }\n  // acc-name-1.2 Step 2.C.: aria-label\n  if (ssrSafeIsElement(currentNode)) {\n    const ariaLabel = currentNode.getAttribute('aria-label')?.trim();\n    if (ariaLabel) {\n      return ariaLabel;\n    }\n  }\n  // acc-name-1.2 Step 2.D. attribute or element that defines a text alternative\n  //\n  // NOTE: this differs from accname-1.2 specification.\n  // Only implements Step 2.D. for `<label>`,`<input/>`, and `<textarea/>` element. Does not\n  // implement other elements that have an attribute or element that defines a text alternative.\n  if (ssrSafeIsHTMLInputElement(currentNode) || ssrSafeIsHTMLTextAreaElement(currentNode)) {\n    // use label with a `for` attribute referencing the current node\n    if (currentNode.labels?.length) {\n      return Array.from(currentNode.labels).map(x => _computeAriaAccessibleNameInternal(x, false)).join(' ');\n    }\n    // use placeholder if available\n    const placeholder = currentNode.getAttribute('placeholder')?.trim();\n    if (placeholder) {\n      return placeholder;\n    }\n    // use title if available\n    const title = currentNode.getAttribute('title')?.trim();\n    if (title) {\n      return title;\n    }\n  }\n  // NOTE: this differs from accname-1.2 specification.\n  //  - does not implement acc-name-1.2 Step 2.E.: '''if the current node is a control embedded\n  //     within the label... then include the embedded control as part of the text alternative in\n  //     the following manner...'''. Step 2E applies to embedded controls such as textbox, listbox,\n  //     range, etc.\n  //  - does not implement acc-name-1.2 step 2.F.: check that '''role allows name from content''',\n  //    which applies to `currentNode` and its children.\n  //  - does not implement acc-name-1.2 Step 2.F.ii.: '''Check for CSS generated textual content'''\n  //    (e.g. :before and :after).\n  //  - does not implement acc-name-1.2 Step 2.I.: '''if the current node has a Tooltip attribute,\n  //    return its value'''\n  // Return text content with whitespace collapsed into a single space character. Accomplish\n  // acc-name-1.2 steps 2F, 2G, and 2H.\n  return (currentNode.textContent || '').replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = /*#__PURE__*/new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nlet MatDateRangeInputPartBase = /*#__PURE__*/(() => {\n  class MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_rangeInput, _elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n      super(_elementRef, dateAdapter, dateFormats);\n      this._rangeInput = _rangeInput;\n      this._elementRef = _elementRef;\n      this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n      this._injector = _injector;\n      this._parentForm = _parentForm;\n      this._parentFormGroup = _parentFormGroup;\n      this._dir = inject(Directionality, {\n        optional: true\n      });\n      this._errorStateTracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, null, this._parentFormGroup, this._parentForm, this.stateChanges);\n    }\n    ngOnInit() {\n      // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n      // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n      // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n      // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n      // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n      // everything has been resolved.\n      const ngControl = this._injector.get(NgControl, null, {\n        optional: true,\n        self: true\n      });\n      if (ngControl) {\n        this.ngControl = ngControl;\n        this._errorStateTracker.ngControl = ngControl;\n      }\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n      }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n      return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n      return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n      this._elementRef.nativeElement.focus();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n      const element = this._elementRef.nativeElement;\n      const value = element.value;\n      return value.length > 0 ? value : element.placeholder;\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n      super._onInput(value);\n      this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n      this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n      return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n      return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n      return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n      return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({\n      source\n    }) {\n      return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n      super._assignValueProgrammatically(value);\n      const opposite = this === this._rangeInput._startInput ? this._rangeInput._endInput : this._rangeInput._startInput;\n      opposite?._validatorOnChange();\n    }\n    /** return the ARIA accessible name of the input element */\n    _getAccessibleName() {\n      return _computeAriaAccessibleName(this._elementRef.nativeElement);\n    }\n    static {\n      this.ɵfac = function MatDateRangeInputPartBase_Factory(t) {\n        return new (t || MatDateRangeInputPartBase)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDateRangeInputPartBase,\n        inputs: {\n          errorStateMatcher: \"errorStateMatcher\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDateRangeInputPartBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Input for entering the start date in a `mat-date-range-input`. */\nlet MatStartDate = /*#__PURE__*/(() => {\n  class MatStartDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n      super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n      /** Validator that checks that the start date isn't after the end date. */\n      this._startValidator = control => {\n        const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const end = this._model ? this._model.selection.end : null;\n        return !start || !end || this._dateAdapter.compareDate(start, end) <= 0 ? null : {\n          'matStartDateInvalid': {\n            'end': end,\n            'actual': start\n          }\n        };\n      };\n      this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n      if (!super._shouldHandleChangeEvent(change)) {\n        return false;\n      } else {\n        return !change.oldValue?.start ? !!change.selection.start : !change.selection.start || !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n      }\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        const range = new DateRange(value, this._model.selection.end);\n        this._model.updateSelection(range, this);\n      }\n    }\n    _formatValue(value) {\n      super._formatValue(value);\n      // Any time the input value is reformatted we need to tell the parent.\n      this._rangeInput._handleChildValueChange();\n    }\n    _onKeydown(event) {\n      const endInput = this._rangeInput._endInput;\n      const element = this._elementRef.nativeElement;\n      const isLtr = this._dir?.value !== 'rtl';\n      // If the user hits RIGHT (LTR) when at the end of the input (and no\n      // selection), move the cursor to the start of the end input.\n      if ((event.keyCode === RIGHT_ARROW && isLtr || event.keyCode === LEFT_ARROW && !isLtr) && element.selectionStart === element.value.length && element.selectionEnd === element.value.length) {\n        event.preventDefault();\n        endInput._elementRef.nativeElement.setSelectionRange(0, 0);\n        endInput.focus();\n      } else {\n        super._onKeydown(event);\n      }\n    }\n    static {\n      this.ɵfac = function MatStartDate_Factory(t) {\n        return new (t || MatStartDate)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatStartDate,\n        selectors: [[\"input\", \"matStartDate\", \"\"]],\n        hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"],\n        hostVars: 5,\n        hostBindings: function MatStartDate_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatStartDate_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            })(\"blur\", function MatStartDate_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n          }\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: MatStartDate,\n          multi: true\n        }, {\n          provide: NG_VALIDATORS,\n          useExisting: MatStartDate,\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatStartDate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Input for entering the end date in a `mat-date-range-input`. */\nlet MatEndDate = /*#__PURE__*/(() => {\n  class MatEndDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n      super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n      /** Validator that checks that the end date isn't before the start date. */\n      this._endValidator = control => {\n        const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const start = this._model ? this._model.selection.start : null;\n        return !end || !start || this._dateAdapter.compareDate(end, start) >= 0 ? null : {\n          'matEndDateInvalid': {\n            'start': start,\n            'actual': end\n          }\n        };\n      };\n      this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n      if (!super._shouldHandleChangeEvent(change)) {\n        return false;\n      } else {\n        return !change.oldValue?.end ? !!change.selection.end : !change.selection.end || !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n      }\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        const range = new DateRange(this._model.selection.start, value);\n        this._model.updateSelection(range, this);\n      }\n    }\n    _moveCaretToEndOfStartInput() {\n      const startInput = this._rangeInput._startInput._elementRef.nativeElement;\n      const value = startInput.value;\n      if (value.length > 0) {\n        startInput.setSelectionRange(value.length, value.length);\n      }\n      startInput.focus();\n    }\n    _onKeydown(event) {\n      const element = this._elementRef.nativeElement;\n      const isLtr = this._dir?.value !== 'rtl';\n      // If the user is pressing backspace on an empty end input, move focus back to the start.\n      if (event.keyCode === BACKSPACE && !element.value) {\n        this._moveCaretToEndOfStartInput();\n      }\n      // If the user hits LEFT (LTR) when at the start of the input (and no\n      // selection), move the cursor to the end of the start input.\n      else if ((event.keyCode === LEFT_ARROW && isLtr || event.keyCode === RIGHT_ARROW && !isLtr) && element.selectionStart === 0 && element.selectionEnd === 0) {\n        event.preventDefault();\n        this._moveCaretToEndOfStartInput();\n      } else {\n        super._onKeydown(event);\n      }\n    }\n    static {\n      this.ɵfac = function MatEndDate_Factory(t) {\n        return new (t || MatEndDate)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatEndDate,\n        selectors: [[\"input\", \"matEndDate\", \"\"]],\n        hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"],\n        hostVars: 5,\n        hostBindings: function MatEndDate_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatEndDate_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            })(\"blur\", function MatEndDate_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n          }\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: MatEndDate,\n          multi: true\n        }, {\n          provide: NG_VALIDATORS,\n          useExisting: MatEndDate,\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatEndDate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId = 0;\nlet MatDateRangeInput = /*#__PURE__*/(() => {\n  class MatDateRangeInput {\n    /** Current value of the range input. */\n    get value() {\n      return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n      return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n      const start = this._startInput?._getPlaceholder() || '';\n      const end = this._endInput?._getPlaceholder() || '';\n      return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n      return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n      if (rangePicker) {\n        this._model = rangePicker.registerInput(this);\n        this._rangePicker = rangePicker;\n        this._closedSubscription.unsubscribe();\n        this._openedSubscription.unsubscribe();\n        this._ariaOwns.set(this.rangePicker.opened ? rangePicker.id : null);\n        this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n          this._startInput?._onTouched();\n          this._endInput?._onTouched();\n          this._ariaOwns.set(null);\n        });\n        this._openedSubscription = rangePicker.openedStream.subscribe(() => {\n          this._ariaOwns.set(rangePicker.id);\n        });\n        this._registerModel(this._model);\n      }\n    }\n    /** Whether the input is required. */\n    get required() {\n      return this._required ?? (this._isTargetRequired(this) || this._isTargetRequired(this._startInput) || this._isTargetRequired(this._endInput)) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n      return this._dateFilter;\n    }\n    set dateFilter(value) {\n      const start = this._startInput;\n      const end = this._endInput;\n      const wasMatchingStart = start && start._matchesFilter(start.value);\n      const wasMatchingEnd = end && end._matchesFilter(start.value);\n      this._dateFilter = value;\n      if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n        start._validatorOnChange();\n      }\n      if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n        end._validatorOnChange();\n      }\n    }\n    /** The minimum valid date. */\n    get min() {\n      return this._min;\n    }\n    set min(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n        this._revalidate();\n      }\n    }\n    /** The maximum valid date. */\n    get max() {\n      return this._max;\n    }\n    set max(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n        this._revalidate();\n      }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n      return this._startInput && this._endInput ? this._startInput.disabled && this._endInput.disabled : this._groupDisabled;\n    }\n    set disabled(value) {\n      if (value !== this._groupDisabled) {\n        this._groupDisabled = value;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      if (this._startInput && this._endInput) {\n        return this._startInput.errorState || this._endInput.errorState;\n      }\n      return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n      const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n      const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n      return startEmpty && endEmpty;\n    }\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._dateAdapter = _dateAdapter;\n      this._formField = _formField;\n      this._closedSubscription = Subscription.EMPTY;\n      this._openedSubscription = Subscription.EMPTY;\n      /** Unique ID for the group. */\n      this.id = `mat-date-range-input-${nextUniqueId++}`;\n      /** Whether the control is focused. */\n      this.focused = false;\n      /** Name of the form control. */\n      this.controlType = 'mat-date-range-input';\n      /** The id of the panel owned by this input. */\n      this._ariaOwns = signal(null);\n      this._groupDisabled = false;\n      /** Value for the `aria-describedby` attribute of the inputs. */\n      this._ariaDescribedBy = null;\n      /** Separator text to be shown between the inputs. */\n      this.separator = '–';\n      /** Start of the comparison range that should be shown in the calendar. */\n      this.comparisonStart = null;\n      /** End of the comparison range that should be shown in the calendar. */\n      this.comparisonEnd = null;\n      /** Emits when the input's state has changed. */\n      this.stateChanges = new Subject();\n      /**\n       * Disable the automatic labeling to avoid issues like #27241.\n       * @docs-private\n       */\n      this.disableAutomaticLabeling = true;\n      if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      // The datepicker module can be used both with MDC and non-MDC form fields. We have\n      // to conditionally add the MDC input class so that the range picker looks correctly.\n      if (_formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n        _elementRef.nativeElement.classList.add('mat-mdc-input-element', 'mat-mdc-form-field-input-control', 'mdc-text-field__input');\n      }\n      // TODO(crisbeto): remove `as any` after #18206 lands.\n      this.ngControl = control;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n      if (!this.focused && !this.disabled) {\n        if (!this._model || !this._model.selection.start) {\n          this._startInput.focus();\n        } else {\n          this._endInput.focus();\n        }\n      }\n    }\n    ngAfterContentInit() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._startInput) {\n          throw Error('mat-date-range-input must contain a matStartDate input');\n        }\n        if (!this._endInput) {\n          throw Error('mat-date-range-input must contain a matEndDate input');\n        }\n      }\n      if (this._model) {\n        this._registerModel(this._model);\n      }\n      // We don't need to unsubscribe from this, because we\n      // know that the input streams will be completed on destroy.\n      merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n        this.stateChanges.next(undefined);\n      });\n    }\n    ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n    ngOnDestroy() {\n      this._closedSubscription.unsubscribe();\n      this._openedSubscription.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n      return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n      return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue(part) {\n      const input = part === 'start' ? this._startInput : this._endInput;\n      return input ? input.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n      return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n      this.stateChanges.next(undefined);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n      if (this._rangePicker) {\n        this._rangePicker.open();\n      }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n      return (!this._formField || this._formField.getLabelId() && !this._formField._shouldLabelFloat()) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n      const formField = this._formField;\n      return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    _getStartDateAccessibleName() {\n      return this._startInput._getAccessibleName();\n    }\n    _getEndDateAccessibleName() {\n      return this._endInput._getAccessibleName();\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n      this.focused = origin !== null;\n      this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n      if (this._startInput) {\n        this._startInput._validatorOnChange();\n      }\n      if (this._endInput) {\n        this._endInput._validatorOnChange();\n      }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n      if (this._startInput) {\n        this._startInput._registerModel(model);\n      }\n      if (this._endInput) {\n        this._endInput._registerModel(model);\n      }\n    }\n    /** Checks whether a specific range input directive is required. */\n    _isTargetRequired(target) {\n      return target?.ngControl?.control?.hasValidator(Validators.required);\n    }\n    static {\n      this.ɵfac = function MatDateRangeInput_Factory(t) {\n        return new (t || MatDateRangeInput)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2$1.ControlContainer, 10), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDateRangeInput,\n        selectors: [[\"mat-date-range-input\"]],\n        contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatStartDate, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatEndDate, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"],\n        hostVars: 8,\n        hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n            i0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n          }\n        },\n        inputs: {\n          rangePicker: \"rangePicker\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          dateFilter: \"dateFilter\",\n          min: \"min\",\n          max: \"max\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          separator: \"separator\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\"\n        },\n        exportAs: [\"matDateRangeInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatDateRangeInput\n        }, {\n          provide: MAT_DATE_RANGE_INPUT_PARENT,\n          useExisting: MatDateRangeInput\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c6,\n        decls: 11,\n        vars: 5,\n        consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-wrapper\", \"mat-date-range-input-end-wrapper\"]],\n        template: function MatDateRangeInput_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c5);\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) {\n              return ctx._updateFocus($event);\n            });\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementStart(3, \"span\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"span\", 3);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 4);\n            i0.ɵɵprojection(8, 1);\n            i0.ɵɵelementStart(9, \"span\", 2);\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"start\"));\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.separator);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"end\"));\n          }\n        },\n        dependencies: [CdkMonitorFocus],\n        styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-app-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color)}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDateRangeInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nlet MatDateRangePicker = /*#__PURE__*/(() => {\n  class MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n      super._forwardContentValues(instance);\n      const input = this.datepickerInput;\n      if (input) {\n        instance.comparisonStart = input.comparisonStart;\n        instance.comparisonEnd = input.comparisonEnd;\n        instance.startDateAccessibleName = input._getStartDateAccessibleName();\n        instance.endDateAccessibleName = input._getEndDateAccessibleName();\n      }\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDateRangePicker_BaseFactory;\n        return function MatDateRangePicker_Factory(t) {\n          return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDateRangePicker)))(t || MatDateRangePicker);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDateRangePicker,\n        selectors: [[\"mat-date-range-picker\"]],\n        exportAs: [\"matDateRangePicker\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n          provide: MatDatepickerBase,\n          useExisting: MatDateRangePicker\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDateRangePicker_Template(rf, ctx) {},\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDateRangePicker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\nlet MatDatepickerApply = /*#__PURE__*/(() => {\n  class MatDatepickerApply {\n    constructor(_datepicker) {\n      this._datepicker = _datepicker;\n    }\n    _applySelection() {\n      this._datepicker._applyPendingSelection();\n      this._datepicker.close();\n    }\n    static {\n      this.ɵfac = function MatDatepickerApply_Factory(t) {\n        return new (t || MatDatepickerApply)(i0.ɵɵdirectiveInject(MatDatepickerBase));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerApply,\n        selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]],\n        hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() {\n              return ctx._applySelection();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerApply;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Button that will close the datepicker and discard the current selection. */\nlet MatDatepickerCancel = /*#__PURE__*/(() => {\n  class MatDatepickerCancel {\n    constructor(_datepicker) {\n      this._datepicker = _datepicker;\n    }\n    static {\n      this.ɵfac = function MatDatepickerCancel_Factory(t) {\n        return new (t || MatDatepickerCancel)(i0.ɵɵdirectiveInject(MatDatepickerBase));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerCancel,\n        selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]],\n        hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() {\n              return ctx._datepicker.close();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerCancel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nlet MatDatepickerActions = /*#__PURE__*/(() => {\n  class MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n      this._datepicker = _datepicker;\n      this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n      this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n      this._datepicker.removeActions(this._portal);\n      // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n      if (this._portal && this._portal.isAttached) {\n        this._portal?.detach();\n      }\n    }\n    static {\n      this.ɵfac = function MatDatepickerActions_Factory(t) {\n        return new (t || MatDatepickerActions)(i0.ɵɵdirectiveInject(MatDatepickerBase), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerActions,\n        selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]],\n        viewQuery: function MatDatepickerActions_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._template = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 1,\n        vars: 0,\n        consts: [[1, \"mat-datepicker-actions\"]],\n        template: function MatDatepickerActions_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n          }\n        },\n        styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDatepickerModule = /*#__PURE__*/(() => {\n  class MatDatepickerModule {\n    static {\n      this.ɵfac = function MatDatepickerModule_Factory(t) {\n        return new (t || MatDatepickerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatDatepickerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [CommonModule, MatButtonModule, OverlayModule, A11yModule, PortalModule, MatCommonModule, MatDatepickerContent, MatDatepickerToggle, MatCalendarHeader, CdkScrollableModule]\n      });\n    }\n  }\n  return MatDatepickerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nfunction CdkDialogContainer_ng_template_0_Template(rf, ctx) {}\nclass DialogConfig {\n  constructor() {\n    /** The ARIA role of the dialog element. */\n    this.role = 'dialog';\n    /** Optional CSS class or classes applied to the overlay panel. */\n    this.panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    this.hasBackdrop = true;\n    /** Optional CSS class or classes applied to the overlay backdrop. */\n    this.backdropClass = '';\n    /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n    this.disableClose = false;\n    /** Width of the dialog. */\n    this.width = '';\n    /** Height of the dialog. */\n    this.height = '';\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** ID of the element that describes the dialog. */\n    this.ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    this.ariaLabelledBy = null;\n    /** Dialog label applied via `aria-label` */\n    this.ariaLabel = null;\n    /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n    this.ariaModal = true;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the previously-focused element upon closing.\n     * Has the following behavior based on the type that is passed in:\n     * - `boolean` - when true, will return focus to the element that was focused before the dialog\n     *    was opened, otherwise won't restore focus at all.\n     * - `string` - focus will be restored to the first element that matches the CSS selector.\n     * - `HTMLElement` - focus will be restored to the specific element.\n     */\n    this.restoreFocus = true;\n    /**\n     * Whether the dialog should close when the user navigates backwards or forwards through browser\n     * history. This does not apply to navigation via anchor element unless using URL-hash based\n     * routing (`HashLocationStrategy` in the Angular router).\n     */\n    this.closeOnNavigation = true;\n    /**\n     * Whether the dialog should close when the dialog service is destroyed. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead.\n     */\n    this.closeOnDestroy = true;\n    /**\n     * Whether the dialog should close when the underlying overlay is detached. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n     * external detachment can happen as a result of a scroll strategy triggering it or when the\n     * browser location changes.\n     */\n    this.closeOnOverlayDetachments = true;\n  }\n}\nfunction throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nlet CdkDialogContainer = /*#__PURE__*/(() => {\n  class CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n      super();\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      this._config = _config;\n      this._interactivityChecker = _interactivityChecker;\n      this._ngZone = _ngZone;\n      this._overlayRef = _overlayRef;\n      this._focusMonitor = _focusMonitor;\n      this._platform = inject(Platform);\n      /** The class that traps and manages focus within the dialog. */\n      this._focusTrap = null;\n      /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n      this._elementFocusedBeforeDialogWasOpened = null;\n      /**\n       * Type of interaction that led to the dialog being closed. This is used to determine\n       * whether the focus style will be applied when returning focus to its original location\n       * after the dialog is closed.\n       */\n      this._closeInteractionType = null;\n      /**\n       * Queue of the IDs of the dialog's label element, based on their definition order. The first\n       * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n       * where there are two or more titles in the DOM at a time and the first one is destroyed while\n       * the rest are present.\n       */\n      this._ariaLabelledByQueue = [];\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      this._injector = inject(Injector);\n      this._isDestroyed = false;\n      /**\n       * Attaches a DOM portal to the dialog container.\n       * @param portal Portal to be attached.\n       * @deprecated To be turned into a method.\n       * @breaking-change 10.0.0\n       */\n      this.attachDomPortal = portal => {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachDomPortal(portal);\n        this._contentAttached();\n        return result;\n      };\n      this._document = _document;\n      if (this._config.ariaLabelledBy) {\n        this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n      }\n    }\n    _addAriaLabelledBy(id) {\n      this._ariaLabelledByQueue.push(id);\n      this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n      const index = this._ariaLabelledByQueue.indexOf(id);\n      if (index > -1) {\n        this._ariaLabelledByQueue.splice(index, 1);\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    _contentAttached() {\n      this._initializeFocusTrap();\n      this._handleBackdropClicks();\n      this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n      this._trapFocus();\n    }\n    ngOnDestroy() {\n      this._isDestroyed = true;\n      this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwDialogContentAlreadyAttachedError();\n      }\n      const result = this._portalOutlet.attachComponentPortal(portal);\n      this._contentAttached();\n      return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwDialogContentAlreadyAttachedError();\n      }\n      const result = this._portalOutlet.attachTemplatePortal(portal);\n      this._contentAttached();\n      return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n      if (!this._containsFocus()) {\n        this._trapFocus();\n      }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n      if (!this._interactivityChecker.isFocusable(element)) {\n        element.tabIndex = -1;\n        // The tabindex attribute should be removed to avoid navigating to that element again\n        this._ngZone.runOutsideAngular(() => {\n          const callback = () => {\n            element.removeEventListener('blur', callback);\n            element.removeEventListener('mousedown', callback);\n            element.removeAttribute('tabindex');\n          };\n          element.addEventListener('blur', callback);\n          element.addEventListener('mousedown', callback);\n        });\n      }\n      element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n      let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n      if (elementToFocus) {\n        this._forceFocus(elementToFocus, options);\n      }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n      if (this._isDestroyed) {\n        return;\n      }\n      // If were to attempt to focus immediately, then the content of the dialog would not yet be\n      // ready in instances where change detection has to run first. To deal with this, we simply\n      // wait until after the next render.\n      afterNextRender(() => {\n        const element = this._elementRef.nativeElement;\n        switch (this._config.autoFocus) {\n          case false:\n          case 'dialog':\n            // Ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (!this._containsFocus()) {\n              element.focus();\n            }\n            break;\n          case true:\n          case 'first-tabbable':\n            const focusedSuccessfully = this._focusTrap?.focusInitialElement();\n            // If we weren't able to find a focusable element in the dialog, then focus the dialog\n            // container instead.\n            if (!focusedSuccessfully) {\n              this._focusDialogContainer();\n            }\n            break;\n          case 'first-heading':\n            this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n            break;\n          default:\n            this._focusByCssSelector(this._config.autoFocus);\n            break;\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n      const focusConfig = this._config.restoreFocus;\n      let focusTargetElement = null;\n      if (typeof focusConfig === 'string') {\n        focusTargetElement = this._document.querySelector(focusConfig);\n      } else if (typeof focusConfig === 'boolean') {\n        focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n      } else if (focusConfig) {\n        focusTargetElement = focusConfig;\n      }\n      // We need the extra check, because IE can set the `activeElement` to null in some cases.\n      if (this._config.restoreFocus && focusTargetElement && typeof focusTargetElement.focus === 'function') {\n        const activeElement = _getFocusedElementPierceShadowDom();\n        const element = this._elementRef.nativeElement;\n        // Make sure that focus is still inside the dialog or is on the body (usually because a\n        // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n        // the consumer moved it themselves before the animation was done, in which case we shouldn't\n        // do anything.\n        if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n          if (this._focusMonitor) {\n            this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n            this._closeInteractionType = null;\n          } else {\n            focusTargetElement.focus();\n          }\n        }\n      }\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        this._elementRef.nativeElement.focus();\n      }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n      const element = this._elementRef.nativeElement;\n      const activeElement = _getFocusedElementPierceShadowDom();\n      return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n      if (this._platform.isBrowser) {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        if (this._document) {\n          this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n      }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n      // Clicking on the backdrop will move focus out of dialog.\n      // Recapture it if closing via the backdrop is disabled.\n      this._overlayRef.backdropClick().subscribe(() => {\n        if (this._config.disableClose) {\n          this._recaptureFocus();\n        }\n      });\n    }\n    static {\n      this.ɵfac = function CdkDialogContainer_Factory(t) {\n        return new (t || CdkDialogContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(DialogConfig), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.OverlayRef), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkDialogContainer,\n        selectors: [[\"cdk-dialog-container\"]],\n        viewQuery: function CdkDialogContainer_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n          }\n        },\n        hostAttrs: [\"tabindex\", \"-1\", 1, \"cdk-dialog-container\"],\n        hostVars: 6,\n        hostBindings: function CdkDialogContainer_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx._config.id || null)(\"role\", ctx._config.role)(\"aria-modal\", ctx._config.ariaModal)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkPortalOutlet\", \"\"]],\n        template: function CdkDialogContainer_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, CdkDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n          }\n        },\n        dependencies: [CdkPortalOutlet],\n        styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkDialogContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n  constructor(overlayRef, config) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    /** Emits when the dialog has been closed. */\n    this.closed = new Subject();\n    this.disableClose = config.disableClose;\n    this.backdropClick = overlayRef.backdropClick();\n    this.keydownEvents = overlayRef.keydownEvents();\n    this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n    this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n    this.keydownEvents.subscribe(event => {\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close(undefined, {\n          focusOrigin: 'keyboard'\n        });\n      }\n    });\n    this.backdropClick.subscribe(() => {\n      if (!this.disableClose) {\n        this.close(undefined, {\n          focusOrigin: 'mouse'\n        });\n      }\n    });\n    this._detachSubscription = overlayRef.detachments().subscribe(() => {\n      // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n      if (config.closeOnOverlayDetachments !== false) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param result Optional result to return to the dialog opener.\n   * @param options Additional options to customize the closing behavior.\n   */\n  close(result, options) {\n    if (this.containerInstance) {\n      const closedSubject = this.closed;\n      this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n      // Drop the detach subscription first since it can be triggered by the\n      // `dispose` call and override the result of this closing sequence.\n      this._detachSubscription.unsubscribe();\n      this.overlayRef.dispose();\n      closedSubject.next(result);\n      closedSubject.complete();\n      this.componentInstance = this.containerInstance = null;\n    }\n  }\n  /** Updates the position of the dialog based on the current position strategy. */\n  updatePosition() {\n    this.overlayRef.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this.overlayRef.updateSize({\n      width,\n      height\n    });\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this.overlayRef.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this.overlayRef.removePanelClass(classes);\n    return this;\n  }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('DialogScrollStrategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = /*#__PURE__*/new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = /*#__PURE__*/new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nlet Dialog = /*#__PURE__*/(() => {\n  class Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n      return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n      return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n      this._overlay = _overlay;\n      this._injector = _injector;\n      this._defaultOptions = _defaultOptions;\n      this._parentDialog = _parentDialog;\n      this._overlayContainer = _overlayContainer;\n      this._openDialogsAtThisLevel = [];\n      this._afterAllClosedAtThisLevel = new Subject();\n      this._afterOpenedAtThisLevel = new Subject();\n      this._ariaHiddenElements = new Map();\n      /**\n       * Stream that emits when all open dialog have finished closing.\n       * Will emit on subscribe if there are no open dialogs to begin with.\n       */\n      this.afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n      this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n      const defaults = this._defaultOptions || new DialogConfig();\n      config = {\n        ...defaults,\n        ...config\n      };\n      config.id = config.id || `cdk-dialog-${uniqueId++}`;\n      if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n      }\n      const overlayConfig = this._getOverlayConfig(config);\n      const overlayRef = this._overlay.create(overlayConfig);\n      const dialogRef = new DialogRef(overlayRef, config);\n      const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n      dialogRef.containerInstance = dialogContainer;\n      this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n      // If this is the first dialog that we're opening, hide all the non-overlay content.\n      if (!this.openDialogs.length) {\n        this._hideNonDialogContentFromAssistiveTechnology();\n      }\n      this.openDialogs.push(dialogRef);\n      dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n      this.afterOpened.next(dialogRef);\n      return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n      reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n      return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n      // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n      // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n      // determines when `aria-hidden` is removed from elements outside the dialog.\n      reverseForEach(this._openDialogsAtThisLevel, dialog => {\n        // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n        if (dialog.config.closeOnDestroy === false) {\n          this._removeOpenDialog(dialog, false);\n        }\n      });\n      // Make a second pass and close the remaining dialogs. We do this second pass in order to\n      // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n      // that should be closed and dialogs that should not.\n      reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n      this._afterAllClosedAtThisLevel.complete();\n      this._afterOpenedAtThisLevel.complete();\n      this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n      const state = new OverlayConfig({\n        positionStrategy: config.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),\n        scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n        panelClass: config.panelClass,\n        hasBackdrop: config.hasBackdrop,\n        direction: config.direction,\n        minWidth: config.minWidth,\n        minHeight: config.minHeight,\n        maxWidth: config.maxWidth,\n        maxHeight: config.maxHeight,\n        width: config.width,\n        height: config.height,\n        disposeOnNavigation: config.closeOnNavigation\n      });\n      if (config.backdropClass) {\n        state.backdropClass = config.backdropClass;\n      }\n      return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n      const userInjector = config.injector || config.viewContainerRef?.injector;\n      const providers = [{\n        provide: DialogConfig,\n        useValue: config\n      }, {\n        provide: DialogRef,\n        useValue: dialogRef\n      }, {\n        provide: OverlayRef,\n        useValue: overlay\n      }];\n      let containerType;\n      if (config.container) {\n        if (typeof config.container === 'function') {\n          containerType = config.container;\n        } else {\n          containerType = config.container.type;\n          providers.push(...config.container.providers(config));\n        }\n      } else {\n        containerType = CdkDialogContainer;\n      }\n      const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({\n        parent: userInjector || this._injector,\n        providers\n      }), config.componentFactoryResolver);\n      const containerRef = overlay.attach(containerPortal);\n      return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n      if (componentOrTemplateRef instanceof TemplateRef) {\n        const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n        let context = {\n          $implicit: config.data,\n          dialogRef\n        };\n        if (config.templateContext) {\n          context = {\n            ...context,\n            ...(typeof config.templateContext === 'function' ? config.templateContext() : config.templateContext)\n          };\n        }\n        dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n      } else {\n        const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n        const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n        dialogRef.componentRef = contentRef;\n        dialogRef.componentInstance = contentRef.instance;\n      }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n      const userInjector = config.injector || config.viewContainerRef?.injector;\n      const providers = [{\n        provide: DIALOG_DATA,\n        useValue: config.data\n      }, {\n        provide: DialogRef,\n        useValue: dialogRef\n      }];\n      if (config.providers) {\n        if (typeof config.providers === 'function') {\n          providers.push(...config.providers(dialogRef, config, dialogContainer));\n        } else {\n          providers.push(...config.providers);\n        }\n      }\n      if (config.direction && (!userInjector || !userInjector.get(Directionality, null, {\n        optional: true\n      }))) {\n        providers.push({\n          provide: Directionality,\n          useValue: {\n            value: config.direction,\n            change: of()\n          }\n        });\n      }\n      return Injector.create({\n        parent: userInjector || fallbackInjector,\n        providers\n      });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n      const index = this.openDialogs.indexOf(dialogRef);\n      if (index > -1) {\n        this.openDialogs.splice(index, 1);\n        // If all the dialogs were closed, remove/restore the `aria-hidden`\n        // to a the siblings and emit to the `afterAllClosed` stream.\n        if (!this.openDialogs.length) {\n          this._ariaHiddenElements.forEach((previousValue, element) => {\n            if (previousValue) {\n              element.setAttribute('aria-hidden', previousValue);\n            } else {\n              element.removeAttribute('aria-hidden');\n            }\n          });\n          this._ariaHiddenElements.clear();\n          if (emitEvent) {\n            this._getAfterAllClosed().next();\n          }\n        }\n      }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n      const overlayContainer = this._overlayContainer.getContainerElement();\n      // Ensure that the overlay container is attached to the DOM.\n      if (overlayContainer.parentElement) {\n        const siblings = overlayContainer.parentElement.children;\n        for (let i = siblings.length - 1; i > -1; i--) {\n          const sibling = siblings[i];\n          if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {\n            this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n            sibling.setAttribute('aria-hidden', 'true');\n          }\n        }\n      }\n    }\n    _getAfterAllClosed() {\n      const parent = this._parentDialog;\n      return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static {\n      this.ɵfac = function Dialog_Factory(t) {\n        return new (t || Dialog)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DEFAULT_DIALOG_CONFIG, 8), i0.ɵɵinject(Dialog, 12), i0.ɵɵinject(i1$1.OverlayContainer), i0.ɵɵinject(DIALOG_SCROLL_STRATEGY));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Dialog,\n        factory: Dialog.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Dialog;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n  let i = items.length;\n  while (i--) {\n    callback(items[i]);\n  }\n}\nlet DialogModule = /*#__PURE__*/(() => {\n  class DialogModule {\n    static {\n      this.ɵfac = function DialogModule_Factory(t) {\n        return new (t || DialogModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: DialogModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [Dialog],\n        imports: [OverlayModule, PortalModule, A11yModule,\n        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n        // don't have to remember to import it or be faced with an unhelpful error.\n        PortalModule]\n      });\n    }\n  }\n  return DialogModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nfunction MatDialogContainer_ng_template_2_Template(rf, ctx) {}\nclass MatDialogConfig {\n  constructor() {\n    /** The ARIA role of the dialog element. */\n    this.role = 'dialog';\n    /** Custom class for the overlay pane. */\n    this.panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    this.hasBackdrop = true;\n    /** Custom class for the backdrop. */\n    this.backdropClass = '';\n    /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n    this.disableClose = false;\n    /** Width of the dialog. */\n    this.width = '';\n    /** Height of the dialog. */\n    this.height = '';\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** ID of the element that describes the dialog. */\n    this.ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    this.ariaLabelledBy = null;\n    /** Aria label to assign to the dialog element. */\n    this.ariaLabel = null;\n    /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n    this.ariaModal = true;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    this.restoreFocus = true;\n    /** Whether to wait for the opening animation to finish before trapping focus. */\n    this.delayFocusTrap = true;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.closeOnNavigation = true;\n    // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n  }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nlet MatDialogContainer = /*#__PURE__*/(() => {\n  class MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n      super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n      this._animationMode = _animationMode;\n      /** Emits when an animation state changes. */\n      this._animationStateChanged = new EventEmitter();\n      /** Whether animations are enabled. */\n      this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n      /** Number of actions projected in the dialog. */\n      this._actionSectionCount = 0;\n      /** Host element of the dialog container component. */\n      this._hostElement = this._elementRef.nativeElement;\n      /** Duration of the dialog open animation. */\n      this._enterAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION : 0;\n      /** Duration of the dialog close animation. */\n      this._exitAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION : 0;\n      /** Current timer for dialog animations. */\n      this._animationTimer = null;\n      /**\n       * Completes the dialog open by clearing potential animation classes, trapping\n       * focus and emitting an opened event.\n       */\n      this._finishDialogOpen = () => {\n        this._clearAnimationClasses();\n        this._openAnimationDone(this._enterAnimationDuration);\n      };\n      /**\n       * Completes the dialog close by clearing potential animation classes, restoring\n       * focus and emitting a closed event.\n       */\n      this._finishDialogClose = () => {\n        this._clearAnimationClasses();\n        this._animationStateChanged.emit({\n          state: 'closed',\n          totalTime: this._exitAnimationDuration\n        });\n      };\n    }\n    _contentAttached() {\n      // Delegate to the original dialog-container initialization (i.e. saving the\n      // previous element, setting up the focus trap and moving focus to the container).\n      super._contentAttached();\n      // Note: Usually we would be able to use the MDC dialog foundation here to handle\n      // the dialog animation for us, but there are a few reasons why we just leverage\n      // their styles and not use the runtime foundation code:\n      //   1. Foundation does not allow us to disable animations.\n      //   2. Foundation contains unnecessary features we don't need and aren't\n      //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n      this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n      this._animationStateChanged.emit({\n        state: 'opening',\n        totalTime: this._enterAnimationDuration\n      });\n      if (this._animationsEnabled) {\n        this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n        // We need to give the `setProperty` call from above some time to be applied.\n        // One would expect that the open class is added once the animation finished, but MDC\n        // uses the open class in combination with the opening class to start the animation.\n        this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n        this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n      } else {\n        this._hostElement.classList.add(OPEN_CLASS);\n        // Note: We could immediately finish the dialog opening here with noop animations,\n        // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n        // Executing this immediately would mean that `afterOpened` emits synchronously\n        // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n        Promise.resolve().then(() => this._finishDialogOpen());\n      }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n      this._animationStateChanged.emit({\n        state: 'closing',\n        totalTime: this._exitAnimationDuration\n      });\n      this._hostElement.classList.remove(OPEN_CLASS);\n      if (this._animationsEnabled) {\n        this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n        // We need to give the `setProperty` call from above some time to be applied.\n        this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n        this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n      } else {\n        // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n        // set up before any user can subscribe to the backdrop click. The subscription triggers\n        // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n        // animation state event if animations are disabled, the overlay would be disposed\n        // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n        // skipped. We work around this by waiting with the dialog close until the next tick when\n        // all subscriptions have been fired as expected. This is not an ideal solution, but\n        // there doesn't seem to be any other good way. Alternatives that have been considered:\n        //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n        //      Also this issue is specific to the MDC implementation where the dialog could\n        //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n        //      and closing always takes at least a tick.\n        //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n        //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n        //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n        // Based on the fact that this is specific to the MDC-based implementation of the dialog\n        // animations, the defer is applied here.\n        Promise.resolve().then(() => this._finishDialogClose());\n      }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n      this._actionSectionCount += delta;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n      this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n      if (this._animationTimer !== null) {\n        clearTimeout(this._animationTimer);\n      }\n      // Note that we want this timer to run inside the NgZone, because we want\n      // the related events like `afterClosed` to be inside the zone as well.\n      this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n      this._ngZone.runOutsideAngular(() => {\n        if (typeof requestAnimationFrame === 'function') {\n          requestAnimationFrame(callback);\n        } else {\n          callback();\n        }\n      });\n    }\n    _captureInitialFocus() {\n      if (!this._config.delayFocusTrap) {\n        this._trapFocus();\n      }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n      if (this._config.delayFocusTrap) {\n        this._trapFocus();\n      }\n      this._animationStateChanged.next({\n        state: 'opened',\n        totalTime\n      });\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      if (this._animationTimer !== null) {\n        clearTimeout(this._animationTimer);\n      }\n    }\n    attachComponentPortal(portal) {\n      // When a component is passed into the dialog, the host element interrupts\n      // the `display:flex` from affecting the dialog title, content, and\n      // actions. To fix this, we make the component host `display: contents` by\n      // marking its host with the `mat-mdc-dialog-component-host` class.\n      //\n      // Note that this problem does not exist when a template ref is used since\n      // the title, contents, and actions are then nested directly under the\n      // dialog surface.\n      const ref = super.attachComponentPortal(portal);\n      ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n      return ref;\n    }\n    static {\n      this.ɵfac = function MatDialogContainer_Factory(t) {\n        return new (t || MatDialogContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MatDialogConfig), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.OverlayRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDialogContainer,\n        selectors: [[\"mat-dialog-container\"]],\n        hostAttrs: [\"tabindex\", \"-1\", 1, \"mat-mdc-dialog-container\", \"mdc-dialog\"],\n        hostVars: 10,\n        hostBindings: function MatDialogContainer_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx._config.id);\n            i0.ɵɵattribute(\"aria-modal\", ctx._config.ariaModal)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", !ctx._animationsEnabled)(\"mat-mdc-dialog-container-with-actions\", ctx._actionSectionCount > 0);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 3,\n        vars: 0,\n        consts: [[1, \"mat-mdc-dialog-inner-container\", \"mdc-dialog__container\"], [1, \"mat-mdc-dialog-surface\", \"mdc-dialog__surface\"], [\"cdkPortalOutlet\", \"\"]],\n        template: function MatDialogContainer_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtemplate(2, MatDialogContainer_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n            i0.ɵɵelementEnd()();\n          }\n        },\n        dependencies: [CdkPortalOutlet],\n        styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12));border-radius:var(--mdc-dialog-container-shape, var(--mat-app-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-app-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-app-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-app-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-app-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-app-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-app-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-app-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-app-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-app-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-app-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-app-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-app-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.cdk-high-contrast-active .mat-mdc-dialog-actions{border-top-color:CanvasText}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatDialogContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n  if (time == null) {\n    return null;\n  }\n  if (typeof time === 'number') {\n    return time;\n  }\n  if (time.endsWith('ms')) {\n    return coerceNumberProperty(time.substring(0, time.length - 2));\n  }\n  if (time.endsWith('s')) {\n    return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n  }\n  if (time === '0') {\n    return 0;\n  }\n  return null; // anything else is invalid.\n}\nvar MatDialogState = /*#__PURE__*/function (MatDialogState) {\n  MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n  MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n  MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n  return MatDialogState;\n}(MatDialogState || {});\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n  constructor(_ref, config, _containerInstance) {\n    this._ref = _ref;\n    this._containerInstance = _containerInstance;\n    /** Subject for notifying the user that the dialog has finished opening. */\n    this._afterOpened = new Subject();\n    /** Subject for notifying the user that the dialog has started closing. */\n    this._beforeClosed = new Subject();\n    /** Current state of the dialog. */\n    this._state = MatDialogState.OPEN;\n    this.disableClose = config.disableClose;\n    this.id = _ref.id;\n    // Used to target panels specifically tied to dialogs.\n    _ref.addPanelClass('mat-mdc-dialog-panel');\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n    _ref.overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._finishDialogClose();\n    });\n    merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n      if (!this.disableClose) {\n        event.preventDefault();\n        _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult) {\n    this._result = dialogResult;\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1)).subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._ref.overlayRef.detachBackdrop();\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n    });\n    this._state = MatDialogState.CLOSING;\n    this._containerInstance._startExitAnimation();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed() {\n    return this._ref.closed;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed() {\n    return this._beforeClosed;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._ref.backdropClick;\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._ref.keydownEvents;\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position) {\n    let strategy = this._ref.config.positionStrategy;\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n    this._ref.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this._ref.updateSize(width, height);\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this._ref.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this._ref.removePanelClass(classes);\n    return this;\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState() {\n    return this._state;\n  }\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._ref.close(this._result, {\n      focusOrigin: this._closeInteractionType\n    });\n    this.componentInstance = null;\n  }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n  ref._closeInteractionType = interactionType;\n  return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = /*#__PURE__*/new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nlet MatDialog = /*#__PURE__*/(() => {\n  class MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n      return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n      return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n      const parent = this._parentDialog;\n      return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector,\n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog,\n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer,\n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n      this._overlay = _overlay;\n      this._defaultOptions = _defaultOptions;\n      this._scrollStrategy = _scrollStrategy;\n      this._parentDialog = _parentDialog;\n      this._openDialogsAtThisLevel = [];\n      this._afterAllClosedAtThisLevel = new Subject();\n      this._afterOpenedAtThisLevel = new Subject();\n      this.dialogConfigClass = MatDialogConfig;\n      /**\n       * Stream that emits when all open dialog have finished closing.\n       * Will emit on subscribe if there are no open dialogs to begin with.\n       */\n      this.afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n      this._dialog = injector.get(Dialog);\n      this._dialogRefConstructor = MatDialogRef;\n      this._dialogContainerType = MatDialogContainer;\n      this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n      let dialogRef;\n      config = {\n        ...(this._defaultOptions || new MatDialogConfig()),\n        ...config\n      };\n      config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n      config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n      const cdkRef = this._dialog.open(componentOrTemplateRef, {\n        ...config,\n        positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n        // Disable closing since we need to sync it up to the animation ourselves.\n        disableClose: true,\n        // Disable closing on destroy, because this service cleans up its open dialogs as well.\n        // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n        // the dialogs immediately whereas we want it to wait for the animations to finish.\n        closeOnDestroy: false,\n        // Disable closing on detachments so that we can sync up the animation.\n        // The Material dialog ref handles this manually.\n        closeOnOverlayDetachments: false,\n        container: {\n          type: this._dialogContainerType,\n          providers: () => [\n          // Provide our config as the CDK config as well since it has the same interface as the\n          // CDK one, but it contains the actual values passed in by the user for things like\n          // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n          {\n            provide: this.dialogConfigClass,\n            useValue: config\n          }, {\n            provide: DialogConfig,\n            useValue: config\n          }]\n        },\n        templateContext: () => ({\n          dialogRef\n        }),\n        providers: (ref, cdkConfig, dialogContainer) => {\n          dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n          dialogRef.updatePosition(config?.position);\n          return [{\n            provide: this._dialogContainerType,\n            useValue: dialogContainer\n          }, {\n            provide: this._dialogDataToken,\n            useValue: cdkConfig.data\n          }, {\n            provide: this._dialogRefConstructor,\n            useValue: dialogRef\n          }];\n        }\n      });\n      // This can't be assigned in the `providers` callback, because\n      // the instance hasn't been assigned to the CDK ref yet.\n      dialogRef.componentRef = cdkRef.componentRef;\n      dialogRef.componentInstance = cdkRef.componentInstance;\n      this.openDialogs.push(dialogRef);\n      this.afterOpened.next(dialogRef);\n      dialogRef.afterClosed().subscribe(() => {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n          this.openDialogs.splice(index, 1);\n          if (!this.openDialogs.length) {\n            this._getAfterAllClosed().next();\n          }\n        }\n      });\n      return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n      this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n      return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n      // Only close the dialogs at this level on destroy\n      // since the parent service may still be active.\n      this._closeDialogs(this._openDialogsAtThisLevel);\n      this._afterAllClosedAtThisLevel.complete();\n      this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n      let i = dialogs.length;\n      while (i--) {\n        dialogs[i].close();\n      }\n    }\n    static {\n      this.ɵfac = function MatDialog_Factory(t) {\n        return new (t || MatDialog)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2.Location, 8), i0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), i0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), i0.ɵɵinject(MatDialog, 12), i0.ɵɵinject(i1$1.OverlayContainer), i0.ɵɵinject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatDialog,\n        factory: MatDialog.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatDialog;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nlet MatDialogClose = /*#__PURE__*/(() => {\n  class MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n      this.dialogRef = dialogRef;\n      this._elementRef = _elementRef;\n      this._dialog = _dialog;\n      /** Default to \"button\" to prevents accidental form submits. */\n      this.type = 'button';\n    }\n    ngOnInit() {\n      if (!this.dialogRef) {\n        // When this directive is included in a dialog via TemplateRef (rather than being\n        // in a Component), the DialogRef isn't available via injection because embedded\n        // views cannot be given a custom injector. Instead, we look up the DialogRef by\n        // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n        // be resolved at constructor time.\n        this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n      }\n    }\n    ngOnChanges(changes) {\n      const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n      if (proxiedChange) {\n        this.dialogResult = proxiedChange.currentValue;\n      }\n    }\n    _onButtonClick(event) {\n      // Determinate the focus origin using the click event, because using the FocusMonitor will\n      // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n      // dialog, and therefore clicking the button won't result in a focus change. This means that\n      // the FocusMonitor won't detect any origin change, and will always output `program`.\n      _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static {\n      this.ɵfac = function MatDialogClose_Factory(t) {\n        return new (t || MatDialogClose)(i0.ɵɵdirectiveInject(MatDialogRef, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatDialog));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDialogClose,\n        selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]],\n        hostVars: 2,\n        hostBindings: function MatDialogClose_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) {\n              return ctx._onButtonClick($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n          }\n        },\n        inputs: {\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          type: \"type\",\n          dialogResult: [0, \"mat-dialog-close\", \"dialogResult\"],\n          _matDialogClose: [0, \"matDialogClose\", \"_matDialogClose\"]\n        },\n        exportAs: [\"matDialogClose\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatDialogClose;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDialogLayoutSection = /*#__PURE__*/(() => {\n  class MatDialogLayoutSection {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n      this._dialogRef = _dialogRef;\n      this._elementRef = _elementRef;\n      this._dialog = _dialog;\n    }\n    ngOnInit() {\n      if (!this._dialogRef) {\n        this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n      }\n      if (this._dialogRef) {\n        Promise.resolve().then(() => {\n          this._onAdd();\n        });\n      }\n    }\n    ngOnDestroy() {\n      // Note: we null check because there are some internal\n      // tests that are mocking out `MatDialogRef` incorrectly.\n      const instance = this._dialogRef?._containerInstance;\n      if (instance) {\n        Promise.resolve().then(() => {\n          this._onRemove();\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MatDialogLayoutSection_Factory(t) {\n        return new (t || MatDialogLayoutSection)(i0.ɵɵdirectiveInject(MatDialogRef, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatDialog));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDialogLayoutSection,\n        standalone: true\n      });\n    }\n  }\n  return MatDialogLayoutSection;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nlet MatDialogTitle = /*#__PURE__*/(() => {\n  class MatDialogTitle extends MatDialogLayoutSection {\n    constructor() {\n      super(...arguments);\n      this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    _onAdd() {\n      // Note: we null check the queue, because there are some internal\n      // tests that are mocking out `MatDialogRef` incorrectly.\n      this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n      this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDialogTitle_BaseFactory;\n        return function MatDialogTitle_Factory(t) {\n          return (ɵMatDialogTitle_BaseFactory || (ɵMatDialogTitle_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogTitle)))(t || MatDialogTitle);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDialogTitle,\n        selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-dialog-title\", \"mdc-dialog__title\"],\n        hostVars: 1,\n        hostBindings: function MatDialogTitle_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n          }\n        },\n        inputs: {\n          id: \"id\"\n        },\n        exportAs: [\"matDialogTitle\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDialogTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Scrollable content container of a dialog.\n */\nlet MatDialogContent = /*#__PURE__*/(() => {\n  class MatDialogContent {\n    static {\n      this.ɵfac = function MatDialogContent_Factory(t) {\n        return new (t || MatDialogContent)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDialogContent,\n        selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-dialog-content\", \"mdc-dialog__content\"],\n        standalone: true,\n        features: [i0.ɵɵHostDirectivesFeature([i3.CdkScrollable])]\n      });\n    }\n  }\n  return MatDialogContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nlet MatDialogActions = /*#__PURE__*/(() => {\n  class MatDialogActions extends MatDialogLayoutSection {\n    _onAdd() {\n      this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n      this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDialogActions_BaseFactory;\n        return function MatDialogActions_Factory(t) {\n          return (ɵMatDialogActions_BaseFactory || (ɵMatDialogActions_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogActions)))(t || MatDialogActions);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDialogActions,\n        selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-dialog-actions\", \"mdc-dialog__actions\"],\n        hostVars: 6,\n        hostBindings: function MatDialogActions_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-dialog-actions-align-start\", ctx.align === \"start\")(\"mat-mdc-dialog-actions-align-center\", ctx.align === \"center\")(\"mat-mdc-dialog-actions-align-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDialogActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n  let parent = element.nativeElement.parentElement;\n  while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n    parent = parent.parentElement;\n  }\n  return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\nconst DIRECTIVES = [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent];\nlet MatDialogModule = /*#__PURE__*/(() => {\n  class MatDialogModule {\n    static {\n      this.ɵfac = function MatDialogModule_Factory(t) {\n        return new (t || MatDialogModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatDialogModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MatDialog],\n        imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatDialogModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n  params: {\n    enterAnimationDuration: '150ms',\n    exitAnimationDuration: '75ms'\n  }\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n  /** Animation that is applied on the dialog container by default. */\n  dialogContainer: /*#__PURE__*/trigger('dialogContainer', [\n  /*#__PURE__*/\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.7)'\n  })), /*#__PURE__*/state('enter', /*#__PURE__*/style({\n    transform: 'none'\n  })), /*#__PURE__*/transition('* => enter', /*#__PURE__*/group([/*#__PURE__*/animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/style({\n    transform: 'none',\n    opacity: 1\n  })), /*#__PURE__*/query('@*', /*#__PURE__*/animateChild(), {\n    optional: true\n  })]), _defaultParams), /*#__PURE__*/transition('* => void, * => exit', /*#__PURE__*/group([/*#__PURE__*/animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', /*#__PURE__*/style({\n    opacity: 0\n  })), /*#__PURE__*/query('@*', /*#__PURE__*/animateChild(), {\n    optional: true\n  })]), _defaultParams)])\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = /*#__PURE__*/new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    constructor(config) {\n      this.appearance = config?.appearance || 'raised';\n    }\n    static {\n      this.ɵfac = function MatCard_Factory(t) {\n        return new (t || MatCard)(i0.ɵɵdirectiveInject(MAT_CARD_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCard,\n        selectors: [[\"mat-card\"]],\n        hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n        hostVars: 4,\n        hostBindings: function MatCard_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\");\n          }\n        },\n        inputs: {\n          appearance: \"appearance\"\n        },\n        exportAs: [\"matCard\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatCard_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mdc-elevated-card-container-color, var(--mat-app-surface));border-color:var(--mdc-elevated-card-container-color, var(--mat-app-surface));border-radius:var(--mdc-elevated-card-container-shape, var(--mat-app-corner-medium));box-shadow:var(--mdc-elevated-card-container-elevation, var(--mat-app-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mdc-elevated-card-container-shape, var(--mat-app-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mdc-outlined-card-container-color, var(--mat-app-surface));border-radius:var(--mdc-outlined-card-container-shape, var(--mat-app-corner-medium));border-width:var(--mdc-outlined-card-outline-width);border-color:var(--mdc-outlined-card-outline-color, var(--mat-app-outline-variant));box-shadow:var(--mdc-outlined-card-container-elevation, var(--mat-app-level0))}.mat-mdc-card-outlined::after{border:none}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-app-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-app-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-app-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-app-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-app-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-app-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-app-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-app-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-app-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-app-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-app-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCard;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {\n    static {\n      this.ɵfac = function MatCardTitle_Factory(t) {\n        return new (t || MatCardTitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardTitle,\n        selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-title\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {\n    static {\n      this.ɵfac = function MatCardTitleGroup_Factory(t) {\n        return new (t || MatCardTitleGroup)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardTitleGroup,\n        selectors: [[\"mat-card-title-group\"]],\n        hostAttrs: [1, \"mat-mdc-card-title-group\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 4,\n        vars: 0,\n        template: function MatCardTitleGroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardTitleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {\n    static {\n      this.ɵfac = function MatCardContent_Factory(t) {\n        return new (t || MatCardContent)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardContent,\n        selectors: [[\"mat-card-content\"]],\n        hostAttrs: [1, \"mat-mdc-card-content\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {\n    static {\n      this.ɵfac = function MatCardSubtitle_Factory(t) {\n        return new (t || MatCardSubtitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSubtitle,\n        selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-subtitle\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSubtitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    constructor() {\n      // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n      // as to not conflict with the native `align` attribute.\n      /** Position of the actions inside the card. */\n      this.align = 'start';\n    }\n    static {\n      this.ɵfac = function MatCardActions_Factory(t) {\n        return new (t || MatCardActions)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardActions,\n        selectors: [[\"mat-card-actions\"]],\n        hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n        hostVars: 2,\n        hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\"\n        },\n        exportAs: [\"matCardActions\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {\n    static {\n      this.ɵfac = function MatCardHeader_Factory(t) {\n        return new (t || MatCardHeader)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardHeader,\n        selectors: [[\"mat-card-header\"]],\n        hostAttrs: [1, \"mat-mdc-card-header\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-mdc-card-header-text\"]],\n        template: function MatCardHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 0);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {\n    static {\n      this.ɵfac = function MatCardFooter_Factory(t) {\n        return new (t || MatCardFooter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardFooter,\n        selectors: [[\"mat-card-footer\"]],\n        hostAttrs: [1, \"mat-mdc-card-footer\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardFooter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {\n    static {\n      this.ɵfac = function MatCardImage_Factory(t) {\n        return new (t || MatCardImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardImage,\n        selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but small. */\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {\n    static {\n      this.ɵfac = function MatCardSmImage_Factory(t) {\n        return new (t || MatCardSmImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSmImage,\n        selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSmImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but medium. */\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {\n    static {\n      this.ɵfac = function MatCardMdImage_Factory(t) {\n        return new (t || MatCardMdImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardMdImage,\n        selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardMdImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but large. */\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {\n    static {\n      this.ɵfac = function MatCardLgImage_Factory(t) {\n        return new (t || MatCardLgImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardLgImage,\n        selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardLgImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but extra-large. */\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {\n    static {\n      this.ɵfac = function MatCardXlImage_Factory(t) {\n        return new (t || MatCardXlImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardXlImage,\n        selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardXlImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {\n    static {\n      this.ɵfac = function MatCardAvatar_Factory(t) {\n        return new (t || MatCardAvatar)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardAvatar,\n        selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-avatar\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {\n    static {\n      this.ɵfac = function MatCardModule_Factory(t) {\n        return new (t || MatCardModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCardModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatCardModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatSortHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = true);\n    })(\"@arrowPosition.done\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = false);\n    });\n    i0.ɵɵelement(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelement(3, \"div\", 5)(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@arrowOpacity\", ctx_r1._getArrowViewState())(\"@arrowPosition\", ctx_r1._getArrowViewState())(\"@allowChildren\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"@indicator\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@leftPointer\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@rightPointer\", ctx_r1._getArrowDirectionState());\n  }\n}\nfunction getSortDuplicateSortableIdError(id) {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nlet MatSort = /*#__PURE__*/(() => {\n  class MatSort {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n      return this._direction;\n    }\n    set direction(direction) {\n      if (direction && direction !== 'asc' && direction !== 'desc' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getSortInvalidDirectionError(direction);\n      }\n      this._direction = direction;\n    }\n    constructor(_defaultOptions) {\n      this._defaultOptions = _defaultOptions;\n      this._initializedStream = new ReplaySubject(1);\n      /** Collection of all registered sortables that this directive manages. */\n      this.sortables = new Map();\n      /** Used to notify any child components listening to state changes. */\n      this._stateChanges = new Subject();\n      /**\n       * The direction to set when an MatSortable is initially sorted.\n       * May be overridden by the MatSortable's sort start.\n       */\n      this.start = 'asc';\n      this._direction = '';\n      /** Whether the sortable is disabled. */\n      this.disabled = false;\n      /** Event emitted when the user changes either the active sort or sort direction. */\n      this.sortChange = new EventEmitter();\n      /** Emits when the paginator is initialized. */\n      this.initialized = this._initializedStream;\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!sortable.id) {\n          throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n          throw getSortDuplicateSortableIdError(sortable.id);\n        }\n      }\n      this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n      this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n      if (this.active != sortable.id) {\n        this.active = sortable.id;\n        this.direction = sortable.start ? sortable.start : this.start;\n      } else {\n        this.direction = this.getNextSortDirection(sortable);\n      }\n      this.sortChange.emit({\n        active: this.active,\n        direction: this.direction\n      });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n      if (!sortable) {\n        return '';\n      }\n      // Get the sort direction cycle with the potential sortable overrides.\n      const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n      let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n      // Get and return the next direction in the cycle\n      let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n      if (nextDirectionIndex >= sortDirectionCycle.length) {\n        nextDirectionIndex = 0;\n      }\n      return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n      this._initializedStream.next();\n    }\n    ngOnChanges() {\n      this._stateChanges.next();\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n      this._initializedStream.complete();\n    }\n    static {\n      this.ɵfac = function MatSort_Factory(t) {\n        return new (t || MatSort)(i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSort,\n        selectors: [[\"\", \"matSort\", \"\"]],\n        hostAttrs: [1, \"mat-sort\"],\n        inputs: {\n          active: [0, \"matSortActive\", \"active\"],\n          start: [0, \"matSortStart\", \"start\"],\n          direction: [0, \"matSortDirection\", \"direction\"],\n          disableClear: [2, \"matSortDisableClear\", \"disableClear\", booleanAttribute],\n          disabled: [2, \"matSortDisabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          sortChange: \"matSortChange\"\n        },\n        exportAs: [\"matSort\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatSort;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n  let sortOrder = ['asc', 'desc'];\n  if (start == 'desc') {\n    sortOrder.reverse();\n  }\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n  return sortOrder;\n}\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n  /** Animation that moves the sort indicator. */\n  indicator: /*#__PURE__*/trigger('indicator', [/*#__PURE__*/state('active-asc, asc', /*#__PURE__*/style({\n    transform: 'translateY(0px)'\n  })),\n  /*#__PURE__*/\n  // 10px is the height of the sort indicator, minus the width of the pointers\n  state('active-desc, desc', /*#__PURE__*/style({\n    transform: 'translateY(10px)'\n  })), /*#__PURE__*/transition('active-asc <=> active-desc', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: /*#__PURE__*/trigger('leftPointer', [/*#__PURE__*/state('active-asc, asc', /*#__PURE__*/style({\n    transform: 'rotate(-45deg)'\n  })), /*#__PURE__*/state('active-desc, desc', /*#__PURE__*/style({\n    transform: 'rotate(45deg)'\n  })), /*#__PURE__*/transition('active-asc <=> active-desc', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: /*#__PURE__*/trigger('rightPointer', [/*#__PURE__*/state('active-asc, asc', /*#__PURE__*/style({\n    transform: 'rotate(45deg)'\n  })), /*#__PURE__*/state('active-desc, desc', /*#__PURE__*/style({\n    transform: 'rotate(-45deg)'\n  })), /*#__PURE__*/transition('active-asc <=> active-desc', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: /*#__PURE__*/trigger('arrowOpacity', [/*#__PURE__*/state('desc-to-active, asc-to-active, active', /*#__PURE__*/style({\n    opacity: 1\n  })), /*#__PURE__*/state('desc-to-hint, asc-to-hint, hint', /*#__PURE__*/style({\n    opacity: 0.54\n  })), /*#__PURE__*/state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', /*#__PURE__*/style({\n    opacity: 0\n  })),\n  /*#__PURE__*/\n  // Transition between all states except for immediate transitions\n  transition('* => asc, * => desc, * => active, * => hint, * => void', /*#__PURE__*/animate('0ms')), /*#__PURE__*/transition('* <=> *', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION))]),\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: /*#__PURE__*/trigger('arrowPosition', [\n  /*#__PURE__*/\n  // Hidden Above => Hint Center\n  transition('* => desc-to-hint, * => desc-to-active', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION, /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    transform: 'translateY(-25%)'\n  }), /*#__PURE__*/style({\n    transform: 'translateY(0)'\n  })]))),\n  /*#__PURE__*/\n  // Hint Center => Hidden Below\n  transition('* => hint-to-desc, * => active-to-desc', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION, /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    transform: 'translateY(0)'\n  }), /*#__PURE__*/style({\n    transform: 'translateY(25%)'\n  })]))),\n  /*#__PURE__*/\n  // Hidden Below => Hint Center\n  transition('* => asc-to-hint, * => asc-to-active', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION, /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    transform: 'translateY(25%)'\n  }), /*#__PURE__*/style({\n    transform: 'translateY(0)'\n  })]))),\n  /*#__PURE__*/\n  // Hint Center => Hidden Above\n  transition('* => hint-to-asc, * => active-to-asc', /*#__PURE__*/animate(SORT_ANIMATION_TRANSITION, /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    transform: 'translateY(0)'\n  }), /*#__PURE__*/style({\n    transform: 'translateY(-25%)'\n  })]))), /*#__PURE__*/state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', /*#__PURE__*/style({\n    transform: 'translateY(0)'\n  })), /*#__PURE__*/state('hint-to-desc, active-to-desc, desc', /*#__PURE__*/style({\n    transform: 'translateY(-25%)'\n  })), /*#__PURE__*/state('hint-to-asc, active-to-asc, asc', /*#__PURE__*/style({\n    transform: 'translateY(25%)'\n  }))]),\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: /*#__PURE__*/trigger('allowChildren', [/*#__PURE__*/transition('* <=> *', [/*#__PURE__*/query('@*', /*#__PURE__*/animateChild(), {\n    optional: true\n  })])])\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nlet MatSortHeaderIntl = /*#__PURE__*/(() => {\n  class MatSortHeaderIntl {\n    constructor() {\n      /**\n       * Stream that emits whenever the labels here are changed. Use this to notify\n       * components if the labels have changed after initialization.\n       */\n      this.changes = new Subject();\n    }\n    static {\n      this.ɵfac = function MatSortHeaderIntl_Factory(t) {\n        return new (t || MatSortHeaderIntl)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatSortHeaderIntl,\n        factory: MatSortHeaderIntl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatSortHeaderIntl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nlet MatSortHeader = /*#__PURE__*/(() => {\n  class MatSortHeader {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n      return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n      this._updateSortActionDescription(value);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef,\n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._sort = _sort;\n      this._columnDef = _columnDef;\n      this._focusMonitor = _focusMonitor;\n      this._elementRef = _elementRef;\n      this._ariaDescriber = _ariaDescriber;\n      /**\n       * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n       * provide an affordance that the header is sortable by showing on focus and hover.\n       */\n      this._showIndicatorHint = false;\n      /**\n       * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n       * position through the animation. If animations are currently disabled, the fromState is removed\n       * so that there is no animation displayed.\n       */\n      this._viewState = {};\n      /** The direction the arrow should be facing according to the current state. */\n      this._arrowDirection = '';\n      /**\n       * Whether the view state animation should show the transition between the `from` and `to` states.\n       */\n      this._disableViewStateAnimation = false;\n      /** Sets the position of the arrow that displays when sorted. */\n      this.arrowPosition = 'after';\n      /** whether the sort header is disabled. */\n      this.disabled = false;\n      // Default the action description to \"Sort\" because it's better than nothing.\n      // Without a description, the button's label comes from the sort header text content,\n      // which doesn't give any indication that it performs a sorting operation.\n      this._sortActionDescription = 'Sort';\n      // Note that we use a string token for the `_columnDef`, because the value is provided both by\n      // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n      // and we want to avoid having the sort header depending on the CDK table because\n      // of this single reference.\n      if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getSortHeaderNotContainedWithinSortError();\n      }\n      if (defaultOptions?.arrowPosition) {\n        this.arrowPosition = defaultOptions?.arrowPosition;\n      }\n      this._handleStateChanges();\n    }\n    ngOnInit() {\n      if (!this.id && this._columnDef) {\n        this.id = this._columnDef.name;\n      }\n      // Initialize the direction of the arrow and set the view state to be immediately that state.\n      this._updateArrowDirection();\n      this._setAnimationTransitionState({\n        toState: this._isSorted() ? 'active' : this._arrowDirection\n      });\n      this._sort.register(this);\n      this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n      this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n      // We use the focus monitor because we also want to style\n      // things differently based on the focus origin.\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n        const newState = !!origin;\n        if (newState !== this._showIndicatorHint) {\n          this._setIndicatorHintVisible(newState);\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      this._sort.deregister(this);\n      this._rerenderSubscription.unsubscribe();\n      if (this._sortButton) {\n        this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n      }\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n      // No-op if the sort header is disabled - should not make the hint visible.\n      if (this._isDisabled() && visible) {\n        return;\n      }\n      this._showIndicatorHint = visible;\n      if (!this._isSorted()) {\n        this._updateArrowDirection();\n        if (this._showIndicatorHint) {\n          this._setAnimationTransitionState({\n            fromState: this._arrowDirection,\n            toState: 'hint'\n          });\n        } else {\n          this._setAnimationTransitionState({\n            fromState: 'hint',\n            toState: this._arrowDirection\n          });\n        }\n      }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n      this._viewState = viewState || {};\n      // If the animation for arrow position state (opacity/translation) should be disabled,\n      // remove the fromState so that it jumps right to the toState.\n      if (this._disableViewStateAnimation) {\n        this._viewState = {\n          toState: viewState.toState\n        };\n      }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n      this._sort.sort(this);\n      // Do not show the animation if the header was already shown in the right position.\n      if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n        this._disableViewStateAnimation = true;\n      }\n    }\n    _handleClick() {\n      if (!this._isDisabled()) {\n        this._sort.sort(this);\n      }\n    }\n    _handleKeydown(event) {\n      if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n        event.preventDefault();\n        this._toggleOnInteraction();\n      }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n      return this._sort.active == this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n      return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n      const fromState = this._viewState.fromState;\n      return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n      this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n      return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n      if (!this._isSorted()) {\n        return 'none';\n      }\n      return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n      return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n      // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n      // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n      // for every *cell* in the table, creating a lot of unnecessary noise.\n      // If _sortButton is undefined, the component hasn't been initialized yet so there's\n      // nothing to update in the DOM.\n      if (this._sortButton) {\n        // removeDescription will no-op if there is no existing message.\n        // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n        this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n        this._ariaDescriber?.describe(this._sortButton, newDescription);\n      }\n      this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n      this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n        if (this._isSorted()) {\n          this._updateArrowDirection();\n          // Do not show the animation if the header was already shown in the right position.\n          if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n          }\n          this._setAnimationTransitionState({\n            fromState: this._arrowDirection,\n            toState: 'active'\n          });\n          this._showIndicatorHint = false;\n        }\n        // If this header was recently active and now no longer sorted, animate away the arrow.\n        if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n          this._disableViewStateAnimation = false;\n          this._setAnimationTransitionState({\n            fromState: 'active',\n            toState: this._arrowDirection\n          });\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    static {\n      this.ɵfac = function MatSortHeader_Factory(t) {\n        return new (t || MatSortHeader)(i0.ɵɵdirectiveInject(MatSortHeaderIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MatSort, 8), i0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.AriaDescriber, 8), i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSortHeader,\n        selectors: [[\"\", \"mat-sort-header\", \"\"]],\n        hostAttrs: [1, \"mat-sort-header\"],\n        hostVars: 3,\n        hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() {\n              return ctx._handleClick();\n            })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() {\n              return ctx._setIndicatorHintVisible(true);\n            })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() {\n              return ctx._setIndicatorHintVisible(false);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n            i0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n          }\n        },\n        inputs: {\n          id: [0, \"mat-sort-header\", \"id\"],\n          arrowPosition: \"arrowPosition\",\n          start: \"start\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          sortActionDescription: \"sortActionDescription\",\n          disableClear: [2, \"disableClear\", \"disableClear\", booleanAttribute]\n        },\n        exportAs: [\"matSortHeader\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        ngContentSelectors: _c1,\n        decls: 4,\n        vars: 7,\n        consts: [[1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]],\n        template: function MatSortHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, MatSortHeader_Conditional_3_Template, 6, 6, \"div\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition === \"before\");\n            i0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0)(\"role\", ctx._isDisabled() ? null : \"button\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(ctx._renderArrow() ? 3 : -1);\n          }\n        },\n        styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color, var(--mat-app-on-surface));opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSortHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSortModule = /*#__PURE__*/(() => {\n  class MatSortModule {\n    static {\n      this.ɵfac = function MatSortModule_Factory(t) {\n        return new (t || MatSortModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSortModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n        imports: [MatCommonModule]\n      });\n    }\n  }\n  return MatSortModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NgClass, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Self, Attribute, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, _ErrorStateTracker, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._panelDoneAnimatingStream.next($event.toState));\n    })(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass)(\"@transformPanel\", \"showing\");\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nconst matSelectAnimations = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: /*#__PURE__*/trigger('transformPanelWrap', [/*#__PURE__*/transition('* => void', /*#__PURE__*/query('@transformPanel', [/*#__PURE__*/animateChild()], {\n    optional: true\n  }))]),\n  /** This animation transforms the select's overlay panel on and off the page. */\n  transformPanel: /*#__PURE__*/trigger('transformPanel', [/*#__PURE__*/state('void', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), /*#__PURE__*/transition('void => showing', /*#__PURE__*/animate('120ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), /*#__PURE__*/transition('* => void', /*#__PURE__*/animate('100ms linear', /*#__PURE__*/style({\n    opacity: 0\n  })))])\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = /*#__PURE__*/new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = /*#__PURE__*/new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  constructor( /** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nlet MatSelect = /*#__PURE__*/(() => {\n  class MatSelect {\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n      const option = this.options.toArray()[index];\n      if (option) {\n        const panel = this.panel.nativeElement;\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const element = option._getHostElement();\n        if (index === 0 && labelCount === 1) {\n          // If we've got one group label before the option and we're at the top option,\n          // scroll the list to the top. This is better UX than scrolling the list to the\n          // top of the option, because it allows the user to read the top group's label.\n          panel.scrollTop = 0;\n        } else {\n          panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n        }\n      }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n      this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n      return new MatSelectChange(this, value);\n    }\n    /** Whether the select is focused. */\n    get focused() {\n      return this._focused || this._panelOpen;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._syncParentProperties();\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n      return this._placeholder;\n    }\n    set placeholder(value) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n      this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectDynamicMultipleError();\n      }\n      this._multiple = value;\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n      return this._compareWith;\n    }\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonFunctionValueError();\n      }\n      this._compareWith = fn;\n      if (this._selectionModel) {\n        // A different comparator means the selection could change.\n        this._initializeSelection();\n      }\n    }\n    /** Value of the select control. */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      const hasAssigned = this._assignValue(newValue);\n      if (hasAssigned) {\n        this._onChange(newValue);\n      }\n    }\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Unique id of the element. */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n      this.stateChanges.next();\n    }\n    /** Whether the select is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_viewportRuler, _changeDetectorRef,\n    /**\n     * @deprecated Unused param, will be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, defaultErrorStateMatcher, _elementRef, _dir, parentForm, parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n      this._viewportRuler = _viewportRuler;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      this._parentFormField = _parentFormField;\n      this.ngControl = ngControl;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._defaultOptions = _defaultOptions;\n      /**\n       * This position config ensures that the top \"start\" corner of the overlay\n       * is aligned with with the top \"start\" of the origin by default (overlapping\n       * the trigger completely). If the panel cannot fit below the trigger, it\n       * will fall back to a position above the trigger.\n       */\n      this._positions = [{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        panelClass: 'mat-mdc-select-panel-above'\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        panelClass: 'mat-mdc-select-panel-above'\n      }];\n      /** Whether or not the overlay panel is open. */\n      this._panelOpen = false;\n      /** Comparison function to specify which option is displayed. Defaults to object equality. */\n      this._compareWith = (o1, o2) => o1 === o2;\n      /** Unique id for this input. */\n      this._uid = `mat-select-${nextUniqueId++}`;\n      /** Current `aria-labelledby` value for the select trigger. */\n      this._triggerAriaLabelledBy = null;\n      /** Emits whenever the component is destroyed. */\n      this._destroy = new Subject();\n      /**\n       * Emits whenever the component state changes and should cause the parent\n       * form-field to update. Implemented as part of `MatFormFieldControl`.\n       * @docs-private\n       */\n      this.stateChanges = new Subject();\n      /**\n       * Disable the automatic labeling to avoid issues like #27241.\n       * @docs-private\n       */\n      this.disableAutomaticLabeling = true;\n      /** `View -> model callback called when value changes` */\n      this._onChange = () => {};\n      /** `View -> model callback called when select has been touched` */\n      this._onTouched = () => {};\n      /** ID for the DOM node containing the select's value. */\n      this._valueId = `mat-select-value-${nextUniqueId++}`;\n      /** Emits when the panel element is finished transforming in. */\n      this._panelDoneAnimatingStream = new Subject();\n      this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n      this._focused = false;\n      /** A name for this control that can be used by `mat-form-field`. */\n      this.controlType = 'mat-select';\n      /** Whether the select is disabled. */\n      this.disabled = false;\n      /** Whether ripples in the select are disabled. */\n      this.disableRipple = false;\n      /** Tab index of the select. */\n      this.tabIndex = 0;\n      this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      this._multiple = false;\n      /** Whether to center the active option over the trigger. */\n      this.disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n      /** Aria label of the select. */\n      this.ariaLabel = '';\n      /**\n       * Width of the panel. If set to `auto`, the panel will match the trigger width.\n       * If set to null or an empty string, the panel will grow to match the longest option's text.\n       */\n      this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n      this._initialized = new Subject();\n      /** Combined stream of all of the child options' change events. */\n      this.optionSelectionChanges = defer(() => {\n        const options = this.options;\n        if (options) {\n          return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n        }\n        return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n      });\n      /** Event emitted when the select panel has been toggled. */\n      this.openedChange = new EventEmitter();\n      /** Event emitted when the select has been opened. */\n      this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n      /** Event emitted when the select has been closed. */\n      this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n      /** Event emitted when the selected value has been changed by the user. */\n      this.selectionChange = new EventEmitter();\n      /**\n       * Event that emits whenever the raw value of the select changes. This is here primarily\n       * to facilitate the two-way binding for the `value` input.\n       * @docs-private\n       */\n      this.valueChange = new EventEmitter();\n      /**\n       * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n       * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n       * panel. Track the modal we have changed so we can undo the changes on destroy.\n       */\n      this._trackedModal = null;\n      // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n      // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n      // recommendation.\n      //\n      // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n      // makes a few exceptions for compound widgets.\n      //\n      // From [Developing a Keyboard Interface](\n      // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n      //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n      //   Listbox...\"\n      //\n      // The user can focus disabled options using the keyboard, but the user cannot click disabled\n      // options.\n      this._skipPredicate = option => {\n        if (this.panelOpen) {\n          // Support keyboard focusing disabled options in an ARIA listbox.\n          return false;\n        }\n        // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n        // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n        // closed.\n        return option.disabled;\n      };\n      if (this.ngControl) {\n        // Note: we provide the value accessor through here, instead of\n        // the `providers` to avoid running into a circular import.\n        this.ngControl.valueAccessor = this;\n      }\n      // Note that we only want to set this when the defaults pass it in, otherwise it should\n      // stay as `undefined` so that it falls back to the default in the key manager.\n      if (_defaultOptions?.typeaheadDebounceInterval != null) {\n        this.typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._scrollStrategyFactory = scrollStrategyFactory;\n      this._scrollStrategy = this._scrollStrategyFactory();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n    }\n    ngOnInit() {\n      this._selectionModel = new SelectionModel(this.multiple);\n      this.stateChanges.next();\n      // We need `distinctUntilChanged` here, because some browsers will\n      // fire the animation end event twice for the same animation. See:\n      // https://github.com/angular/angular/issues/24084\n      this._panelDoneAnimatingStream.pipe(distinctUntilChanged(), takeUntil(this._destroy)).subscribe(() => this._panelDoneAnimating(this.panelOpen));\n      this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n        if (this.panelOpen) {\n          this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n          this._changeDetectorRef.detectChanges();\n        }\n      });\n    }\n    ngAfterContentInit() {\n      this._initialized.next();\n      this._initialized.complete();\n      this._initKeyManager();\n      this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n        event.added.forEach(option => option.select());\n        event.removed.forEach(option => option.deselect());\n      });\n      this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n        this._resetOptions();\n        this._initializeSelection();\n      });\n    }\n    ngDoCheck() {\n      const newAriaLabelledby = this._getTriggerAriaLabelledby();\n      const ngControl = this.ngControl;\n      // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n      // is computed as a result of a content query which can cause this binding to trigger a\n      // \"changed after checked\" error.\n      if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n        const element = this._elementRef.nativeElement;\n        this._triggerAriaLabelledBy = newAriaLabelledby;\n        if (newAriaLabelledby) {\n          element.setAttribute('aria-labelledby', newAriaLabelledby);\n        } else {\n          element.removeAttribute('aria-labelledby');\n        }\n      }\n      if (ngControl) {\n        // The disabled state might go out of sync if the form group is swapped out. See #17860.\n        if (this._previousControl !== ngControl.control) {\n          if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n            this.disabled = ngControl.disabled;\n          }\n          this._previousControl = ngControl.control;\n        }\n        this.updateErrorState();\n      }\n    }\n    ngOnChanges(changes) {\n      // Updating the disabled state is handled by the input, but we need to additionally let\n      // the parent form field know to run change detection when the disabled state changes.\n      if (changes['disabled'] || changes['userAriaDescribedBy']) {\n        this.stateChanges.next();\n      }\n      if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n        this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._destroy.next();\n      this._destroy.complete();\n      this.stateChanges.complete();\n      this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n      this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n      if (!this._canOpen()) {\n        return;\n      }\n      // It's important that we read this as late as possible, because doing so earlier will\n      // return a different element since it's based on queries in the form field which may\n      // not have run yet. Also this needs to be assigned before we measure the overlay width.\n      if (this._parentFormField) {\n        this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n      }\n      this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n      this._applyModalPanelOwnership();\n      this._panelOpen = true;\n      this._keyManager.withHorizontalOrientation(null);\n      this._highlightCorrectOption();\n      this._changeDetectorRef.markForCheck();\n      // Required for the MDC form field to pick up when the overlay has been opened.\n      this.stateChanges.next();\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `LiveAnnouncer` and any other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      if (!modal) {\n        // Most commonly, the autocomplete trigger is not inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      if (this._trackedModal) {\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      }\n      addAriaReferencedId(modal, 'aria-owns', panelId);\n      this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n      if (!this._trackedModal) {\n        // Most commonly, the autocomplete trigger is not used inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n      if (this._panelOpen) {\n        this._panelOpen = false;\n        this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n        this._changeDetectorRef.markForCheck();\n        this._onTouched();\n        // Required for the MDC form field to pick up when the overlay has been closed.\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n      this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n      return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n      return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n      if (this.empty) {\n        return '';\n      }\n      if (this._multiple) {\n        const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n        if (this._isRtl()) {\n          selectedOptions.reverse();\n        }\n        // TODO(crisbeto): delimiter should be configurable for proper localization.\n        return selectedOptions.join(', ');\n      }\n      return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n      return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n      if (!this.disabled) {\n        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n      }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n      const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n      const manager = this._keyManager;\n      // Open the select on ALT + arrow key to match the native <select>\n      if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (!this.multiple) {\n        const previouslySelectedOption = this.selected;\n        manager.onKeydown(event);\n        const selectedOption = this.selected;\n        // Since the value has changed, we need to announce it ourselves.\n        if (selectedOption && previouslySelectedOption !== selectedOption) {\n          // We set a duration on the live announcement, because we want the live element to be\n          // cleared after a while so that users can't navigate to it using the arrow keys.\n          this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n        }\n      }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n      const manager = this._keyManager;\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n      const isTyping = manager.isTyping();\n      if (isArrowKey && event.altKey) {\n        // Close the select on ALT + arrow key to match the native <select>\n        event.preventDefault();\n        this.close();\n        // Don't do anything in this case if the user is typing,\n        // because the typing sequence can include the space key.\n      } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n        event.preventDefault();\n        manager.activeItem._selectViaInteraction();\n      } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n        event.preventDefault();\n        const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n        this.options.forEach(option => {\n          if (!option.disabled) {\n            hasDeselectedOptions ? option.select() : option.deselect();\n          }\n        });\n      } else {\n        const previouslyFocusedIndex = manager.activeItemIndex;\n        manager.onKeydown(event);\n        if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n          manager.activeItem._selectViaInteraction();\n        }\n      }\n    }\n    _onFocus() {\n      if (!this.disabled) {\n        this._focused = true;\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n      this._focused = false;\n      this._keyManager?.cancelTypeahead();\n      if (!this.disabled && !this.panelOpen) {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n      this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n        this._changeDetectorRef.detectChanges();\n        this._positioningSettled();\n      });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n      return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n      return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        if (this.ngControl) {\n          this._value = this.ngControl.value;\n        }\n        this._setSelectionByValue(this._value);\n        this.stateChanges.next();\n      });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n      this.options.forEach(option => option.setInactiveStyles());\n      this._selectionModel.clear();\n      if (this.multiple && value) {\n        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getMatSelectNonArrayValueError();\n        }\n        value.forEach(currentValue => this._selectOptionByValue(currentValue));\n        this._sortValues();\n      } else {\n        const correspondingOption = this._selectOptionByValue(value);\n        // Shift focus to the active item. Note that we shouldn't do this in multiple\n        // mode, because we don't know what option the user interacted with last.\n        if (correspondingOption) {\n          this._keyManager.updateActiveItem(correspondingOption);\n        } else if (!this.panelOpen) {\n          // Otherwise reset the highlighted option. Note that we only want to do this while\n          // closed, because doing it while open can shift the user's focus unnecessarily.\n          this._keyManager.updateActiveItem(-1);\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n      const correspondingOption = this.options.find(option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        if (this._selectionModel.isSelected(option)) {\n          return false;\n        }\n        try {\n          // Treat null as a special reset value.\n          return option.value != null && this._compareWith(option.value, value);\n        } catch (error) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Notify developers of errors in their comparator.\n            console.warn(error);\n          }\n          return false;\n        }\n      });\n      if (correspondingOption) {\n        this._selectionModel.select(correspondingOption);\n      }\n      return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n      // Always re-assign an array, because it might have been mutated.\n      if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n        if (this.options) {\n          this._setSelectionByValue(newValue);\n        }\n        this._value = newValue;\n        return true;\n      }\n      return false;\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n      if (this.panelWidth === 'auto') {\n        const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n        return refToMeasure.nativeElement.getBoundingClientRect().width;\n      }\n      return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n      if (this.options) {\n        for (const option of this.options) {\n          option._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n      this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n      this._keyManager.tabOut.subscribe(() => {\n        if (this.panelOpen) {\n          // Select the active item when tabbing away. This is consistent with how the native\n          // select behaves. Note that we only want to do this in single selection mode.\n          if (!this.multiple && this._keyManager.activeItem) {\n            this._keyManager.activeItem._selectViaInteraction();\n          }\n          // Restore focus to the trigger before closing. Ensures that the focus\n          // position won't be lost if the user got focus into the overlay.\n          this.focus();\n          this.close();\n        }\n      });\n      this._keyManager.change.subscribe(() => {\n        if (this._panelOpen && this.panel) {\n          this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n        } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n      });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n      const changedOrDestroyed = merge(this.options.changes, this._destroy);\n      this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n        this._onSelect(event.source, event.isUserInput);\n        if (event.isUserInput && !this.multiple && this._panelOpen) {\n          this.close();\n          this.focus();\n        }\n      });\n      // Listen to changes in the internal state of the options and react accordingly.\n      // Handles cases like the labels of the selected options changing.\n      merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n        // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n        // be the result of an expression changing. We have to use `detectChanges` in order\n        // to avoid \"changed after checked\" errors (see #14793).\n        this._changeDetectorRef.detectChanges();\n        this.stateChanges.next();\n      });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n      const wasSelected = this._selectionModel.isSelected(option);\n      if (option.value == null && !this._multiple) {\n        option.deselect();\n        this._selectionModel.clear();\n        if (this.value != null) {\n          this._propagateChanges(option.value);\n        }\n      } else {\n        if (wasSelected !== option.selected) {\n          option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n        }\n        if (isUserInput) {\n          this._keyManager.setActiveItem(option);\n        }\n        if (this.multiple) {\n          this._sortValues();\n          if (isUserInput) {\n            // In case the user selected the option with their mouse, we\n            // want to restore focus back to the trigger, in order to\n            // prevent the select keyboard controls from clashing with\n            // the ones from `mat-option`.\n            this.focus();\n          }\n        }\n      }\n      if (wasSelected !== this._selectionModel.isSelected(option)) {\n        this._propagateChanges();\n      }\n      this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n      if (this.multiple) {\n        const options = this.options.toArray();\n        this._selectionModel.sort((a, b) => {\n          return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n        });\n        this.stateChanges.next();\n      }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n      let valueToEmit;\n      if (this.multiple) {\n        valueToEmit = this.selected.map(option => option.value);\n      } else {\n        valueToEmit = this.selected ? this.selected.value : fallbackValue;\n      }\n      this._value = valueToEmit;\n      this.valueChange.emit(valueToEmit);\n      this._onChange(valueToEmit);\n      this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n      if (this._keyManager) {\n        if (this.empty) {\n          // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n          // because it activates the first option that passes the skip predicate, rather than the\n          // first *enabled* option.\n          let firstEnabledOptionIndex = -1;\n          for (let index = 0; index < this.options.length; index++) {\n            const option = this.options.get(index);\n            if (!option.disabled) {\n              firstEnabledOptionIndex = index;\n              break;\n            }\n          }\n          this._keyManager.setActiveItem(firstEnabledOptionIndex);\n        } else {\n          this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n        }\n      }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n      return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId();\n      const labelExpression = labelId ? labelId + ' ' : '';\n      return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n      if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n        return this._keyManager.activeItem.id;\n      }\n      return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId();\n      let value = (labelId ? labelId + ' ' : '') + this._valueId;\n      if (this.ariaLabelledby) {\n        value += ' ' + this.ariaLabelledby;\n      }\n      return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n      this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      if (ids.length) {\n        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        this._elementRef.nativeElement.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      this.focus();\n      this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      // Since the panel doesn't overlap the trigger, we\n      // want the label to only float when there's a value.\n      return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n    }\n    static {\n      this.ɵfac = function MatSelect_Factory(t) {\n        return new (t || MatSelect)(i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.NgForm, 8), i0.ɵɵdirectiveInject(i4.FormGroupDirective, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), i0.ɵɵdirectiveInject(i4.NgControl, 10), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.LiveAnnouncer), i0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSelect,\n        selectors: [[\"mat-select\"]],\n        contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n          }\n        },\n        viewQuery: function MatSelect_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n            i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n        hostVars: 19,\n        hostBindings: function MatSelect_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n              return ctx._onFocus();\n            })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n            i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n          }\n        },\n        inputs: {\n          userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n          panelClass: \"panelClass\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n          placeholder: \"placeholder\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n          disableOptionCentering: [2, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n          compareWith: \"compareWith\",\n          value: \"value\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          errorStateMatcher: \"errorStateMatcher\",\n          typeaheadDebounceInterval: [2, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n          sortComparator: \"sortComparator\",\n          id: \"id\",\n          panelWidth: \"panelWidth\"\n        },\n        outputs: {\n          openedChange: \"openedChange\",\n          _openedStream: \"opened\",\n          _closedStream: \"closed\",\n          selectionChange: \"selectionChange\",\n          valueChange: \"valueChange\"\n        },\n        exportAs: [\"matSelect\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatSelect\n        }, {\n          provide: MAT_OPTION_PARENT_COMPONENT,\n          useExisting: MatSelect\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c3,\n        decls: 11,\n        vars: 8,\n        consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"attach\", \"detach\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n        template: function MatSelect_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c2);\n            i0.ɵɵelementStart(0, \"div\", 2, 0);\n            i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.open());\n            });\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1, \"span\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(8, \"svg\", 8);\n            i0.ɵɵelement(9, \"path\", 9);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 9, \"ng-template\", 10);\n            i0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.close());\n            })(\"attach\", function MatSelect_Template_ng_template_attach_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onAttached());\n            })(\"detach\", function MatSelect_Template_ng_template_detach_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.close());\n            });\n          }\n          if (rf & 2) {\n            const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵattribute(\"id\", ctx._valueId);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.empty ? 4 : 5);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth);\n          }\n        },\n        dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n        styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-app-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-app-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-app-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-app-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-app-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-app-on-surface-variant))}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matSelectAnimations.transformPanel]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSelect;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nlet MatSelectTrigger = /*#__PURE__*/(() => {\n  class MatSelectTrigger {\n    static {\n      this.ɵfac = function MatSelectTrigger_Factory(t) {\n        return new (t || MatSelectTrigger)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSelectTrigger,\n        selectors: [[\"mat-select-trigger\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SELECT_TRIGGER,\n          useExisting: MatSelectTrigger\n        }])]\n      });\n    }\n  }\n  return MatSelectTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSelectModule = /*#__PURE__*/(() => {\n  class MatSelectModule {\n    static {\n      this.ɵfac = function MatSelectModule_Factory(t) {\n        return new (t || MatSelectModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSelectModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n        imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSelectModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, matSelectAnimations };\n","import { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, afterNextRender, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst _c0 = [\"tooltip\"];\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-tooltip-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n  }\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition({\n    scrollThrottle: SCROLL_THROTTLE_MS\n  });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n  };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-tooltip-default-options', {\n  providedIn: 'root',\n  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nlet MatTooltip = /*#__PURE__*/(() => {\n  class MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      if (value !== this._position) {\n        this._position = value;\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n          this._tooltipInstance?.show(0);\n          this._overlayRef.updatePosition();\n        }\n      }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n      return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n      this._positionAtOrigin = coerceBooleanProperty(value);\n      this._detach();\n      this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      const isDisabled = coerceBooleanProperty(value);\n      if (this._disabled !== isDisabled) {\n        this._disabled = isDisabled;\n        // If tooltip is disabled, hide immediately.\n        if (isDisabled) {\n          this.hide(0);\n        } else {\n          this._setupPointerEnterEventsIfNeeded();\n        }\n        this._syncAriaDescription(this.message);\n      }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n      return this._showDelay;\n    }\n    set showDelay(value) {\n      this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n      return this._hideDelay;\n    }\n    set hideDelay(value) {\n      this._hideDelay = coerceNumberProperty(value);\n      if (this._tooltipInstance) {\n        this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n      }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n      return this._message;\n    }\n    set message(value) {\n      const oldMessage = this._message;\n      // If the message is not a string (e.g. number), convert it to a string and trim it.\n      // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n      // away the string-conversion: https://github.com/angular/components/issues/20684\n      this._message = value != null ? String(value).trim() : '';\n      if (!this._message && this._isTooltipVisible()) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n        this._updateTooltipMessage();\n      }\n      this._syncAriaDescription(oldMessage);\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n      return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n      this._tooltipClass = value;\n      if (this._tooltipInstance) {\n        this._setTooltipClass(this._tooltipClass);\n      }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n      this._overlay = _overlay;\n      this._elementRef = _elementRef;\n      this._scrollDispatcher = _scrollDispatcher;\n      this._viewContainerRef = _viewContainerRef;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._ariaDescriber = _ariaDescriber;\n      this._focusMonitor = _focusMonitor;\n      this._dir = _dir;\n      this._defaultOptions = _defaultOptions;\n      this._position = 'below';\n      this._positionAtOrigin = false;\n      this._disabled = false;\n      this._viewInitialized = false;\n      this._pointerExitEventsInitialized = false;\n      this._tooltipComponent = TooltipComponent;\n      this._viewportMargin = 8;\n      this._cssClassPrefix = 'mat-mdc';\n      /**\n       * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n       * uses a long press gesture to show and hide, however it can conflict with the native browser\n       * gestures. To work around the conflict, Angular Material disables native gestures on the\n       * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n       * elements). The different values for this option configure the touch event handling as follows:\n       * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n       *   browser gestures on particular elements. In particular, it allows text selection on inputs\n       *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n       * - `on` - Enables touch gestures for all elements and disables native\n       *   browser gestures with no exceptions.\n       * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n       *   showing on touch devices.\n       */\n      this.touchGestures = 'auto';\n      this._message = '';\n      /** Manually-bound passive event listeners. */\n      this._passiveListeners = [];\n      /** Timer started at the last `touchstart` event. */\n      this._touchstartTimeout = null;\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      this._injector = inject(Injector);\n      this._scrollStrategy = scrollStrategy;\n      this._document = _document;\n      if (_defaultOptions) {\n        this._showDelay = _defaultOptions.showDelay;\n        this._hideDelay = _defaultOptions.hideDelay;\n        if (_defaultOptions.position) {\n          this.position = _defaultOptions.position;\n        }\n        if (_defaultOptions.positionAtOrigin) {\n          this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n        }\n        if (_defaultOptions.touchGestures) {\n          this.touchGestures = _defaultOptions.touchGestures;\n        }\n        if (_defaultOptions.tooltipClass) {\n          this.tooltipClass = _defaultOptions.tooltipClass;\n        }\n      }\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n        }\n      });\n      this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n      // This needs to happen after view init so the initial values for all inputs have been set.\n      this._viewInitialized = true;\n      this._setupPointerEnterEventsIfNeeded();\n      this._focusMonitor.monitor(this._elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this._ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this._ngZone.run(() => this.show());\n        }\n      });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n      const nativeElement = this._elementRef.nativeElement;\n      // Optimization: Do not call clearTimeout unless there is an active timer.\n      if (this._touchstartTimeout) {\n        clearTimeout(this._touchstartTimeout);\n      }\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._tooltipInstance = null;\n      }\n      // Clean up the event listeners set in the constructor\n      this._passiveListeners.forEach(([event, listener]) => {\n        nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n      });\n      this._passiveListeners.length = 0;\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n      this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n      if (this.disabled || !this.message || this._isTooltipVisible()) {\n        this._tooltipInstance?._cancelPendingAnimations();\n        return;\n      }\n      const overlayRef = this._createOverlay(origin);\n      this._detach();\n      this._portal = this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n      const instance = this._tooltipInstance = overlayRef.attach(this._portal).instance;\n      instance._triggerElement = this._elementRef.nativeElement;\n      instance._mouseLeaveHideDelay = this._hideDelay;\n      instance.afterHidden().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._setTooltipClass(this._tooltipClass);\n      this._updateTooltipMessage();\n      instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n      const instance = this._tooltipInstance;\n      if (instance) {\n        if (instance.isVisible()) {\n          instance.hide(delay);\n        } else {\n          instance._cancelPendingAnimations();\n          this._detach();\n        }\n      }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n      this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n      return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n      if (this._overlayRef) {\n        const existingStrategy = this._overlayRef.getConfig().positionStrategy;\n        if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n          return this._overlayRef;\n        }\n        this._detach();\n      }\n      const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n      // Create connected position strategy that listens for scroll events to reposition.\n      const strategy = this._overlay.position().flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(false).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);\n      strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n        this._updateCurrentPositionClass(change.connectionPair);\n        if (this._tooltipInstance) {\n          if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n            // After position changes occur and the overlay is clipped by\n            // a parent scrollable then close the tooltip.\n            this._ngZone.run(() => this.hide(0));\n          }\n        }\n      });\n      this._overlayRef = this._overlay.create({\n        direction: this._dir,\n        positionStrategy: strategy,\n        panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n        scrollStrategy: this._scrollStrategy()\n      });\n      this._updatePosition(this._overlayRef);\n      this._overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._overlayRef.outsidePointerEvents().pipe(takeUntil(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n      this._overlayRef.keydownEvents().pipe(takeUntil(this._destroyed)).subscribe(event => {\n        if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._ngZone.run(() => this.hide(0));\n        }\n      });\n      if (this._defaultOptions?.disableTooltipInteractivity) {\n        this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n      }\n      return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n      if (this._overlayRef && this._overlayRef.hasAttached()) {\n        this._overlayRef.detach();\n      }\n      this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n      const position = overlayRef.getConfig().positionStrategy;\n      const origin = this._getOrigin();\n      const overlay = this._getOverlayPosition();\n      position.withPositions([this._addOffset({\n        ...origin.main,\n        ...overlay.main\n      }), this._addOffset({\n        ...origin.fallback,\n        ...overlay.fallback\n      })]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n      const offset = UNBOUNDED_ANCHOR_GAP;\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      if (position.originY === 'top') {\n        position.offsetY = -offset;\n      } else if (position.originY === 'bottom') {\n        position.offsetY = offset;\n      } else if (position.originX === 'start') {\n        position.offsetX = isLtr ? -offset : offset;\n      } else if (position.originX === 'end') {\n        position.offsetX = isLtr ? offset : -offset;\n      }\n      return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let originPosition;\n      if (position == 'above' || position == 'below') {\n        originPosition = {\n          originX: 'center',\n          originY: position == 'above' ? 'top' : 'bottom'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        originPosition = {\n          originX: 'start',\n          originY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        originPosition = {\n          originX: 'end',\n          originY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(originPosition.originX, originPosition.originY);\n      return {\n        main: originPosition,\n        fallback: {\n          originX: x,\n          originY: y\n        }\n      };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let overlayPosition;\n      if (position == 'above') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'bottom'\n        };\n      } else if (position == 'below') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'top'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'end',\n          overlayY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'start',\n          overlayY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n      return {\n        main: overlayPosition,\n        fallback: {\n          overlayX: x,\n          overlayY: y\n        }\n      };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n      // Must wait for the message to be painted to the tooltip so that the overlay can properly\n      // calculate the correct positioning based on the size of the text.\n      if (this._tooltipInstance) {\n        this._tooltipInstance.message = this.message;\n        this._tooltipInstance._markForCheck();\n        afterNextRender(() => {\n          if (this._tooltipInstance) {\n            this._overlayRef.updatePosition();\n          }\n        }, {\n          injector: this._injector\n        });\n      }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n      if (this._tooltipInstance) {\n        this._tooltipInstance.tooltipClass = tooltipClass;\n        this._tooltipInstance._markForCheck();\n      }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n      if (this.position === 'above' || this.position === 'below') {\n        if (y === 'top') {\n          y = 'bottom';\n        } else if (y === 'bottom') {\n          y = 'top';\n        }\n      } else {\n        if (x === 'end') {\n          x = 'start';\n        } else if (x === 'start') {\n          x = 'end';\n        }\n      }\n      return {\n        x,\n        y\n      };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n      const {\n        overlayY,\n        originX,\n        originY\n      } = connectionPair;\n      let newPosition;\n      // If the overlay is in the middle along the Y axis,\n      // it means that it's either before or after.\n      if (overlayY === 'center') {\n        // Note that since this information is used for styling, we want to\n        // resolve `start` and `end` to their real values, otherwise consumers\n        // would have to remember to do it themselves on each consumption.\n        if (this._dir && this._dir.value === 'rtl') {\n          newPosition = originX === 'end' ? 'left' : 'right';\n        } else {\n          newPosition = originX === 'start' ? 'left' : 'right';\n        }\n      } else {\n        newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n      }\n      if (newPosition !== this._currentPosition) {\n        const overlayRef = this._overlayRef;\n        if (overlayRef) {\n          const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n          overlayRef.removePanelClass(classPrefix + this._currentPosition);\n          overlayRef.addPanelClass(classPrefix + newPosition);\n        }\n        this._currentPosition = newPosition;\n      }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n      // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n      if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {\n        return;\n      }\n      // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n      // first tap from firing its click event or can cause the tooltip to open for clicks.\n      if (this._platformSupportsMouseEvents()) {\n        this._passiveListeners.push(['mouseenter', event => {\n          this._setupPointerExitEventsIfNeeded();\n          let point = undefined;\n          if (event.x !== undefined && event.y !== undefined) {\n            point = event;\n          }\n          this.show(undefined, point);\n        }]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        this._passiveListeners.push(['touchstart', event => {\n          const touch = event.targetTouches?.[0];\n          const origin = touch ? {\n            x: touch.clientX,\n            y: touch.clientY\n          } : undefined;\n          // Note that it's important that we don't `preventDefault` here,\n          // because it can prevent click events from firing on the element.\n          this._setupPointerExitEventsIfNeeded();\n          if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n          }\n          const DEFAULT_LONGPRESS_DELAY = 500;\n          this._touchstartTimeout = setTimeout(() => {\n            this._touchstartTimeout = null;\n            this.show(undefined, origin);\n          }, this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n        }]);\n      }\n      this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n      if (this._pointerExitEventsInitialized) {\n        return;\n      }\n      this._pointerExitEventsInitialized = true;\n      const exitListeners = [];\n      if (this._platformSupportsMouseEvents()) {\n        exitListeners.push(['mouseleave', event => {\n          const newTarget = event.relatedTarget;\n          if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n            this.hide();\n          }\n        }], ['wheel', event => this._wheelListener(event)]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        const touchendListener = () => {\n          if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n          }\n          this.hide(this._defaultOptions.touchendHideDelay);\n        };\n        exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n      }\n      this._addListeners(exitListeners);\n      this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n      listeners.forEach(([event, listener]) => {\n        this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n      });\n    }\n    _platformSupportsMouseEvents() {\n      return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n      if (this._isTooltipVisible()) {\n        const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n        const element = this._elementRef.nativeElement;\n        // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n        // won't fire if the user scrolls away using the wheel without moving their cursor. We\n        // work around it by finding the element under the user's cursor and closing the tooltip\n        // if it's not the trigger.\n        if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n          this.hide();\n        }\n      }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n      const gestures = this.touchGestures;\n      if (gestures !== 'off') {\n        const element = this._elementRef.nativeElement;\n        const style = element.style;\n        // If gestures are set to `auto`, we don't disable text selection on inputs and\n        // textareas, because it prevents the user from typing into them on iOS Safari.\n        if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {\n          style.userSelect = style.msUserSelect = style.webkitUserSelect = style.MozUserSelect = 'none';\n        }\n        // If we have `auto` gestures and the element uses native HTML dragging,\n        // we don't set `-webkit-user-drag` because it prevents the native behavior.\n        if (gestures === 'on' || !element.draggable) {\n          style.webkitUserDrag = 'none';\n        }\n        style.touchAction = 'none';\n        style.webkitTapHighlightColor = 'transparent';\n      }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n      if (this._ariaDescriptionPending) {\n        return;\n      }\n      this._ariaDescriptionPending = true;\n      this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n      this._ngZone.runOutsideAngular(() => {\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        Promise.resolve().then(() => {\n          this._ariaDescriptionPending = false;\n          if (this.message && !this.disabled) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n          }\n        });\n      });\n    }\n    static {\n      this.ɵfac = function MatTooltip_Factory(t) {\n        return new (t || MatTooltip)(i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.AriaDescriber), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i4.Directionality), i0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTooltip,\n        selectors: [[\"\", \"matTooltip\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-tooltip-trigger\"],\n        hostVars: 2,\n        hostBindings: function MatTooltip_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tooltip-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          position: [0, \"matTooltipPosition\", \"position\"],\n          positionAtOrigin: [0, \"matTooltipPositionAtOrigin\", \"positionAtOrigin\"],\n          disabled: [0, \"matTooltipDisabled\", \"disabled\"],\n          showDelay: [0, \"matTooltipShowDelay\", \"showDelay\"],\n          hideDelay: [0, \"matTooltipHideDelay\", \"hideDelay\"],\n          touchGestures: [0, \"matTooltipTouchGestures\", \"touchGestures\"],\n          message: [0, \"matTooltip\", \"message\"],\n          tooltipClass: [0, \"matTooltipClass\", \"tooltipClass\"]\n        },\n        exportAs: [\"matTooltip\"],\n        standalone: true\n      });\n    }\n  }\n  return MatTooltip;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nlet TooltipComponent = /*#__PURE__*/(() => {\n  class TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      /* Whether the tooltip text overflows to multiple lines */\n      this._isMultiline = false;\n      /** Whether interactions on the page should close the tooltip */\n      this._closeOnInteraction = false;\n      /** Whether the tooltip is currently visible. */\n      this._isVisible = false;\n      /** Subject for notifying that the tooltip has been hidden from the view */\n      this._onHide = new Subject();\n      /** Name of the show animation and the class that toggles it. */\n      this._showAnimation = 'mat-mdc-tooltip-show';\n      /** Name of the hide animation and the class that toggles it. */\n      this._hideAnimation = 'mat-mdc-tooltip-hide';\n      this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n      // Cancel the delayed hide if it is scheduled\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = setTimeout(() => {\n        this._toggleVisibility(true);\n        this._showTimeoutId = undefined;\n      }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n      // Cancel the delayed show if it is scheduled\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      this._hideTimeoutId = setTimeout(() => {\n        this._toggleVisibility(false);\n        this._hideTimeoutId = undefined;\n      }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n      return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n      return this._isVisible;\n    }\n    ngOnDestroy() {\n      this._cancelPendingAnimations();\n      this._onHide.complete();\n      this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n      if (this._closeOnInteraction) {\n        this.hide(0);\n      }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n      this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({\n      relatedTarget\n    }) {\n      if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n        if (this.isVisible()) {\n          this.hide(this._mouseLeaveHideDelay);\n        } else {\n          this._finalizeAnimation(false);\n        }\n      }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n      this._isMultiline = this._isTooltipMultiline();\n      this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n      const rect = this._elementRef.nativeElement.getBoundingClientRect();\n      return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({\n      animationName\n    }) {\n      if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n        this._finalizeAnimation(animationName === this._showAnimation);\n      }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n      if (toVisible) {\n        this._closeOnInteraction = true;\n      } else if (!this.isVisible()) {\n        this._onHide.next();\n      }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n      // We set the classes directly here ourselves so that toggling the tooltip state\n      // isn't bound by change detection. This allows us to hide it even if the\n      // view ref has been detached from the CD tree.\n      const tooltip = this._tooltip.nativeElement;\n      const showClass = this._showAnimation;\n      const hideClass = this._hideAnimation;\n      tooltip.classList.remove(isVisible ? hideClass : showClass);\n      tooltip.classList.add(isVisible ? showClass : hideClass);\n      if (this._isVisible !== isVisible) {\n        this._isVisible = isVisible;\n        this._changeDetectorRef.markForCheck();\n      }\n      // It's common for internal apps to disable animations using `* { animation: none !important }`\n      // which can break the opening sequence. Try to detect such cases and work around them.\n      if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n        const styles = getComputedStyle(tooltip);\n        // Use `getPropertyValue` to avoid issues with property renaming.\n        if (styles.getPropertyValue('animation-duration') === '0s' || styles.getPropertyValue('animation-name') === 'none') {\n          this._animationsDisabled = true;\n        }\n      }\n      if (isVisible) {\n        this._onShow();\n      }\n      if (this._animationsDisabled) {\n        tooltip.classList.add('_mat-animation-noopable');\n        this._finalizeAnimation(isVisible);\n      }\n    }\n    static {\n      this.ɵfac = function TooltipComponent_Factory(t) {\n        return new (t || TooltipComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TooltipComponent,\n        selectors: [[\"mat-tooltip-component\"]],\n        viewQuery: function TooltipComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tooltip = _t.first);\n          }\n        },\n        hostAttrs: [\"aria-hidden\", \"true\"],\n        hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function TooltipComponent_mouseleave_HostBindingHandler($event) {\n              return ctx._handleMouseLeave($event);\n            });\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 4,\n        consts: [[\"tooltip\", \"\"], [1, \"mdc-tooltip\", \"mat-mdc-tooltip\", 3, \"animationend\", \"ngClass\"], [1, \"mat-mdc-tooltip-surface\", \"mdc-tooltip__surface\"]],\n        template: function TooltipComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵlistener(\"animationend\", function TooltipComponent_Template_div_animationend_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleAnimationEnd($event));\n            });\n            i0.ɵɵelementStart(2, \"div\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-tooltip--multiline\", ctx._isMultiline);\n            i0.ɵɵproperty(\"ngClass\", ctx.tooltipClass);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.message);\n          }\n        },\n        dependencies: [NgClass],\n        styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-app-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-app-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-app-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-app-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-app-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-app-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-app-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TooltipComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: /*#__PURE__*/trigger('state', [\n  /*#__PURE__*/\n  // TODO(crisbeto): these values are based on MDC's CSS.\n  // We should be able to use their styles directly once we land #19432.\n  state('initial, void, hidden', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), /*#__PURE__*/state('visible', /*#__PURE__*/style({\n    transform: 'scale(1)'\n  })), /*#__PURE__*/transition('* => visible', /*#__PURE__*/animate('150ms cubic-bezier(0, 0, 0.2, 1)')), /*#__PURE__*/transition('* => hidden', /*#__PURE__*/animate('75ms cubic-bezier(0.4, 0, 1, 1)'))])\n};\nlet MatTooltipModule = /*#__PURE__*/(() => {\n  class MatTooltipModule {\n    static {\n      this.ɵfac = function MatTooltipModule_Factory(t) {\n        return new (t || MatTooltipModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTooltipModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule]\n      });\n    }\n  }\n  return MatTooltipModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 14)(1, \"mat-select\", 16, 0);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(3, MatPaginator_Conditional_2_Conditional_3_For_4_Template, 2, 2, \"mat-option\", 17, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const selectRef_r4 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selectRef_r4.open());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 6, 7, \"mat-form-field\", 14)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.firstPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.lastPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._nextButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nlet MatPaginatorIntl = /*#__PURE__*/(() => {\n  class MatPaginatorIntl {\n    constructor() {\n      /**\n       * Stream to emit from when labels are changed. Use this to notify components when the labels have\n       * changed after initialization.\n       */\n      this.changes = new Subject();\n      /** A label for the page size selector. */\n      this.itemsPerPageLabel = 'Items per page:';\n      /** A label for the button that increments the current page. */\n      this.nextPageLabel = 'Next page';\n      /** A label for the button that decrements the current page. */\n      this.previousPageLabel = 'Previous page';\n      /** A label for the button that moves to the first page. */\n      this.firstPageLabel = 'First page';\n      /** A label for the button that moves to the last page. */\n      this.lastPageLabel = 'Last page';\n      /** A label for the range of items within the current page and the length of the whole list. */\n      this.getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n          return `0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n      };\n    }\n    static {\n      this.ɵfac = function MatPaginatorIntl_Factory(t) {\n        return new (t || MatPaginatorIntl)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatPaginatorIntl,\n        factory: MatPaginatorIntl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatPaginatorIntl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nlet MatPaginator = /*#__PURE__*/(() => {\n  class MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n      return this._pageIndex;\n    }\n    set pageIndex(value) {\n      this._pageIndex = Math.max(value || 0, 0);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n      return this._length;\n    }\n    set length(value) {\n      this._length = value || 0;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n      return this._pageSize;\n    }\n    set pageSize(value) {\n      this._pageSize = Math.max(value || 0, 0);\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n      return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n      this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n      this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      /** ID for the DOM node containing the paginator's items per page label. */\n      this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n      this._isInitialized = false;\n      this._initializedStream = new ReplaySubject(1);\n      this._pageIndex = 0;\n      this._length = 0;\n      this._pageSizeOptions = [];\n      /** Whether to hide the page size selection UI from the user. */\n      this.hidePageSize = false;\n      /** Whether to show the first/last buttons UI to the user. */\n      this.showFirstLastButtons = false;\n      /** Used to configure the underlying `MatSelect` inside the paginator. */\n      this.selectConfig = {};\n      /** Whether the paginator is disabled. */\n      this.disabled = false;\n      /** Event emitted when the paginator changes the page size or page index. */\n      this.page = new EventEmitter();\n      /** Emits when the paginator is initialized. */\n      this.initialized = this._initializedStream;\n      this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n      if (defaults) {\n        const {\n          pageSize,\n          pageSizeOptions,\n          hidePageSize,\n          showFirstLastButtons\n        } = defaults;\n        if (pageSize != null) {\n          this._pageSize = pageSize;\n        }\n        if (pageSizeOptions != null) {\n          this._pageSizeOptions = pageSizeOptions;\n        }\n        if (hidePageSize != null) {\n          this.hidePageSize = hidePageSize;\n        }\n        if (showFirstLastButtons != null) {\n          this.showFirstLastButtons = showFirstLastButtons;\n        }\n      }\n      this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n      this._updateDisplayedPageSizeOptions();\n      this._initializedStream.next();\n    }\n    ngOnDestroy() {\n      this._initializedStream.complete();\n      this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n      if (!this.hasNextPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.pageIndex + 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.pageIndex - 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n      // hasPreviousPage being false implies at the start\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = 0;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n      // hasNextPage being false implies at the end\n      if (!this.hasNextPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.getNumberOfPages() - 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n      return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n      const maxPageIndex = this.getNumberOfPages() - 1;\n      return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n      if (!this.pageSize) {\n        return 0;\n      }\n      return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n      // Current page needs to be updated to reflect the new page size. Navigate to the page\n      // containing the previous page's first item.\n      const startIndex = this.pageIndex * this.pageSize;\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n      this.pageSize = pageSize;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n      return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n      return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n      if (!this._isInitialized) {\n        return;\n      }\n      // If no page size is provided, use the first page size option or the default page size.\n      if (!this.pageSize) {\n        this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n      }\n      this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n      if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n        this._displayedPageSizeOptions.push(this.pageSize);\n      }\n      // Sort the numbers using a number-specific sort function.\n      this._displayedPageSizeOptions.sort((a, b) => a - b);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n      this.page.emit({\n        previousPageIndex,\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        length: this.length\n      });\n    }\n    static {\n      this.ɵfac = function MatPaginator_Factory(t) {\n        return new (t || MatPaginator)(i0.ɵɵdirectiveInject(MatPaginatorIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatPaginator,\n        selectors: [[\"mat-paginator\"]],\n        hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n        inputs: {\n          color: \"color\",\n          pageIndex: [2, \"pageIndex\", \"pageIndex\", numberAttribute],\n          length: [2, \"length\", \"length\", numberAttribute],\n          pageSize: [2, \"pageSize\", \"pageSize\", numberAttribute],\n          pageSizeOptions: \"pageSizeOptions\",\n          hidePageSize: [2, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n          showFirstLastButtons: [2, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n          selectConfig: \"selectConfig\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          page: \"page\"\n        },\n        exportAs: [\"matPaginator\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        decls: 14,\n        vars: 14,\n        consts: [[\"selectRef\", \"\"], [1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [1, \"mat-mdc-paginator-touch-target\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n        template: function MatPaginator_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 3);\n            i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 5, \"button\", 6);\n            i0.ɵɵelementStart(7, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n              return ctx.previousPage();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(8, \"svg\", 8);\n            i0.ɵɵelement(9, \"path\", 9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(10, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n              return ctx.nextPage();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(11, \"svg\", 8);\n            i0.ɵɵelement(12, \"path\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 5, \"button\", 12);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx.hidePageSize ? 2 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.showFirstLastButtons ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n            i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n            i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(ctx.showFirstLastButtons ? 13 : -1);\n          }\n        },\n        dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n        styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatPaginator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatPaginatorModule = /*#__PURE__*/(() => {\n  class MatPaginatorModule {\n    static {\n      this.ɵfac = function MatPaginatorModule_Factory(t) {\n        return new (t || MatPaginatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatPaginatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_PAGINATOR_INTL_PROVIDER],\n        imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n      });\n    }\n  }\n  return MatPaginatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import {Component, OnInit} from '@angular/core';\nimport {Subject, takeUntil, tap} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\nimport {handleApiError} from \"../../../../core/helpers/rxjs.helper\";\nimport {selectToken} from \"../../../../core/store/selectors/auth.selectors\";\n\n@Component({\n  selector: 'app-auth-area',\n  templateUrl: './auth-area.component.html',\n  styleUrl: './auth-area.component.scss'\n})\nexport class AuthAreaComponent implements OnInit{\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n\n  constructor(\n    private readonly store: Store,\n    private readonly snackBar: MatSnackBar,\n    private readonly router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.store.select(selectToken)\n      .pipe(\n        takeUntil(this.ngUnsubscribe),\n        tap(token => {\n          if (token) {\n            this.router.navigate(['/home']);\n          }\n        }),\n        handleApiError(this.snackBar)\n        ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<router-outlet></router-outlet>\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/bidi';\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = \".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-app-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-app-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-app-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-app-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\";\nclass TileCoordinator {\n  constructor() {\n    /** Index at which the search for the next gap will start. */\n    this.columnIndex = 0;\n    /** The current row index. */\n    this.rowIndex = 0;\n  }\n  /** Gets the total number of rows occupied by tiles */\n  get rowCount() {\n    return this.rowIndex + 1;\n  }\n  /**\n   * Gets the total span of rows occupied by tiles.\n   * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n   */\n  get rowspan() {\n    const lastRowMax = Math.max(...this.tracker);\n    // if any of the tiles has a rowspan that pushes it beyond the total row count,\n    // add the difference to the rowcount\n    return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n  }\n  /**\n   * Updates the tile positions.\n   * @param numColumns Amount of columns in the grid.\n   * @param tiles Tiles to be positioned.\n   */\n  update(numColumns, tiles) {\n    this.columnIndex = 0;\n    this.rowIndex = 0;\n    this.tracker = new Array(numColumns);\n    this.tracker.fill(0, 0, this.tracker.length);\n    this.positions = tiles.map(tile => this._trackTile(tile));\n  }\n  /** Calculates the row and col position of a tile. */\n  _trackTile(tile) {\n    // Find a gap large enough for this tile.\n    const gapStartIndex = this._findMatchingGap(tile.colspan);\n    // Place tile in the resulting gap.\n    this._markTilePosition(gapStartIndex, tile);\n    // The next time we look for a gap, the search will start at columnIndex, which should be\n    // immediately after the tile that has just been placed.\n    this.columnIndex = gapStartIndex + tile.colspan;\n    return new TilePosition(this.rowIndex, gapStartIndex);\n  }\n  /** Finds the next available space large enough to fit the tile. */\n  _findMatchingGap(tileCols) {\n    if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` + `grid with cols=\"${this.tracker.length}\".`);\n    }\n    // Start index is inclusive, end index is exclusive.\n    let gapStartIndex = -1;\n    let gapEndIndex = -1;\n    // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n    do {\n      // If we've reached the end of the row, go to the next row.\n      if (this.columnIndex + tileCols > this.tracker.length) {\n        this._nextRow();\n        gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n        gapEndIndex = this._findGapEndIndex(gapStartIndex);\n        continue;\n      }\n      gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n      // If there are no more empty spaces in this row at all, move on to the next row.\n      if (gapStartIndex == -1) {\n        this._nextRow();\n        gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n        gapEndIndex = this._findGapEndIndex(gapStartIndex);\n        continue;\n      }\n      gapEndIndex = this._findGapEndIndex(gapStartIndex);\n      // If a gap large enough isn't found, we want to start looking immediately after the current\n      // gap on the next iteration.\n      this.columnIndex = gapStartIndex + 1;\n      // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n      // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n    } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n    // If we still didn't manage to find a gap, ensure that the index is\n    // at least zero so the tile doesn't get pulled out of the grid.\n    return Math.max(gapStartIndex, 0);\n  }\n  /** Move \"down\" to the next row. */\n  _nextRow() {\n    this.columnIndex = 0;\n    this.rowIndex++;\n    // Decrement all spaces by one to reflect moving down one row.\n    for (let i = 0; i < this.tracker.length; i++) {\n      this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n    }\n  }\n  /**\n   * Finds the end index (exclusive) of a gap given the index from which to start looking.\n   * The gap ends when a non-zero value is found.\n   */\n  _findGapEndIndex(gapStartIndex) {\n    for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n      if (this.tracker[i] != 0) {\n        return i;\n      }\n    }\n    // The gap ends with the end of the row.\n    return this.tracker.length;\n  }\n  /** Update the tile tracker to account for the given tile in the given space. */\n  _markTilePosition(start, tile) {\n    for (let i = 0; i < tile.colspan; i++) {\n      this.tracker[start + i] = tile.rowspan;\n    }\n  }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n  }\n}\n\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = /*#__PURE__*/new InjectionToken('MAT_GRID_LIST');\nlet MatGridTile = /*#__PURE__*/(() => {\n  class MatGridTile {\n    constructor(_element, _gridList) {\n      this._element = _element;\n      this._gridList = _gridList;\n      this._rowspan = 1;\n      this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() {\n      return this._rowspan;\n    }\n    set rowspan(value) {\n      this._rowspan = Math.round(coerceNumberProperty(value));\n    }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() {\n      return this._colspan;\n    }\n    set colspan(value) {\n      this._colspan = Math.round(coerceNumberProperty(value));\n    }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n      this._element.nativeElement.style[property] = value;\n    }\n    static {\n      this.ɵfac = function MatGridTile_Factory(t) {\n        return new (t || MatGridTile)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_GRID_LIST, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatGridTile,\n        selectors: [[\"mat-grid-tile\"]],\n        hostAttrs: [1, \"mat-grid-tile\"],\n        hostVars: 2,\n        hostBindings: function MatGridTile_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n          }\n        },\n        inputs: {\n          rowspan: \"rowspan\",\n          colspan: \"colspan\"\n        },\n        exportAs: [\"matGridTile\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 2,\n        vars: 0,\n        consts: [[1, \"mat-grid-tile-content\"]],\n        template: function MatGridTile_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-app-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-app-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-app-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-app-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatGridTile;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatGridTileText = /*#__PURE__*/(() => {\n  class MatGridTileText {\n    constructor(_element) {\n      this._element = _element;\n    }\n    ngAfterContentInit() {\n      setLines(this._lines, this._element);\n    }\n    static {\n      this.ɵfac = function MatGridTileText_Factory(t) {\n        return new (t || MatGridTileText)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatGridTileText,\n        selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]],\n        contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-grid-list-text\"]],\n        template: function MatGridTileText_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 0);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatGridTileText;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridAvatarCssMatStyler = /*#__PURE__*/(() => {\n  class MatGridAvatarCssMatStyler {\n    static {\n      this.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) {\n        return new (t || MatGridAvatarCssMatStyler)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatGridAvatarCssMatStyler,\n        selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-grid-avatar\"],\n        standalone: true\n      });\n    }\n  }\n  return MatGridAvatarCssMatStyler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileHeaderCssMatStyler = /*#__PURE__*/(() => {\n  class MatGridTileHeaderCssMatStyler {\n    static {\n      this.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) {\n        return new (t || MatGridTileHeaderCssMatStyler)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatGridTileHeaderCssMatStyler,\n        selectors: [[\"mat-grid-tile-header\"]],\n        hostAttrs: [1, \"mat-grid-tile-header\"],\n        standalone: true\n      });\n    }\n  }\n  return MatGridTileHeaderCssMatStyler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileFooterCssMatStyler = /*#__PURE__*/(() => {\n  class MatGridTileFooterCssMatStyler {\n    static {\n      this.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) {\n        return new (t || MatGridTileFooterCssMatStyler)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatGridTileFooterCssMatStyler,\n        selectors: [[\"mat-grid-tile-footer\"]],\n        hostAttrs: [1, \"mat-grid-tile-footer\"],\n        standalone: true\n      });\n    }\n  }\n  return MatGridTileFooterCssMatStyler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n  constructor() {\n    this._rows = 0;\n    this._rowspan = 0;\n  }\n  /**\n   * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n   * because these properties haven't been calculated by that point.\n   *\n   * @param gutterSize Size of the grid's gutter.\n   * @param tracker Instance of the TileCoordinator.\n   * @param cols Amount of columns in the grid.\n   * @param direction Layout direction of the grid.\n   */\n  init(gutterSize, tracker, cols, direction) {\n    this._gutterSize = normalizeUnits(gutterSize);\n    this._rows = tracker.rowCount;\n    this._rowspan = tracker.rowspan;\n    this._cols = cols;\n    this._direction = direction;\n  }\n  /**\n   * Computes the amount of space a single 1x1 tile would take up (width or height).\n   * Used as a basis for other calculations.\n   * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n   * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n   * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n   */\n  getBaseTileSize(sizePercent, gutterFraction) {\n    // Take the base size percent (as would be if evenly dividing the size between cells),\n    // and then subtracting the size of one gutter. However, since there are no gutters on the\n    // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n    // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n    // edge evenly among the cells).\n    return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n  }\n  /**\n   * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n   * @param offset Number of tiles that have already been rendered in the row/column.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @return Position of the tile as a CSS calc() expression.\n   */\n  getTilePosition(baseSize, offset) {\n    // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n    // row/column (offset).\n    return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n  }\n  /**\n   * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @param span The tile's rowspan or colspan.\n   * @return Size of the tile as a CSS calc() expression.\n   */\n  getTileSize(baseSize, span) {\n    return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n  }\n  /**\n   * Sets the style properties to be applied to a tile for the given row and column index.\n   * @param tile Tile to which to apply the styling.\n   * @param rowIndex Index of the tile's row.\n   * @param colIndex Index of the tile's column.\n   */\n  setStyle(tile, rowIndex, colIndex) {\n    // Percent of the available horizontal space that one column takes up.\n    let percentWidthPerTile = 100 / this._cols;\n    // Fraction of the vertical gutter size that each column takes up.\n    // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n    let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n    this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n  }\n  /** Sets the horizontal placement of the tile in the list. */\n  setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n    // Base horizontal size of a column.\n    let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n    // The width and horizontal position of each tile is always calculated the same way, but the\n    // height and vertical position depends on the rowMode.\n    let side = this._direction === 'rtl' ? 'right' : 'left';\n    tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n    tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n  }\n  /**\n   * Calculates the total size taken up by gutters across one axis of a list.\n   */\n  getGutterSpan() {\n    return `${this._gutterSize} * (${this._rowspan} - 1)`;\n  }\n  /**\n   * Calculates the total size taken up by tiles across one axis of a list.\n   * @param tileHeight Height of the tile.\n   */\n  getTileSpan(tileHeight) {\n    return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n  }\n  /**\n   * Calculates the computed height and returns the correct style property to set.\n   * This method can be implemented by each type of TileStyler.\n   * @docs-private\n   */\n  getComputedHeight() {\n    return null;\n  }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n  constructor(fixedRowHeight) {\n    super();\n    this.fixedRowHeight = fixedRowHeight;\n  }\n  init(gutterSize, tracker, cols, direction) {\n    super.init(gutterSize, tracker, cols, direction);\n    this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    if (!cssCalcAllowedValue.test(this.fixedRowHeight) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n    }\n  }\n  setRowStyles(tile, rowIndex) {\n    tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n  }\n  getComputedHeight() {\n    return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n  }\n  reset(list) {\n    list._setListStyle(['height', null]);\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n  constructor(value) {\n    super();\n    this._parseRatio(value);\n  }\n  setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n    let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n    this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n    // Use padding-top and margin-top to maintain the given aspect ratio, as\n    // a percentage-based value for these properties is applied versus the *width* of the\n    // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n    tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n    tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n  }\n  getComputedHeight() {\n    return ['paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)];\n  }\n  reset(list) {\n    list._setListStyle(['paddingBottom', null]);\n    list._tiles.forEach(tile => {\n      tile._setStyle('marginTop', null);\n      tile._setStyle('paddingTop', null);\n    });\n  }\n  _parseRatio(value) {\n    const ratioParts = value.split(':');\n    if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n    }\n    this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n  }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n  setRowStyles(tile, rowIndex) {\n    // Percent of the available vertical space that one row takes up.\n    let percentHeightPerTile = 100 / this._rowspan;\n    // Fraction of the horizontal gutter size that each column takes up.\n    let gutterHeightPerTile = (this._rows - 1) / this._rows;\n    // Base vertical size of a column.\n    let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n    tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n  }\n  reset(list) {\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n  return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n  return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nlet MatGridList = /*#__PURE__*/(() => {\n  class MatGridList {\n    constructor(_element, _dir) {\n      this._element = _element;\n      this._dir = _dir;\n      /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n      this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() {\n      return this._cols;\n    }\n    set cols(value) {\n      this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() {\n      return this._gutter;\n    }\n    set gutterSize(value) {\n      this._gutter = `${value == null ? '' : value}`;\n    }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() {\n      return this._rowHeight;\n    }\n    set rowHeight(value) {\n      const newValue = `${value == null ? '' : value}`;\n      if (newValue !== this._rowHeight) {\n        this._rowHeight = newValue;\n        this._setTileStyler(this._rowHeight);\n      }\n    }\n    ngOnInit() {\n      this._checkCols();\n      this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n      this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n      if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n      }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n      if (!this._rowHeight) {\n        this._setTileStyler('1:1');\n      }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n      if (this._tileStyler) {\n        this._tileStyler.reset(this);\n      }\n      if (rowHeight === MAT_FIT_MODE) {\n        this._tileStyler = new FitTileStyler();\n      } else if (rowHeight && rowHeight.indexOf(':') > -1) {\n        this._tileStyler = new RatioTileStyler(rowHeight);\n      } else {\n        this._tileStyler = new FixedTileStyler(rowHeight);\n      }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n      if (!this._tileCoordinator) {\n        this._tileCoordinator = new TileCoordinator();\n      }\n      const tracker = this._tileCoordinator;\n      const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n      const direction = this._dir ? this._dir.value : 'ltr';\n      this._tileCoordinator.update(this.cols, tiles);\n      this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n      tiles.forEach((tile, index) => {\n        const pos = tracker.positions[index];\n        this._tileStyler.setStyle(tile, pos.row, pos.col);\n      });\n      this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n      if (style) {\n        this._element.nativeElement.style[style[0]] = style[1];\n      }\n    }\n    static {\n      this.ɵfac = function MatGridList_Factory(t) {\n        return new (t || MatGridList)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatGridList,\n        selectors: [[\"mat-grid-list\"]],\n        contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatGridTile, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tiles = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-grid-list\"],\n        hostVars: 1,\n        hostBindings: function MatGridList_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"cols\", ctx.cols);\n          }\n        },\n        inputs: {\n          cols: \"cols\",\n          gutterSize: \"gutterSize\",\n          rowHeight: \"rowHeight\"\n        },\n        exportAs: [\"matGridList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_GRID_LIST,\n          useExisting: MatGridList\n        }]), i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 2,\n        vars: 0,\n        template: function MatGridList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [_c3],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatGridList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatGridListModule = /*#__PURE__*/(() => {\n  class MatGridListModule {\n    static {\n      this.ɵfac = function MatGridListModule_Factory(t) {\n        return new (t || MatGridListModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatGridListModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatLineModule, MatCommonModule, MatLineModule, MatCommonModule]\n      });\n    }\n  }\n  return MatGridListModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator };\n","import * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, EventEmitter, booleanAttribute, Directive, Output, ContentChildren, Input, inject, NgZone, Injector, numberAttribute, afterNextRender, ANIMATION_MODULE_TYPE, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\n\n// Increasing integer for generating unique ids for radio components.\nconst _c0 = [\"input\"];\nconst _c1 = [\"formField\"];\nconst _c2 = [\"*\"];\nlet nextUniqueId = 0;\n/** Change event object emitted by radio button and radio group. */\nclass MatRadioChange {\n  constructor( /** The radio button that emits the change event. */\n  source, /** The value of the radio button. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatRadioGroup),\n  multi: true\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = /*#__PURE__*/new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-radio-default-options', {\n  providedIn: 'root',\n  factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    disabledInteractive: false\n  };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nlet MatRadioGroup = /*#__PURE__*/(() => {\n  class MatRadioGroup {\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n      return this._name;\n    }\n    set name(value) {\n      this._name = value;\n      this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n      return this._labelPosition;\n    }\n    set labelPosition(v) {\n      this._labelPosition = v === 'before' ? 'before' : 'after';\n      this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      if (this._value !== newValue) {\n        // Set this before proceeding to ensure no circular loop occurs with selection.\n        this._value = newValue;\n        this._updateSelectedRadioFromValue();\n        this._checkSelectedRadioButton();\n      }\n    }\n    _checkSelectedRadioButton() {\n      if (this._selected && !this._selected.checked) {\n        this._selected.checked = true;\n      }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n      return this._selected;\n    }\n    set selected(selected) {\n      this._selected = selected;\n      this.value = selected ? selected.value : null;\n      this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n      return this._required;\n    }\n    set required(value) {\n      this._required = value;\n      this._markRadiosForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n      this._markRadiosForCheck();\n    }\n    constructor(_changeDetector) {\n      this._changeDetector = _changeDetector;\n      /** Selected value for the radio group. */\n      this._value = null;\n      /** The HTML name attribute applied to radio buttons in this group. */\n      this._name = `mat-radio-group-${nextUniqueId++}`;\n      /** The currently selected radio button. Should match value. */\n      this._selected = null;\n      /** Whether the `value` has been set to its initial value. */\n      this._isInitialized = false;\n      /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n      this._labelPosition = 'after';\n      /** Whether the radio group is disabled. */\n      this._disabled = false;\n      /** Whether the radio group is required. */\n      this._required = false;\n      /** The method to be called in order to update ngModel */\n      this._controlValueAccessorChangeFn = () => {};\n      /**\n       * onTouch function registered via registerOnTouch (ControlValueAccessor).\n       * @docs-private\n       */\n      this.onTouched = () => {};\n      /**\n       * Event emitted when the group value changes.\n       * Change events are only emitted when the value changes due to user interaction with\n       * a radio button (the same behavior as `<input type-\"radio\">`).\n       */\n      this.change = new EventEmitter();\n      this._disabledInteractive = false;\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n      // Mark this component as initialized in AfterContentInit because the initial value can\n      // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n      // NgModel occurs *after* the OnInit of the MatRadioGroup.\n      this._isInitialized = true;\n      // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n      // buttons depends on it. Note that we don't clear the `value`, because the radio button\n      // may be swapped out with a similar one and there are some internal apps that depend on\n      // that behavior.\n      this._buttonChanges = this._radios.changes.subscribe(() => {\n        if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n          this._selected = null;\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._buttonChanges?.unsubscribe();\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n      if (this.onTouched) {\n        this.onTouched();\n      }\n    }\n    _updateRadioButtonNames() {\n      if (this._radios) {\n        this._radios.forEach(radio => {\n          radio.name = this.name;\n          radio._markForCheck();\n        });\n      }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n      // If the value already matches the selected radio, do nothing.\n      const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n      if (this._radios && !isAlreadySelected) {\n        this._selected = null;\n        this._radios.forEach(radio => {\n          radio.checked = this.value === radio.value;\n          if (radio.checked) {\n            this._selected = radio;\n          }\n        });\n      }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n      if (this._isInitialized) {\n        this.change.emit(new MatRadioChange(this._selected, this._value));\n      }\n    }\n    _markRadiosForCheck() {\n      if (this._radios) {\n        this._radios.forEach(radio => radio._markForCheck());\n      }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n      this.value = value;\n      this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetector.markForCheck();\n    }\n    static {\n      this.ɵfac = function MatRadioGroup_Factory(t) {\n        return new (t || MatRadioGroup)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRadioGroup,\n        selectors: [[\"mat-radio-group\"]],\n        contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._radios = _t);\n          }\n        },\n        hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-mdc-radio-group\"],\n        inputs: {\n          color: \"color\",\n          name: \"name\",\n          labelPosition: \"labelPosition\",\n          value: \"value\",\n          selected: \"selected\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          required: [2, \"required\", \"required\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\"\n        },\n        exportAs: [\"matRadioGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n          provide: MAT_RADIO_GROUP,\n          useExisting: MatRadioGroup\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatRadioGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRadioButton = /*#__PURE__*/(() => {\n  class MatRadioButton {\n    /** Whether this radio button is checked. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      if (this._checked !== value) {\n        this._checked = value;\n        if (value && this.radioGroup && this.radioGroup.value !== this.value) {\n          this.radioGroup.selected = this;\n        } else if (!value && this.radioGroup && this.radioGroup.value === this.value) {\n          // When unchecking the selected radio button, update the selected radio\n          // property on the group.\n          this.radioGroup.selected = null;\n        }\n        if (value) {\n          // Notify all radio buttons with the same name to un-check.\n          this._radioDispatcher.notify(this.id, this.name);\n        }\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** The value of this radio button. */\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      if (this._value !== value) {\n        this._value = value;\n        if (this.radioGroup !== null) {\n          if (!this.checked) {\n            // Update checked when the value changed to match the radio group's value\n            this.checked = this.radioGroup.value === value;\n          }\n          if (this.checked) {\n            this.radioGroup.selected = this;\n          }\n        }\n      }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n      return this._labelPosition || this.radioGroup && this.radioGroup.labelPosition || 'after';\n    }\n    set labelPosition(value) {\n      this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n      return this._disabled || this.radioGroup !== null && this.radioGroup.disabled;\n    }\n    set disabled(value) {\n      this._setDisabled(value);\n    }\n    /** Whether the radio button is required. */\n    get required() {\n      return this._required || this.radioGroup && this.radioGroup.required;\n    }\n    set required(value) {\n      this._required = value;\n    }\n    /**\n     * Theme color of the radio button. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      // As per M2 design specifications the selection control radio should use the accent color\n      // palette by default. https://m2.material.io/components/radio-buttons#specs\n      return this._color || this.radioGroup && this.radioGroup.color || this._defaultOptions && this._defaultOptions.color || 'accent';\n    }\n    set color(newValue) {\n      this._color = newValue;\n    }\n    /** Whether the radio button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive || this.radioGroup !== null && this.radioGroup.disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(radioGroup, _elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _defaultOptions, tabIndex) {\n      this._elementRef = _elementRef;\n      this._changeDetector = _changeDetector;\n      this._focusMonitor = _focusMonitor;\n      this._radioDispatcher = _radioDispatcher;\n      this._defaultOptions = _defaultOptions;\n      this._ngZone = inject(NgZone);\n      this._uniqueId = `mat-radio-${++nextUniqueId}`;\n      /** The unique ID for the radio button. */\n      this.id = this._uniqueId;\n      /** Whether ripples are disabled inside the radio button */\n      this.disableRipple = false;\n      /** Tabindex of the radio button. */\n      this.tabIndex = 0;\n      /**\n       * Event emitted when the checked state of this radio button changes.\n       * Change events are only emitted when the value changes due to user interaction with\n       * the radio button (the same behavior as `<input type-\"radio\">`).\n       */\n      this.change = new EventEmitter();\n      /** Whether this radio is checked. */\n      this._checked = false;\n      /** Value assigned to this radio. */\n      this._value = null;\n      /** Unregister function for _radioDispatcher */\n      this._removeUniqueSelectionListener = () => {};\n      this._injector = inject(Injector);\n      /** Called when the input is clicked. */\n      this._onInputClick = event => {\n        // If the input is disabled while interactive, we need to prevent the\n        // selection from happening in this event handler. Note that even though\n        // this happens on `click` events, the logic applies when the user is\n        // navigating with the keyboard as well. An alternative way of doing\n        // this is by resetting the `checked` state in the `change` callback but\n        // it isn't optimal, because it can allow a pre-checked disabled button\n        // to be un-checked. This approach seems to cover everything.\n        if (this.disabled && this.disabledInteractive) {\n          event.preventDefault();\n        }\n      };\n      // Assertions. Ideally these should be stripped out by the compiler.\n      // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n      this.radioGroup = radioGroup;\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this._disabledInteractive = _defaultOptions?.disabledInteractive ?? false;\n      if (tabIndex) {\n        this.tabIndex = numberAttribute(tabIndex, 0);\n      }\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n      if (origin) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n      } else {\n        this._inputElement.nativeElement.focus(options);\n      }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n      // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n      // update radio button's status\n      this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n      if (this.radioGroup) {\n        // If the radio is inside a radio group, determine if it should be checked\n        this.checked = this.radioGroup.value === this._value;\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n        // Copy name from parent radio group\n        this.name = this.radioGroup.name;\n      }\n      this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n        if (id !== this.id && name === this.name) {\n          this.checked = false;\n        }\n      });\n    }\n    ngDoCheck() {\n      this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n      this._updateTabIndex();\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (!focusOrigin && this.radioGroup) {\n          this.radioGroup._touch();\n        }\n      });\n      // We bind this outside of the zone, because:\n      // 1. Its logic is completely DOM-related so we can avoid some change detections.\n      // 2. There appear to be some internal tests that break when this triggers a change detection.\n      this._ngZone.runOutsideAngular(() => {\n        this._inputElement.nativeElement.addEventListener('click', this._onInputClick);\n      });\n    }\n    ngOnDestroy() {\n      // We need to null check in case the button was destroyed before `ngAfterViewInit`.\n      this._inputElement?.nativeElement.removeEventListener('click', this._onInputClick);\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n      this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n      return this.disableRipple || this.disabled;\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n      // We always have to stop propagation on the change event.\n      // Otherwise the change event, from the input element, will bubble up and\n      // emit its event object to the `change` output.\n      event.stopPropagation();\n      if (!this.checked && !this.disabled) {\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n          this.radioGroup._controlValueAccessorChangeFn(this.value);\n          if (groupValueChanged) {\n            this.radioGroup._emitChangeEvent();\n          }\n        }\n      }\n    }\n    /** Triggered when the user clicks on the touch target. */\n    _onTouchTargetClick(event) {\n      this._onInputInteraction(event);\n      if (!this.disabled || this.disabledInteractive) {\n        // Normally the input should be focused already, but if the click\n        // comes from the touch target, then we might have to focus it ourselves.\n        this._inputElement?.nativeElement.focus();\n      }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n      if (this._disabled !== value) {\n        this._disabled = value;\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n      const group = this.radioGroup;\n      let value;\n      // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n      // necessary, because the browser handles the tab order for inputs inside a group automatically,\n      // but we need an explicitly higher tabindex for the selected button in order for things like\n      // the focus trap to pick it up correctly.\n      if (!group || !group.selected || this.disabled) {\n        value = this.tabIndex;\n      } else {\n        value = group.selected === this ? this.tabIndex : -1;\n      }\n      if (value !== this._previousTabIndex) {\n        // We have to set the tabindex directly on the DOM node, because it depends on\n        // the selected state which is prone to \"changed after checked errors\".\n        const input = this._inputElement?.nativeElement;\n        if (input) {\n          input.setAttribute('tabindex', value + '');\n          this._previousTabIndex = value;\n          // Wait for any pending tabindex changes to be applied\n          afterNextRender(() => {\n            queueMicrotask(() => {\n              // The radio group uses a \"selection follows focus\" pattern for tab management, so if this\n              // radio button is currently focused and another radio button in the group becomes\n              // selected, we should move focus to the newly selected radio button to maintain\n              // consistency between the focused and selected states.\n              if (group && group.selected && group.selected !== this && document.activeElement === input) {\n                group.selected?._inputElement.nativeElement.focus();\n                // If this radio button still has focus, the selected one must be disabled. In this\n                // case the radio group as a whole should lose focus.\n                if (document.activeElement === input) {\n                  this._inputElement.nativeElement.blur();\n                }\n              }\n            });\n          }, {\n            injector: this._injector\n          });\n        }\n      }\n    }\n    static {\n      this.ɵfac = function MatRadioButton_Factory(t) {\n        return new (t || MatRadioButton)(i0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i2.UniqueSelectionDispatcher), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatRadioButton,\n        selectors: [[\"mat-radio-button\"]],\n        viewQuery: function MatRadioButton_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 7, ElementRef);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._rippleTrigger = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-radio-button\"],\n        hostVars: 19,\n        hostBindings: function MatRadioButton_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() {\n              return ctx._inputElement.nativeElement.focus();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n            i0.ɵɵclassProp(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-mdc-radio-checked\", ctx.checked)(\"mat-mdc-radio-disabled\", ctx.disabled)(\"mat-mdc-radio-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          id: \"id\",\n          name: \"name\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          value: \"value\",\n          labelPosition: \"labelPosition\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          required: [2, \"required\", \"required\", booleanAttribute],\n          color: \"color\",\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\"\n        },\n        exportAs: [\"matRadioButton\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 13,\n        vars: 17,\n        consts: [[\"formField\", \"\"], [\"input\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [1, \"mdc-radio\"], [1, \"mat-mdc-radio-touch-target\", 3, \"click\"], [\"type\", \"radio\", 1, \"mdc-radio__native-control\", 3, \"change\", \"id\", \"checked\", \"disabled\", \"required\"], [1, \"mdc-radio__background\"], [1, \"mdc-radio__outer-circle\"], [1, \"mdc-radio__inner-circle\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mdc-label\", 3, \"for\"]],\n        template: function MatRadioButton_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 2, 0)(2, \"div\", 3)(3, \"div\", 4);\n            i0.ɵɵlistener(\"click\", function MatRadioButton_Template_div_click_3_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onTouchTargetClick($event));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"input\", 5, 1);\n            i0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_4_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onInputInteraction($event));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵelement(7, \"div\", 7)(8, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 9);\n            i0.ɵɵelement(10, \"div\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"label\", 11);\n            i0.ɵɵprojection(12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"mdc-radio--disabled\", ctx.disabled);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"required\", ctx.required);\n            i0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx._rippleTrigger.nativeElement)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"for\", ctx.inputId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled])~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color, var(--mat-app-on-surface))}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color, var(--mat-app-primary))}.mat-mdc-radio-button .mdc-radio:active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color, var(--mat-app-on-surface))}.mat-mdc-radio-button .mdc-radio:active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, var(--mat-app-primary))}.mat-mdc-radio-button .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-radio-button .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-radio-button .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-app-primary))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color, var(--mat-app-primary))}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled{pointer-events:auto}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-app-on-surface))}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color, var(--mat-app-primary))}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-app-on-surface))}.mat-mdc-radio-button .mat-internal-form-field{color:var(--mat-radio-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-radio-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-radio-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-radio-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-radio-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-radio-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-disabled{cursor:default;pointer-events:none}.mat-mdc-radio-disabled.mat-mdc-radio-disabled-interactive{pointer-events:auto}.mat-mdc-radio-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display)}[dir=rtl] .mat-mdc-radio-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatRadioButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRadioModule = /*#__PURE__*/(() => {\n  class MatRadioModule {\n    static {\n      this.ɵfac = function MatRadioModule_Factory(t) {\n        return new (t || MatRadioModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatRadioModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioButton, MatCommonModule]\n      });\n    }\n  }\n  return MatRadioModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState = /*#__PURE__*/function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n  return TransitionCheckState;\n}(TransitionCheckState || {});\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatCheckbox),\n  multi: true\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = /*#__PURE__*/MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nlet MatCheckbox = /*#__PURE__*/(() => {\n  class MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n      this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n      const event = new MatCheckboxChange();\n      event.source = this;\n      event.checked = isChecked;\n      return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n      return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._ngZone = _ngZone;\n      this._animationMode = _animationMode;\n      this._options = _options;\n      /** CSS classes to add when transitioning between the different checkbox states. */\n      this._animationClasses = {\n        uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n        uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n        checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n        checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n        indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n        indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n      };\n      /**\n       * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n       * take precedence so this may be omitted.\n       */\n      this.ariaLabel = '';\n      /**\n       * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n       */\n      this.ariaLabelledby = null;\n      /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n      this.labelPosition = 'after';\n      /** Name value will be applied to the input element if present */\n      this.name = null;\n      /** Event emitted when the checkbox's `checked` value changes. */\n      this.change = new EventEmitter();\n      /** Event emitted when the checkbox's `indeterminate` value changes. */\n      this.indeterminateChange = new EventEmitter();\n      /**\n       * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n       * @docs-private\n       */\n      this._onTouched = () => {};\n      this._currentAnimationClass = '';\n      this._currentCheckState = TransitionCheckState.Init;\n      this._controlValueAccessorChangeFn = () => {};\n      this._validatorChangeFn = () => {};\n      this._checked = false;\n      this._disabled = false;\n      this._indeterminate = false;\n      this._options = this._options || defaults;\n      this.color = this._options.color || defaults.color;\n      this.tabIndex = parseInt(tabIndex) || 0;\n      this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n      this.disabledInteractive = _options?.disabledInteractive ?? false;\n    }\n    ngOnChanges(changes) {\n      if (changes['required']) {\n        this._validatorChangeFn();\n      }\n    }\n    ngAfterViewInit() {\n      this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      if (value != this.checked) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      if (value !== this.disabled) {\n        this._disabled = value;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n      return this._indeterminate;\n    }\n    set indeterminate(value) {\n      const changed = value != this._indeterminate;\n      this._indeterminate = value;\n      if (changed) {\n        if (this._indeterminate) {\n          this._transitionCheckState(TransitionCheckState.Indeterminate);\n        } else {\n          this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n        }\n        this.indeterminateChange.emit(this._indeterminate);\n      }\n      this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n      return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n      // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n      // component will be only marked for check, but no actual change detection runs automatically.\n      // Instead of going back into the zone in order to trigger a change detection which causes\n      // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n      // an explicit change detection for the checkbox view and its children.\n      this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n      this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n      return this.required && control.value !== true ? {\n        'required': true\n      } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n      this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n      let oldState = this._currentCheckState;\n      let element = this._getAnimationTargetElement();\n      if (oldState === newState || !element) {\n        return;\n      }\n      if (this._currentAnimationClass) {\n        element.classList.remove(this._currentAnimationClass);\n      }\n      this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n      this._currentCheckState = newState;\n      if (this._currentAnimationClass.length > 0) {\n        element.classList.add(this._currentAnimationClass);\n        // Remove the animation class to avoid animation when the checkbox is moved between containers\n        const animationClass = this._currentAnimationClass;\n        this._ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            element.classList.remove(animationClass);\n          }, 1000);\n        });\n      }\n    }\n    _emitChangeEvent() {\n      this._controlValueAccessorChangeFn(this.checked);\n      this.change.emit(this._createChangeEvent(this.checked));\n      // Assigning the value again here is redundant, but we have to do it in case it was\n      // changed inside the `change` listener which will cause the input to be out of sync.\n      if (this._inputElement) {\n        this._inputElement.nativeElement.checked = this.checked;\n      }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n      this.checked = !this.checked;\n      this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n      const clickAction = this._options?.clickAction;\n      // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n      if (!this.disabled && clickAction !== 'noop') {\n        // When user manually click on the checkbox, `indeterminate` is set to false.\n        if (this.indeterminate && clickAction !== 'check') {\n          Promise.resolve().then(() => {\n            this._indeterminate = false;\n            this.indeterminateChange.emit(this._indeterminate);\n          });\n        }\n        this._checked = !this._checked;\n        this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n        // Emit our custom change event if the native input emitted one.\n        // It is important to only emit it, if the native input triggered one, because\n        // we don't want to trigger a change event, when the `checked` variable changes for example.\n        this._emitChangeEvent();\n      } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n        // Reset native input when clicked with noop. The native checkbox becomes checked after\n        // click, reset it to be align with `checked` value of `mat-checkbox`.\n        this._inputElement.nativeElement.checked = this.checked;\n        this._inputElement.nativeElement.indeterminate = this.indeterminate;\n      }\n    }\n    _onInteractionEvent(event) {\n      // We always have to stop propagation on the change event.\n      // Otherwise the change event, from the input element, will bubble up and\n      // emit its event object to the `change` output.\n      event.stopPropagation();\n    }\n    _onBlur() {\n      // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n      // Angular does not expect events to be raised during change detection, so any state change\n      // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n      // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n      // telling the form control it has been touched until the next tick.\n      Promise.resolve().then(() => {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n      // Don't transition if animations are disabled.\n      if (this._animationMode === 'NoopAnimations') {\n        return '';\n      }\n      switch (oldState) {\n        case TransitionCheckState.Init:\n          // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n          // [checked] bound to it.\n          if (newState === TransitionCheckState.Checked) {\n            return this._animationClasses.uncheckedToChecked;\n          } else if (newState == TransitionCheckState.Indeterminate) {\n            return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n          }\n          break;\n        case TransitionCheckState.Unchecked:\n          return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n        case TransitionCheckState.Checked:\n          return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n        case TransitionCheckState.Indeterminate:\n          return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n      }\n      return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n      const nativeCheckbox = this._inputElement;\n      if (nativeCheckbox) {\n        nativeCheckbox.nativeElement.indeterminate = value;\n      }\n    }\n    _onInputClick() {\n      this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n      this._handleInputClick();\n      if (!this.disabled) {\n        // Normally the input should be focused already, but if the click\n        // comes from the touch target, then we might have to focus it ourselves.\n        this._inputElement.nativeElement.focus();\n      }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n      if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n        event.stopPropagation();\n      }\n    }\n    static {\n      this.ɵfac = function MatCheckbox_Factory(t) {\n        return new (t || MatCheckbox)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCheckbox,\n        selectors: [[\"mat-checkbox\"]],\n        viewQuery: function MatCheckbox_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n            i0.ɵɵviewQuery(MatRipple, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-checkbox\"],\n        hostVars: 16,\n        hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n          }\n        },\n        inputs: {\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          id: \"id\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          labelPosition: \"labelPosition\",\n          name: \"name\",\n          value: \"value\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n          color: \"color\",\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\",\n          indeterminateChange: \"indeterminateChange\"\n        },\n        exportAs: [\"matCheckbox\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n          provide: NG_VALIDATORS,\n          useExisting: MatCheckbox,\n          multi: true\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 15,\n        vars: 20,\n        consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n        template: function MatCheckbox_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 3);\n            i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n            });\n            i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n            i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onTouchTargetClick());\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"input\", 6, 1);\n            i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onBlur());\n            })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onInputClick());\n            })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(6, \"div\", 7);\n            i0.ɵɵelementStart(7, \"div\", 8);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(8, \"svg\", 9);\n            i0.ɵɵelement(9, \"path\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelement(10, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"div\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"label\", 13, 2);\n            i0.ɵɵprojection(14);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const checkbox_r2 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n            i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n            i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"name\", ctx.name)(\"value\", ctx.value);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", ctx.inputId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCheckbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet MatCheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatCheckboxRequiredValidator_BaseFactory;\n        return function MatCheckboxRequiredValidator_Factory(t) {\n          return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCheckboxRequiredValidator,\n        selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatCheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet _MatCheckboxRequiredValidatorModule = /*#__PURE__*/(() => {\n  class _MatCheckboxRequiredValidatorModule {\n    static {\n      this.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) {\n        return new (t || _MatCheckboxRequiredValidatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: _MatCheckboxRequiredValidatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return _MatCheckboxRequiredValidatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatCheckboxModule = /*#__PURE__*/(() => {\n  class MatCheckboxModule {\n    static {\n      this.ɵfac = function MatCheckboxModule_Factory(t) {\n        return new (t || MatCheckboxModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCheckboxModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatCheckboxModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nconst _c1 = [\"*\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false,\n    disabledInteractive: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor( /** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nlet MatSlideToggle = /*#__PURE__*/(() => {\n  class MatSlideToggle {\n    _createChangeEvent(isChecked) {\n      return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n      return `${this.id || this._uniqueId}-button`;\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n      this._switchElement.nativeElement.focus();\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.defaults = defaults;\n      this._onChange = _ => {};\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._checked = false;\n      /** Name value will be applied to the input element if present. */\n      this.name = null;\n      /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n      this.labelPosition = 'after';\n      /** Used to set the aria-label attribute on the underlying input element. */\n      this.ariaLabel = null;\n      /** Used to set the aria-labelledby attribute on the underlying input element. */\n      this.ariaLabelledby = null;\n      /** Whether the slide toggle is disabled. */\n      this.disabled = false;\n      /** Whether the slide toggle has a ripple. */\n      this.disableRipple = false;\n      /** Tabindex of slide toggle. */\n      this.tabIndex = 0;\n      /** An event will be dispatched each time the slide-toggle changes its value. */\n      this.change = new EventEmitter();\n      /**\n       * An event will be dispatched each time the slide-toggle input is toggled.\n       * This event is always emitted when the user toggles the slide toggle, but this does not mean\n       * the slide toggle's value has changed.\n       */\n      this.toggleChange = new EventEmitter();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      this.color = defaults.color || 'accent';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n      this.hideIcon = defaults.hideIcon ?? false;\n      this.disabledInteractive = defaults.disabledInteractive ?? false;\n      this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._focused = true;\n          this._changeDetectorRef.markForCheck();\n        } else if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n          // telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => {\n            this._focused = false;\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n          });\n        }\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes['required']) {\n        this._validatorOnChange();\n      }\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n      this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n      return this.required && control.value !== true ? {\n        'required': true\n      } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n      this._onChange(this.checked);\n      this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n      if (!this.disabled) {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n          this.checked = !this.checked;\n          this._onChange(this.checked);\n          this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n      }\n    }\n    _getAriaLabelledBy() {\n      if (this.ariaLabelledby) {\n        return this.ariaLabelledby;\n      }\n      // Even though we have a `label` element with a `for` pointing to the button, we need the\n      // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n      return this.ariaLabel ? null : this._labelId;\n    }\n    static {\n      this.ɵfac = function MatSlideToggle_Factory(t) {\n        return new (t || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlideToggle,\n        selectors: [[\"mat-slide-toggle\"]],\n        viewQuery: function MatSlideToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n        hostVars: 13,\n        hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          name: \"name\",\n          id: \"id\",\n          labelPosition: \"labelPosition\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          required: [2, \"required\", \"required\", booleanAttribute],\n          color: \"color\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          hideIcon: [2, \"hideIcon\", \"hideIcon\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\",\n          toggleChange: \"toggleChange\"\n        },\n        exportAs: [\"matSlideToggle\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n          provide: NG_VALIDATORS,\n          useExisting: MatSlideToggle,\n          multi: true\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 27,\n        consts: [[\"switch\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"click\", \"tabIndex\", \"disabled\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"click\", \"for\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n        template: function MatSlideToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2, 0);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleClick());\n            });\n            i0.ɵɵelement(3, \"span\", 3);\n            i0.ɵɵelementStart(4, \"span\", 4)(5, \"span\", 5)(6, \"span\", 6);\n            i0.ɵɵelement(7, \"span\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"span\", 8);\n            i0.ɵɵelement(9, \"span\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"span\", 10);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"label\", 11);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView($event.stopPropagation());\n            });\n            i0.ɵɵprojection(12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const switch_r2 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled)(\"mat-mdc-slide-toggle-disabled-interactive\", ctx.disabledInteractive);\n            i0.ɵɵproperty(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled && !ctx.disabledInteractive);\n            i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"matRippleTrigger\", switch_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx.hideIcon ? 10 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", ctx.buttonId);\n            i0.ɵɵattribute(\"id\", ctx._labelId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mdc-switch-track-height);border-radius:var(--mdc-switch-track-shape, var(--mat-app-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color, var(--mat-app-outline))}.cdk-high-contrast-active .mdc-switch__track::before,.cdk-high-contrast-active .mdc-switch__track::after{border-color:currentColor}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-switch-selected-track-outline-width);border-color:var(--mat-switch-selected-track-outline-color)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color, var(--mat-app-on-surface))}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mdc-switch-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, var(--mat-app-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mdc-switch-selected-track-color, var(--mat-app-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, var(--mat-app-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, var(--mat-app-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, var(--mat-app-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, var(--mat-app-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mdc-switch-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mdc-switch-handle-width);height:var(--mdc-switch-handle-height);border-radius:var(--mdc-switch-handle-shape, var(--mat-app-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size);margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size);margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}.cdk-high-contrast-active .mdc-switch__handle::before,.cdk-high-contrast-active .mdc-switch__handle::after{border-color:currentColor}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mat-app-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, var(--mat-app-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, var(--mat-app-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, var(--mat-app-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, var(--mat-app-on-surface))}.mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mdc-switch-state-layer-size);height:var(--mdc-switch-state-layer-size)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-pressed-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-selected-pressed-state-layer-color, var(--mat-app-primary));opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size);fill:var(--mdc-switch-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size);fill:var(--mdc-switch-selected-icon-color, var(--mat-app-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mat-app-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-switch-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-switch-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-switch-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-switch-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-switch-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-switch-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlideToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet MatSlideToggleRequiredValidator = /*#__PURE__*/(() => {\n  class MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSlideToggleRequiredValidator_BaseFactory;\n        return function MatSlideToggleRequiredValidator_Factory(t) {\n          return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSlideToggleRequiredValidator,\n        selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSlideToggleRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet _MatSlideToggleRequiredValidatorModule = /*#__PURE__*/(() => {\n  class _MatSlideToggleRequiredValidatorModule {\n    static {\n      this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) {\n        return new (t || _MatSlideToggleRequiredValidatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: _MatSlideToggleRequiredValidatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return _MatSlideToggleRequiredValidatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSlideToggleModule = /*#__PURE__*/(() => {\n  class MatSlideToggleModule {\n    static {\n      this.ɵfac = function MatSlideToggleModule_Factory(t) {\n        return new (t || MatSlideToggleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSlideToggleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSlideToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import * as i1 from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { RippleState, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb = /*#__PURE__*/function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n  return _MatThumb;\n}(_MatThumb || {});\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark = /*#__PURE__*/function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n  return _MatTickMark;\n}(_MatTickMark || {});\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = /*#__PURE__*/new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nlet MatSliderVisualThumb = /*#__PURE__*/(() => {\n  class MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n      this._cdr = _cdr;\n      this._ngZone = _ngZone;\n      this._slider = _slider;\n      /** Whether the slider thumb is currently being hovered. */\n      this._isHovered = false;\n      /** Whether the slider thumb is currently being pressed. */\n      this._isActive = false;\n      /** Whether the value indicator tooltip is visible. */\n      this._isValueIndicatorVisible = false;\n      this._platform = inject(Platform);\n      this._onPointerMove = event => {\n        if (this._sliderInput._isFocused) {\n          return;\n        }\n        const rect = this._hostElement.getBoundingClientRect();\n        const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n        this._isHovered = isHovered;\n        if (isHovered) {\n          this._showHoverRipple();\n        } else {\n          this._hideRipple(this._hoverRippleRef);\n        }\n      };\n      this._onMouseLeave = () => {\n        this._isHovered = false;\n        this._hideRipple(this._hoverRippleRef);\n      };\n      this._onFocus = () => {\n        // We don't want to show the hover ripple on top of the focus ripple.\n        // Happen when the users cursor is over a thumb and then the user tabs to it.\n        this._hideRipple(this._hoverRippleRef);\n        this._showFocusRipple();\n        this._hostElement.classList.add('mdc-slider__thumb--focused');\n      };\n      this._onBlur = () => {\n        // Happens when the user tabs away while still dragging a thumb.\n        if (!this._isActive) {\n          this._hideRipple(this._focusRippleRef);\n        }\n        // Happens when the user tabs away from a thumb but their cursor is still over it.\n        if (this._isHovered) {\n          this._showHoverRipple();\n        }\n        this._hostElement.classList.remove('mdc-slider__thumb--focused');\n      };\n      this._onDragStart = event => {\n        if (event.button !== 0) {\n          return;\n        }\n        this._isActive = true;\n        this._showActiveRipple();\n      };\n      this._onDragEnd = () => {\n        this._isActive = false;\n        this._hideRipple(this._activeRippleRef);\n        // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n        if (!this._sliderInput._isFocused) {\n          this._hideRipple(this._focusRippleRef);\n        }\n        // On Safari we need to immediately re-show the hover ripple because\n        // sliders do not retain focus from pointer events on that platform.\n        if (this._platform.SAFARI) {\n          this._showHoverRipple();\n        }\n      };\n      this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n      const sliderInput = this._slider._getInput(this.thumbPosition);\n      // No-op if the slider isn't configured properly. `MatSlider` will\n      // throw an error instructing the user how to set up the slider.\n      if (!sliderInput) {\n        return;\n      }\n      this._ripple.radius = 24;\n      this._sliderInput = sliderInput;\n      this._sliderInputEl = this._sliderInput._hostElement;\n      // These listeners don't update any data bindings so we bind them outside\n      // of the NgZone to prevent Angular from needlessly running change detection.\n      this._ngZone.runOutsideAngular(() => {\n        const input = this._sliderInputEl;\n        input.addEventListener('pointermove', this._onPointerMove);\n        input.addEventListener('pointerdown', this._onDragStart);\n        input.addEventListener('pointerup', this._onDragEnd);\n        input.addEventListener('pointerleave', this._onMouseLeave);\n        input.addEventListener('focus', this._onFocus);\n        input.addEventListener('blur', this._onBlur);\n      });\n    }\n    ngOnDestroy() {\n      const input = this._sliderInputEl;\n      if (input) {\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n      }\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n      if (!this._isShowingRipple(this._hoverRippleRef)) {\n        this._hoverRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        });\n        this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n      }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n      // Show the focus ripple event if noop animations are enabled.\n      if (!this._isShowingRipple(this._focusRippleRef)) {\n        this._focusRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        }, true);\n        this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n      }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n      if (!this._isShowingRipple(this._activeRippleRef)) {\n        this._activeRippleRef = this._showRipple({\n          enterDuration: 225,\n          exitDuration: 400\n        });\n        this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n      }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n      return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n      if (this._slider.disabled) {\n        return;\n      }\n      this._showValueIndicator();\n      if (this._slider._isRange) {\n        const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n        sibling._showValueIndicator();\n      }\n      if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n        return;\n      }\n      return this._ripple.launch({\n        animation: this._slider._noopAnimations ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : animation,\n        centered: true,\n        persistent: true\n      });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n      rippleRef?.fadeOut();\n      if (this._isShowingAnyRipple()) {\n        return;\n      }\n      if (!this._slider._isRange) {\n        this._hideValueIndicator();\n      }\n      const sibling = this._getSibling();\n      if (!sibling._isShowingAnyRipple()) {\n        this._hideValueIndicator();\n        sibling._hideValueIndicator();\n      }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n      this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n      this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n      return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n      return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n      return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n      return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n    }\n    static {\n      this.ɵfac = function MatSliderVisualThumb_Factory(t) {\n        return new (t || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSliderVisualThumb,\n        selectors: [[\"mat-slider-visual-thumb\"]],\n        viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatRipple, 5);\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n        inputs: {\n          discrete: \"discrete\",\n          thumbPosition: \"thumbPosition\",\n          valueIndicatorText: \"valueIndicatorText\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SLIDER_VISUAL_THUMB,\n          useExisting: MatSliderVisualThumb\n        }]), i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 2,\n        consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n        template: function MatSliderVisualThumb_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n            i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matRippleDisabled\", true);\n          }\n        },\n        dependencies: [MatRipple],\n        styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSliderVisualThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nlet MatSlider = /*#__PURE__*/(() => {\n  class MatSlider {\n    /** Whether the slider is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(v) {\n      this._disabled = v;\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      if (endInput) {\n        endInput.disabled = this._disabled;\n      }\n      if (startInput) {\n        startInput.disabled = this._disabled;\n      }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n      return this._discrete;\n    }\n    set discrete(v) {\n      this._discrete = v;\n      this._updateValueIndicatorUIs();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n      return this._min;\n    }\n    set min(v) {\n      const min = isNaN(v) ? this._min : v;\n      if (this._min !== min) {\n        this._updateMin(min);\n      }\n    }\n    _updateMin(min) {\n      const prevMin = this._min;\n      this._min = min;\n      this._isRange ? this._updateMinRange({\n        old: prevMin,\n        new: min\n      }) : this._updateMinNonRange(min);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      startInput.min = min.new;\n      endInput.min = Math.max(min.new, startInput.value);\n      startInput.max = Math.min(endInput.max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMinNonRange(min) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.min = min;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n      return this._max;\n    }\n    set max(v) {\n      const max = isNaN(v) ? this._max : v;\n      if (this._max !== max) {\n        this._updateMax(max);\n      }\n    }\n    _updateMax(max) {\n      const prevMax = this._max;\n      this._max = max;\n      this._isRange ? this._updateMaxRange({\n        old: prevMax,\n        new: max\n      }) : this._updateMaxNonRange(max);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      endInput.max = max.new;\n      startInput.max = Math.min(max.new, endInput.value);\n      endInput.min = startInput.value;\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMaxNonRange(max) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.max = max;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n      return this._step;\n    }\n    set step(v) {\n      const step = isNaN(v) ? this._step : v;\n      if (this._step !== step) {\n        this._updateStep(step);\n      }\n    }\n    _updateStep(step) {\n      this._step = step;\n      this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n      this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      const prevStartValue = startInput.value;\n      endInput.min = this._min;\n      startInput.max = this._max;\n      endInput.step = this._step;\n      startInput.step = this._step;\n      if (this._platform.SAFARI) {\n        endInput.value = endInput.value;\n        startInput.value = startInput.value;\n      }\n      endInput.min = Math.max(this._min, startInput.value);\n      startInput.max = Math.min(this._max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateStepNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.step = this._step;\n        if (this._platform.SAFARI) {\n          input.value = input.value;\n        }\n        input._updateThumbUIByValue();\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    constructor(_ngZone, _cdr, _elementRef, _dir, _globalRippleOptions, animationMode) {\n      this._ngZone = _ngZone;\n      this._cdr = _cdr;\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      this._globalRippleOptions = _globalRippleOptions;\n      this._disabled = false;\n      this._discrete = false;\n      /** Whether the slider displays tick marks along the slider track. */\n      this.showTickMarks = false;\n      this._min = 0;\n      /** Whether ripples are disabled in the slider. */\n      this.disableRipple = false;\n      this._max = 100;\n      this._step = 1;\n      /**\n       * Function that will be used to format the value before it is displayed\n       * in the thumb label. Can be used to format very large number in order\n       * for them to fit into the slider thumb.\n       */\n      this.displayWith = value => `${value}`;\n      this._rippleRadius = 24;\n      // The value indicator tooltip text for the visual slider thumb(s).\n      /** @docs-private */\n      this.startValueIndicatorText = '';\n      /** @docs-private */\n      this.endValueIndicatorText = '';\n      this._isRange = false;\n      /** Whether the slider is rtl. */\n      this._isRtl = false;\n      this._hasViewInitialized = false;\n      /**\n       * The width of the tick mark track.\n       * The tick mark track width is different from full track width\n       */\n      this._tickMarkTrackWidth = 0;\n      this._hasAnimation = false;\n      this._resizeTimer = null;\n      this._platform = inject(Platform);\n      /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n      this._knobRadius = 8;\n      /** Whether or not the slider thumbs overlap. */\n      this._thumbsOverlap = false;\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n      this._isRtl = this._dir.value === 'rtl';\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._updateDimensions();\n      }\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      this._isRange = !!eInput && !!sInput;\n      this._cdr.detectChanges();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n      }\n      const thumb = this._getThumb(_MatThumb.END);\n      this._rippleRadius = thumb._ripple.radius;\n      this._inputPadding = this._rippleRadius - this._knobRadius;\n      this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n      this._updateTrackUI(eInput);\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._observeHostResize();\n      this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n      eInput.initProps();\n      eInput.initUI();\n      this._updateValueIndicatorUI(eInput);\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n      eInput.initProps();\n      eInput.initUI();\n      sInput.initProps();\n      sInput.initUI();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      this._updateValueIndicatorUIs();\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n      this._resizeObserver?.disconnect();\n      this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n      this._isRtl = this._dir.value === 'rtl';\n      this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n      this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      endInput._setIsLeftThumb();\n      startInput._setIsLeftThumb();\n      endInput.translateX = endInput._calcTranslateXByValue();\n      startInput.translateX = startInput._calcTranslateXByValue();\n      endInput._updateStaticStyles();\n      startInput._updateStaticStyles();\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      endInput._updateThumbUIByValue();\n      startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n      if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n        return;\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeObserver = new ResizeObserver(() => {\n          if (this._isActive()) {\n            return;\n          }\n          if (this._resizeTimer) {\n            clearTimeout(this._resizeTimer);\n          }\n          this._onResize();\n        });\n        this._resizeObserver.observe(this._elementRef.nativeElement);\n      });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n      return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n    }\n    _getValue(thumbPosition = _MatThumb.END) {\n      const input = this._getInput(thumbPosition);\n      if (!input) {\n        return this.min;\n      }\n      return input.value;\n    }\n    _skipUpdate() {\n      return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n      this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n      this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n      const trackStyle = this._trackActive.nativeElement.style;\n      trackStyle.left = styles.left;\n      trackStyle.right = styles.right;\n      trackStyle.transformOrigin = styles.transformOrigin;\n      trackStyle.transform = styles.transform;\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n      // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n      const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n      return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateThumbUI(source);\n      this._updateTrackUI(source);\n      this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      input1._updateThumbUIByValue();\n      input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateValueIndicatorUI(source);\n      this._updateTickMarkUI();\n      this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.markForCheck();\n    }\n    _onResize() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateDimensions();\n      if (this._isRange) {\n        const eInput = this._getInput(_MatThumb.END);\n        const sInput = this._getInput(_MatThumb.START);\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateWidthInactive();\n        sInput._updateWidthInactive();\n      } else {\n        const eInput = this._getInput(_MatThumb.END);\n        if (eInput) {\n          eInput._updateThumbUIByValue();\n        }\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n      const startInput = this._getInput(_MatThumb.START);\n      const endInput = this._getInput(_MatThumb.END);\n      if (!startInput || !endInput) {\n        return false;\n      }\n      return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n      const sibling = source.getSibling();\n      const sourceThumb = this._getThumb(source.thumbPosition);\n      const siblingThumb = this._getThumb(sibling.thumbPosition);\n      siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n      sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n      if (!this._isRange || this._skipUpdate()) {\n        return;\n      }\n      if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n        this._thumbsOverlap = !this._thumbsOverlap;\n        this._updateOverlappingThumbClassNames(source);\n      }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n      thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const valuetext = this.displayWith(source.value);\n      this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n      if (this.discrete) {\n        source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n        const visualThumb = this._getThumb(source.thumbPosition);\n        valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n      }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      if (eInput) {\n        this._updateValueIndicatorUI(eInput);\n      }\n      if (sInput) {\n        this._updateValueIndicatorUI(sInput);\n      }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n      if (!this.showTickMarks || this._skipUpdate()) {\n        return;\n      }\n      const step = this._step && this._step > 0 ? this._step : 1;\n      const maxValue = Math.floor(this.max / step) * step;\n      const percentage = (maxValue - this.min) / (this.max - this.min);\n      this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n      const sibling = source.getSibling();\n      if (!sibling || !this._cachedWidth) {\n        return;\n      }\n      const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n      if (source._isLeftThumb && this._cachedWidth) {\n        this._setTrackActiveStyles({\n          left: 'auto',\n          right: `${this._cachedWidth - sibling.translateX}px`,\n          transformOrigin: 'right',\n          transform: `scaleX(${activePercentage})`\n        });\n      } else {\n        this._setTrackActiveStyles({\n          left: `${sibling.translateX}px`,\n          right: 'auto',\n          transformOrigin: 'left',\n          transform: `scaleX(${activePercentage})`\n        });\n      }\n    }\n    _updateTrackUINonRange(source) {\n      this._isRtl ? this._setTrackActiveStyles({\n        left: 'auto',\n        right: '0px',\n        transformOrigin: 'right',\n        transform: `scaleX(${1 - source.fillPercentage})`\n      }) : this._setTrackActiveStyles({\n        left: '0px',\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${source.fillPercentage})`\n      });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n      if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n        return;\n      }\n      const step = this.step > 0 ? this.step : 1;\n      this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n      if (this._isRtl) {\n        this._tickMarks.reverse();\n      }\n    }\n    _updateTickMarkUINonRange(step) {\n      const value = this._getValue();\n      let numActive = Math.max(Math.round((value - this.min) / step), 0);\n      let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n      this._isRtl ? numActive++ : numInactive++;\n      this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n    }\n    _updateTickMarkUIRange(step) {\n      const endValue = this._getValue();\n      const startValue = this._getValue(_MatThumb.START);\n      const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n      const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n      const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n      this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n      if (thumbPosition === _MatThumb.END && this._input) {\n        return this._input;\n      }\n      if (this._inputs?.length) {\n        return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n      }\n      return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n      return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n      this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n      this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n    /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n    _isCursorOnSliderThumb(event, rect) {\n      const radius = rect.width / 2;\n      const centerX = rect.x + radius;\n      const centerY = rect.y + radius;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n    static {\n      this.ɵfac = function MatSlider_Factory(t) {\n        return new (t || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlider,\n        selectors: [[\"mat-slider\"]],\n        contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n          }\n        },\n        viewQuery: function MatSlider_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n        hostVars: 12,\n        hostBindings: function MatSlider_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n            i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n          showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n          min: [2, \"min\", \"min\", numberAttribute],\n          color: \"color\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          max: [2, \"max\", \"max\", numberAttribute],\n          step: [2, \"step\", \"step\", numberAttribute],\n          displayWith: \"displayWith\"\n        },\n        exportAs: [\"matSlider\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SLIDER,\n          useExisting: MatSlider\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c3,\n        decls: 9,\n        vars: 5,\n        consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n        template: function MatSlider_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 2);\n            i0.ɵɵelement(2, \"div\", 3);\n            i0.ɵɵelementStart(3, \"div\", 4);\n            i0.ɵɵelement(4, \"div\", 5, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n            i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n          }\n        },\n        dependencies: [MatSliderVisualThumb],\n        styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-app-corner-full));height:var(--mdc-slider-active-track-height);top:calc((var(--mdc-slider-inactive-track-height) - var(--mdc-slider-active-track-height))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-app-primary));border-top-width:var(--mdc-slider-active-track-height)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-app-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-app-surface-variant));height:var(--mdc-slider-inactive-track-height);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-app-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-app-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__track--inactive::before{border-color:CanvasText}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-app-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-app-on-primary));width:var(--mat-slider-value-indicator-width);height:var(--mat-slider-value-indicator-height);padding:var(--mat-slider-value-indicator-padding);opacity:var(--mat-slider-value-indicator-opacity);border-radius:var(--mat-slider-value-indicator-border-radius)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display);border-top-color:var(--mdc-slider-label-container-color, var(--mat-app-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__value-indicator::after{border-color:CanvasText}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width);transform:var(--mat-slider-value-indicator-text-transform);font-family:var(--mdc-slider-label-label-text-font, var(--mat-app-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-app-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-app-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-app-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-app-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width);height:var(--mdc-slider-handle-height);border-width:calc(var(--mdc-slider-handle-height)/2) calc(var(--mdc-slider-handle-width)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-app-level1));background-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-app-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-app-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size);height:var(--mdc-slider-with-tick-marks-container-size);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-app-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-app-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-app-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-app-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-app-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlider;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nlet MatSliderThumb = /*#__PURE__*/(() => {\n  class MatSliderThumb {\n    get value() {\n      return numberAttribute(this._hostElement.value, 0);\n    }\n    set value(value) {\n      value = isNaN(value) ? 0 : value;\n      const stringValue = value + '';\n      if (!this._hasSetInitialValue) {\n        this._initialValue = stringValue;\n        return;\n      }\n      if (this._isActive) {\n        return;\n      }\n      this._setValue(stringValue);\n    }\n    /**\n     * Handles programmatic value setting. This has been split out to\n     * allow the range thumb to override it and add additional necessary logic.\n     */\n    _setValue(value) {\n      this._hostElement.value = value;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n      this._slider._cdr.markForCheck();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n      if (this._slider.min >= this._slider.max) {\n        this._translateX = this._tickMarkOffset;\n        return this._translateX;\n      }\n      if (this._translateX === undefined) {\n        this._translateX = this._calcTranslateXByValue();\n      }\n      return this._translateX;\n    }\n    set translateX(v) {\n      this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n      return numberAttribute(this._hostElement.min, 0);\n    }\n    set min(v) {\n      this._hostElement.min = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n      return numberAttribute(this._hostElement.max, 0);\n    }\n    set max(v) {\n      this._hostElement.max = v + '';\n      this._cdr.detectChanges();\n    }\n    get step() {\n      return numberAttribute(this._hostElement.step, 0);\n    }\n    set step(v) {\n      this._hostElement.step = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n      return booleanAttribute(this._hostElement.disabled);\n    }\n    set disabled(v) {\n      this._hostElement.disabled = v;\n      this._cdr.detectChanges();\n      if (this._slider.disabled !== this.disabled) {\n        this._slider.disabled = this.disabled;\n      }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n      if (this._slider.min >= this._slider.max) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n      if (!this._slider._cachedWidth) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      if (this._translateX === 0) {\n        return 0;\n      }\n      return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n      this._isFocused = v;\n    }\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n      this._ngZone = _ngZone;\n      this._elementRef = _elementRef;\n      this._cdr = _cdr;\n      this._slider = _slider;\n      /** Event emitted when the `value` is changed. */\n      this.valueChange = new EventEmitter();\n      /** Event emitted when the slider thumb starts being dragged. */\n      this.dragStart = new EventEmitter();\n      /** Event emitted when the slider thumb stops being dragged. */\n      this.dragEnd = new EventEmitter();\n      /**\n       * Indicates whether this thumb is the start or end thumb.\n       * @docs-private\n       */\n      this.thumbPosition = _MatThumb.END;\n      /** The aria-valuetext string representation of the input's value. */\n      this._valuetext = signal('');\n      /** The radius of a native html slider's knob. */\n      this._knobRadius = 8;\n      /** The distance in px from the start of the slider track to the first tick mark. */\n      this._tickMarkOffset = 3;\n      /** Whether user's cursor is currently in a mouse down state on the input. */\n      this._isActive = false;\n      /** Whether the input is currently focused (either by tab or after clicking). */\n      this._isFocused = false;\n      /**\n       * Whether the initial value has been set.\n       * This exists because the initial value cannot be immediately set because the min and max\n       * must first be relayed from the parent MatSlider component, which can only happen later\n       * in the component lifecycle.\n       */\n      this._hasSetInitialValue = false;\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /**\n       * Indicates whether UI updates should be skipped.\n       *\n       * This flag is used to avoid flickering\n       * when correcting values on pointer up/down.\n       */\n      this._skipUIUpdate = false;\n      /** Callback called when the slider input has been touched. */\n      this._onTouchedFn = () => {};\n      /**\n       * Whether the NgModel has been initialized.\n       *\n       * This flag is used to ignore ghost null calls to\n       * writeValue which can break slider initialization.\n       *\n       * See https://github.com/angular/angular/issues/14988.\n       */\n      this._isControlInitialized = false;\n      this._platform = inject(Platform);\n      this._hostElement = _elementRef.nativeElement;\n      this._ngZone.runOutsideAngular(() => {\n        this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n        this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n        this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n      });\n    }\n    ngOnDestroy() {\n      this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n      this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n      this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.dragStart.complete();\n      this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n      this._updateWidthInactive();\n      // If this or the parent slider is disabled, just make everything disabled.\n      if (this.disabled !== this._slider.disabled) {\n        // The MatSlider setter for disabled will relay this and disable both inputs.\n        this._slider.disabled = true;\n      }\n      this.step = this._slider.step;\n      this.min = this._slider.min;\n      this.max = this._slider.max;\n      this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n      this._updateThumbUIByValue();\n    }\n    _initValue() {\n      this._hasSetInitialValue = true;\n      if (this._initialValue === undefined) {\n        this.value = this._getDefaultValue();\n      } else {\n        this._hostElement.value = this._initialValue;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n      }\n    }\n    _getDefaultValue() {\n      return this.min;\n    }\n    _onBlur() {\n      this._setIsFocused(false);\n      this._onTouchedFn();\n    }\n    _onFocus() {\n      this._slider._setTransition(false);\n      this._slider._updateTrackUI(this);\n      this._setIsFocused(true);\n    }\n    _onChange() {\n      this.valueChange.emit(this.value);\n      // only used to handle the edge case where user\n      // mousedown on the slider then uses arrow keys.\n      if (this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n    }\n    _onInput() {\n      this._onChangeFn?.(this.value);\n      // handles arrowing and updating the value when\n      // a step is defined.\n      if (this._slider.step || !this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n      this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n      // only used to handle when the value change\n      // originates outside of the slider.\n      if (!this._isActive || !this._isFocused) {\n        this._slider._onValueChange(this);\n        this._updateThumbUIByValue();\n      }\n      this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      // On IOS, dragging only works if the pointer down happens on the\n      // slider thumb and the slider does not receive focus from pointer events.\n      if (this._platform.IOS) {\n        const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n        this._isActive = isCursorOnSliderThumb;\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        return;\n      }\n      this._isActive = true;\n      this._setIsFocused(true);\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      // Does nothing if a step is defined because we\n      // want the value to snap to the values on input.\n      if (!this._slider.step) {\n        this._updateThumbUIByPointerEvent(event, {\n          withAnimation: true\n        });\n      }\n      if (!this.disabled) {\n        this._handleValueCorrection(event);\n        this.dragStart.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n      }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n      // Don't update the UI with the current value! The value on pointerdown\n      // and pointerup is calculated in the split second before the input(s)\n      // resize. See _updateWidthInactive() and _updateWidthActive() for more\n      // details.\n      this._skipUIUpdate = true;\n      // Note that this function gets triggered before the actual value of the\n      // slider is updated. This means if we were to set the value here, it\n      // would immediately be overwritten. Using setTimeout ensures the setting\n      // of the value happens after the value has been updated by the\n      // pointerdown event.\n      setTimeout(() => {\n        this._skipUIUpdate = false;\n        this._fixValue(event);\n      }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n      const xPos = event.clientX - this._slider._cachedLeft;\n      const width = this._slider._cachedWidth;\n      const step = this._slider.step === 0 ? 1 : this._slider.step;\n      const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n      const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n      // To ensure the percentage is rounded to the necessary number of decimals.\n      const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n      const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n      const value = Math.round(impreciseValue / step) * step;\n      const prevValue = this.value;\n      if (value === prevValue) {\n        // Because we prevented UI updates, if it turns out that the race\n        // condition didn't happen and the value is already correct, we\n        // have to apply the ui updates now.\n        this._slider._onValueChange(this);\n        this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n          withAnimation: this._slider._hasAnimation\n        });\n        return;\n      }\n      this.value = value;\n      this.valueChange.emit(this.value);\n      this._onChangeFn?.(this.value);\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n    }\n    _onPointerMove(event) {\n      // Again, does nothing if a step is defined because\n      // we want the value to snap to the values on input.\n      if (!this._slider.step && this._isActive) {\n        this._updateThumbUIByPointerEvent(event);\n      }\n    }\n    _onPointerUp() {\n      if (this._isActive) {\n        this._isActive = false;\n        if (this._platform.SAFARI) {\n          this._setIsFocused(false);\n        }\n        this.dragEnd.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n        // This setTimeout is to prevent the pointerup from triggering a value\n        // change on the input based on the inactive width. It's not clear why\n        // but for some reason on IOS this race condition is even more common so\n        // the timeout needs to be increased.\n        setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n      }\n    }\n    _clamp(v) {\n      const min = this._tickMarkOffset;\n      const max = this._slider._cachedWidth - this._tickMarkOffset;\n      return Math.max(Math.min(v, max), min);\n    }\n    _calcTranslateXByValue() {\n      if (this._slider._isRtl) {\n        return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n      }\n      return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    _calcTranslateXByPointerEvent(event) {\n      return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {}\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n      this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n    _updateThumbUIByValue(options) {\n      this.translateX = this._clamp(this._calcTranslateXByValue());\n      this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n      this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n      this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n      this._slider._setTransition(!!options?.withAnimation);\n      this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n      }\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n      this._onChangeFn = fn;\n      this._isControlInitialized = true;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n      this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    focus() {\n      this._hostElement.focus();\n    }\n    blur() {\n      this._hostElement.blur();\n    }\n    static {\n      this.ɵfac = function MatSliderThumb_Factory(t) {\n        return new (t || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSliderThumb,\n        selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n        hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n        hostVars: 1,\n        hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n              return ctx._onInput();\n            })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n              return ctx._onFocus();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n          }\n        },\n        inputs: {\n          value: [2, \"value\", \"value\", numberAttribute]\n        },\n        outputs: {\n          valueChange: \"valueChange\",\n          dragStart: \"dragStart\",\n          dragEnd: \"dragEnd\"\n        },\n        exportAs: [\"matSliderThumb\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n          provide: MAT_SLIDER_THUMB,\n          useExisting: MatSliderThumb\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatSliderThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderRangeThumb = /*#__PURE__*/(() => {\n  class MatSliderRangeThumb extends MatSliderThumb {\n    /** @docs-private */\n    getSibling() {\n      if (!this._sibling) {\n        this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n      }\n      return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n      const sibling = this.getSibling();\n      if (!this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._tickMarkOffset;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n      const sibling = this.getSibling();\n      if (this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._slider._cachedWidth - this._tickMarkOffset;\n    }\n    _setIsLeftThumb() {\n      this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n    }\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n      super(_ngZone, _elementRef, _cdr, _slider);\n      this._cdr = _cdr;\n      this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n      this._setIsLeftThumb();\n      this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n    }\n    _getDefaultValue() {\n      return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n      super._onInput();\n      this._updateSibling();\n      if (!this._isActive) {\n        this._updateWidthInactive();\n      }\n    }\n    _onNgControlValueChange() {\n      super._onNgControlValueChange();\n      this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      if (this._sibling) {\n        this._sibling._updateWidthActive();\n        this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n      }\n      super._onPointerDown(event);\n    }\n    _onPointerUp() {\n      super._onPointerUp();\n      if (this._sibling) {\n        setTimeout(() => {\n          this._sibling._updateWidthInactive();\n          this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n        });\n      }\n    }\n    _onPointerMove(event) {\n      super._onPointerMove(event);\n      if (!this._slider.step && this._isActive) {\n        this._updateSibling();\n      }\n    }\n    _fixValue(event) {\n      super._fixValue(event);\n      this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n      return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      if (this._isEndThumb) {\n        this.min = Math.max(this._slider.min, sibling.value);\n        this.max = this._slider.max;\n      } else {\n        this.min = this._slider.min;\n        this.max = Math.min(this._slider.max, sibling.value);\n      }\n    }\n    _updateWidthActive() {\n      const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n      const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n      const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n      const width = maxWidth * percentage + minWidth;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n      const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n      const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n      const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n      // Extend the native input width by the radius of the ripple\n      let ripplePadding = this._slider._rippleRadius;\n      // If one of the inputs is maximally sized (the value of both thumbs is\n      // equal to the min or max), make that input take up all of the width and\n      // make the other unselectable.\n      if (percentage === 1) {\n        ripplePadding = 48;\n      } else if (percentage === 0) {\n        ripplePadding = 0;\n      }\n      const width = maxWidth * percentage + ripplePadding;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = '0px';\n      if (this._isLeftThumb) {\n        this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n        this._hostElement.style.right = 'auto';\n      } else {\n        this._hostElement.style.left = 'auto';\n        this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      }\n    }\n    _updateStaticStyles() {\n      this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      sibling._updateMinMax();\n      if (this._isActive) {\n        sibling._updateWidthActive();\n      } else {\n        sibling._updateWidthInactive();\n      }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n      }\n    }\n    _setValue(value) {\n      super._setValue(value);\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n    static {\n      this.ɵfac = function MatSliderRangeThumb_Factory(t) {\n        return new (t || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSliderRangeThumb,\n        selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n        exportAs: [\"matSliderRangeThumb\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n          provide: MAT_SLIDER_RANGE_THUMB,\n          useExisting: MatSliderRangeThumb\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSliderRangeThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderModule = /*#__PURE__*/(() => {\n  class MatSliderModule {\n    static {\n      this.ɵfac = function MatSliderModule_Factory(t) {\n        return new (t || MatSliderModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSliderModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatRippleModule]\n      });\n    }\n  }\n  return MatSliderModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import {ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, signal} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DataItem} from \"../../../../core/models/common/data-item.model\";\nimport {Subject, takeUntil, tap} from \"rxjs\";\nimport {handleApiError} from \"../../../../core/helpers/rxjs.helper\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\ntype InputType =\n  'input' |\n  'select' |\n  'multiselect' |\n  'textarea' |\n  'password' |\n  'datepicker' |\n  'rangedatapicker' |\n  'radio' |\n  'checkbox' |\n  'toggle' |\n  'slider' |\n  null;\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent implements OnInit, OnDestroy{\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  @Input() className: string | undefined;\n  @Input() type: InputType = 'input';\n  @Input() appearance: 'fill' | 'outline' = 'outline';\n  @Input() placeholder: string | undefined;\n  @Input() hint: string | undefined;\n  @Input() icon: string | undefined;\n  @Input() label: string | undefined;\n  @Input() leftLabel: string | undefined;\n  @Input() rightLabel: string | undefined;\n  @Input() rows: number | undefined;\n  @Input() cols: number | undefined;\n  @Input() minDate: Date | undefined;\n  @Input() maxDate: Date | undefined;\n  @Input() formGroup: FormGroup | undefined;\n  @Input() controlName: string = 'inputControl';\n  @Input() dataItems: DataItem[] | undefined;\n  @Input() mode: 'inline' | 'block' | null = 'block';\n  @Input() sliderStep: number | undefined;\n  @Input() sliderStepSuffix: string | undefined;\n  @Input() leftValue: any | undefined;\n  @Input() rightValue: any | undefined;\n  @Input() align: 'left' | 'center' | 'right' = 'left';\n\n  internalFormGroup: FormGroup | undefined;\n\n  constructor(private snackBar: MatSnackBar) {\n  }\n\n  public ngOnInit(): void {\n    if (!this.formGroup) {\n      this.formGroup = new FormGroup({\n        inputControl: new FormControl(null)\n      });\n    }\n\n    if (['rangedatapicker','slider'].findIndex(x => x === this.type) > -1) {\n      this.internalFormGroup = new FormGroup({\n        left: new FormControl(this.leftValue),\n        right: new FormControl(this.rightValue)\n      });\n\n      this.internalFormGroup.valueChanges\n        .pipe(\n          takeUntil(this.ngUnsubscribe),\n          tap(() => {\n            this.currentControl.setValue(`${this.internalFormGroup!.get('left')?.value},${this.internalFormGroup!.get('right')?.value}`)\n          }),\n          handleApiError(this.snackBar),\n        ).subscribe();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  get currentControl(): any {\n    return this.formGroup?.get(this.controlName);\n  }\n\n  get currenValue(): any {\n    return this.formGroup?.get(this.controlName)?.value ?? undefined;\n  }\n\n  get isRequired(): boolean {\n    return this.currentControl?.hasValidator(Validators.required) ?? false;\n  }\n\n  get maxLength(): number | null {\n    const maxLengthValidator = this.currentControl?.validator ? this.currentControl.validator({} as AbstractControl) : null;\n    return maxLengthValidator && maxLengthValidator.maxLength ? maxLengthValidator.maxLength : null;\n  }\n\n  get minLength(): number | null {\n    const minLengthValidator = this.currentControl?.validator ? this.currentControl.validator({} as AbstractControl) : null;\n    return minLengthValidator && minLengthValidator.minLength ? minLengthValidator.maxLength : null;\n  }\n\n  get isDisabled(): boolean {\n    return this.currentControl.disabled ?? false;\n  }\n\n  public formatLabel(value: number): string {\n    if (value >= (this.sliderStep ?? 1)) {\n      return Math.round(value / (this.sliderStep ?? 1)) + (this.sliderStepSuffix ?? '');\n    }\n    return `${value}`;\n  }\n\n  protected readonly value = signal('');\n  hide = signal(true);\n\n  protected onInput(event: Event) {\n    this.value.set((event.target as HTMLInputElement).value);\n  }\n\n  clickEvent(event: MouseEvent) {\n    this.hide.set(!this.hide());\n    event.stopPropagation();\n  }\n}\n","<div *ngIf=\"!!formGroup\"\n     [ngClass]=\"className ? 'input-wrapper ' + className : 'input-wrapper'\"\n     [style]=\"'text-align: ' + align\"\n     style=\"font-size: 12px\"\n     [formGroup]=\"formGroup\">\n  <ng-container *ngIf=\"type === 'input'\">\n    <mat-form-field [appearance]=\"appearance\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <input\n        matInput\n        #input\n        [ngClass]=\"!!icon ? 'input-icon-wrapper' : ''\"\n        (input)=\"onInput($event)\"\n        [translation]=\"placeholder\" [translationAttr]=\"'placeholder'\"\n        [required]=\"!!isRequired\"\n        [formControlName]=\"controlName\">\n      <ng-container *ngIf=\"!!icon\">\n        <i [class]=\"icon + ' input-icon'\"></i>\n      </ng-container>\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n      <mat-hint align=\"end\" *ngIf=\"!!maxLength\" [ngClass]=\"{'error': currenValue?.length > maxLength}\">\n        {{currenValue?.length}}/{{maxLength}}\n      </mat-hint>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'select' || type === 'multiselect'\">\n    <mat-form-field [appearance]=\"appearance\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <mat-select\n        [ngClass]=\"!!icon ? 'input-icon-wrapper' : ''\"\n        [required]=\"isRequired\"\n        [multiple]=\"type === 'multiselect'\"\n        [formControlName]=\"controlName\">\n        <mat-option *ngFor=\"let item of dataItems; let i=index\" [value]=\"item.id\">\n          <span [translation]=\"item.name\"></span>\n        </mat-option>\n      </mat-select>\n      <ng-container *ngIf=\"!!icon\">\n        <i [class]=\"icon + ' input-icon'\"></i>\n      </ng-container>\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'textarea'\">\n    <mat-form-field [appearance]=\"appearance\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <textarea\n        matInput\n        #input\n        [ngClass]=\"!!icon ? 'input-icon-wrapper' : ''\"\n        (input)=\"onInput($event)\"\n        [translation]=\"placeholder\" [translationAttr]=\"'placeholder'\"\n        [required]=\"isRequired\"\n        [attr.rows]=\"rows\"\n        [attr.cols]=\"cols\"\n        [formControlName]=\"controlName\"></textarea>\n      <ng-container *ngIf=\"!!icon\">\n        <i [class]=\"icon + ' input-icon'\"></i>\n      </ng-container>\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n      <mat-hint align=\"end\" *ngIf=\"!!maxLength\" [ngClass]=\"{'error': currenValue?.length > maxLength}\">\n        {{currenValue?.length}}/{{maxLength}}\n      </mat-hint>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'password'\">\n    <mat-form-field [appearance]=\"appearance\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <input matInput #input (input)=\"onInput($event)\" [type]=\"hide() ? 'password' : 'text'\" [required]=\"isRequired\" [formControlName]=\"controlName\"/>\n      <button mat-icon-button matSuffix (click)=\"clickEvent($event)\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide()\">\n        <i [class.fa-eye]=\"!hide()\" [class.fa-eye-slash]=\"hide()\" class=\"fa-solid\"></i>\n      </button>\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n      <mat-hint align=\"end\" *ngIf=\"!!maxLength\" [ngClass]=\"{'error': currenValue?.length > maxLength}\">\n        {{currenValue?.length}}/{{maxLength}}\n      </mat-hint>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'datepicker'\">\n    <mat-form-field [appearance]=\"appearance\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <input matInput [matDatepicker]=\"picker\" [required]=\"isRequired\" [min]=\"minDate\" [max]=\"maxDate\" [formControlName]=\"controlName\">\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'rangedatapicker'\">\n    <mat-form-field [appearance]=\"appearance\" [formGroup]=\"internalFormGroup!\">\n      <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n      <mat-date-range-input [rangePicker]=\"picker\" [required]=\"isRequired\" [min]=\"minDate\" [max]=\"maxDate\" [formControlName]=\"controlName\">\n        <input\n          matStartDate\n          [translation]=\"placeholder\" [translationAttr]=\"'placeholder'\"\n          [formControlName]=\"'left'\">\n        <input\n          matEndDate\n          [translation]=\"placeholder\" [translationAttr]=\"'placeholder'\"\n          [formControlName]=\"'right'\">\n      </mat-date-range-input>\n      <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n    </mat-form-field>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'radio'\">\n    <mat-label *ngIf=\"!!label\"><span [translation]=\"label\"></span></mat-label>\n    <h1 translation=\"SELECT.SELECT_OPTION\"></h1>\n    <mat-radio-group aria-label=\"Select an option\" [required]=\"!!isRequired\" [formControlName]=\"controlName\">\n      <mat-radio-button\n        *ngFor=\"let item of dataItems; let i=index\"\n        [value]=\"item.id\"\n        [ngStyle]=\"mode === 'block' ? { 'display': 'block' } : mode === 'inline' ? { 'display': 'inline-block' } : {}\">\n        <span [translation]=\"item.name\"></span>\n      </mat-radio-button>\n    </mat-radio-group>\n    <mat-hint *ngIf=\"!!hint\"><span [translation]=\"hint\"></span></mat-hint>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'checkbox'\">\n    <mat-checkbox\n      [required]=\"!!isRequired\"\n      [formControlName]=\"controlName\"\n    ><span [translation]=\"label\"></span></mat-checkbox>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'toggle'\">\n    <mat-slide-toggle [formControlName]=\"controlName\">{{label}}</mat-slide-toggle>\n  </ng-container>\n\n  <ng-container *ngIf=\"type === 'slider'\">\n    <mat-slider\n      [attr.min]=\"minLength ?? null\"\n      [attr.max]=\"maxLength ?? null\"\n      [step]=\"sliderStep ?? 1\"\n      showTickMarks\n      discrete\n      [displayWith]=\"formatLabel\"\n      [formGroup]=\"internalFormGroup!\"\n    >\n      <input matSliderStartThumb [formControlName]=\"'left'\">\n      <input matSliderEndThumb [formControlName]=\"'right'\">\n    </mat-slider>\n  </ng-container>\n</div>\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, ViewChild, ContentChildren, Input, Output, Directive, forwardRef, inject, Injector, afterNextRender, Optional, Host, NgModule } from '@angular/core';\nimport { MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ActiveDescendantKeyManager, removeAriaReferencedId, addAriaReferencedId } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, group, animate } from '@angular/animations';\nimport { Subscription, Subject, defer, merge, of, fromEvent, Observable } from 'rxjs';\nimport { ESCAPE, hasModifierKey, UP_ARROW, ENTER, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, filter, map, tap, delay, take } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/bidi';\n\n// Animation values come from\n// TODO(mmalerba): Ideally find a way to import the values from MDC's code.\nconst _c0 = [\"panel\"];\nconst _c1 = [\"*\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 0);\n    i0.ɵɵlistener(\"@panelAnimation.done\", function MatAutocomplete_ng_template_0_Template_div_animation_panelAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._animationDone.next($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formFieldId_r3 = ctx.id;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-mdc-autocomplete-visible\", ctx_r1.showPanel)(\"mat-mdc-autocomplete-hidden\", !ctx_r1.showPanel)(\"mat-primary\", ctx_r1._color === \"primary\")(\"mat-accent\", ctx_r1._color === \"accent\")(\"mat-warn\", ctx_r1._color === \"warn\");\n    i0.ɵɵproperty(\"id\", ctx_r1.id)(\"@panelAnimation\", ctx_r1.isOpen ? \"visible\" : \"hidden\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby(formFieldId_r3));\n  }\n}\nconst panelAnimation = /*#__PURE__*/trigger('panelAnimation', [/*#__PURE__*/state('void, hidden', /*#__PURE__*/style({\n  opacity: 0,\n  transform: 'scaleY(0.8)'\n})), /*#__PURE__*/transition(':enter, hidden => visible', [/*#__PURE__*/group([/*#__PURE__*/animate('0.03s linear', /*#__PURE__*/style({\n  opacity: 1\n})), /*#__PURE__*/animate('0.12s cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/style({\n  transform: 'scaleY(1)'\n}))])]), /*#__PURE__*/transition(':leave, visible => hidden', [/*#__PURE__*/animate('0.075s linear', /*#__PURE__*/style({\n  opacity: 0\n}))])]);\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n  constructor( /** Reference to the autocomplete panel that emitted the event. */\n  source, /** Option that was selected. */\n  option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-autocomplete-default-options', {\n  providedIn: 'root',\n  factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    autoActiveFirstOption: false,\n    autoSelectActiveOption: false,\n    hideSingleSelectionIndicator: false,\n    requireSelection: false\n  };\n}\n/** Autocomplete component. */\nlet MatAutocomplete = /*#__PURE__*/(() => {\n  class MatAutocomplete {\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n      return this._isOpen && this.showPanel;\n    }\n    /** @docs-private Sets the theme color of the panel. */\n    _setColor(value) {\n      this._color = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n      this._classList = value;\n      this._elementRef.nativeElement.className = '';\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._syncParentProperties();\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n      if (this.options) {\n        for (const option of this.options) {\n          option._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    constructor(_changeDetectorRef, _elementRef, _defaults, platform) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._defaults = _defaults;\n      this._activeOptionChanges = Subscription.EMPTY;\n      /** Emits when the panel animation is done. Null if the panel doesn't animate. */\n      this._animationDone = new EventEmitter();\n      /** Whether the autocomplete panel should be visible, depending on option length. */\n      this.showPanel = false;\n      this._isOpen = false;\n      /** Function that maps an option's control value to its display value in the trigger. */\n      this.displayWith = null;\n      /** Event that is emitted whenever an option from the list is selected. */\n      this.optionSelected = new EventEmitter();\n      /** Event that is emitted when the autocomplete panel is opened. */\n      this.opened = new EventEmitter();\n      /** Event that is emitted when the autocomplete panel is closed. */\n      this.closed = new EventEmitter();\n      /** Emits whenever an option is activated. */\n      this.optionActivated = new EventEmitter();\n      /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n      this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n      // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n      // Safari using VoiceOver. We should occasionally check back to see whether the bug\n      // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n      // option altogether.\n      this.inertGroups = platform?.SAFARI || false;\n      this.autoActiveFirstOption = !!_defaults.autoActiveFirstOption;\n      this.autoSelectActiveOption = !!_defaults.autoSelectActiveOption;\n      this.requireSelection = !!_defaults.requireSelection;\n      this._hideSingleSelectionIndicator = this._defaults.hideSingleSelectionIndicator ?? false;\n    }\n    ngAfterContentInit() {\n      this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap().skipPredicate(this._skipPredicate);\n      this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n        if (this.isOpen) {\n          this.optionActivated.emit({\n            source: this,\n            option: this.options.toArray()[index] || null\n          });\n        }\n      });\n      // Set the initial visibility state.\n      this._setVisibility();\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._activeOptionChanges.unsubscribe();\n      this._animationDone.complete();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n      if (this.panel) {\n        this.panel.nativeElement.scrollTop = scrollTop;\n      }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n      return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n      this.showPanel = !!this.options.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n      const event = new MatAutocompleteSelectedEvent(this, option);\n      this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelExpression = labelId ? labelId + ' ' : '';\n      return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n    // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n    // recommendation.\n    //\n    // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n    // makes a few exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    //\n    // The user can focus disabled options using the keyboard, but the user cannot click disabled\n    // options.\n    _skipPredicate() {\n      return false;\n    }\n    static {\n      this.ɵfac = function MatAutocomplete_Factory(t) {\n        return new (t || MatAutocomplete)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatAutocomplete,\n        selectors: [[\"mat-autocomplete\"]],\n        contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n          }\n        },\n        viewQuery: function MatAutocomplete_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-autocomplete\"],\n        inputs: {\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          displayWith: \"displayWith\",\n          autoActiveFirstOption: [2, \"autoActiveFirstOption\", \"autoActiveFirstOption\", booleanAttribute],\n          autoSelectActiveOption: [2, \"autoSelectActiveOption\", \"autoSelectActiveOption\", booleanAttribute],\n          requireSelection: [2, \"requireSelection\", \"requireSelection\", booleanAttribute],\n          panelWidth: \"panelWidth\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          classList: [0, \"class\", \"classList\"],\n          hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute]\n        },\n        outputs: {\n          optionSelected: \"optionSelected\",\n          opened: \"opened\",\n          closed: \"closed\",\n          optionActivated: \"optionActivated\"\n        },\n        exportAs: [\"matAutocomplete\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_OPTION_PARENT_COMPONENT,\n          useExisting: MatAutocomplete\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 1,\n        vars: 0,\n        consts: [[\"panel\", \"\"], [\"role\", \"listbox\", 1, \"mat-mdc-autocomplete-panel\", \"mdc-menu-surface\", \"mdc-menu-surface--open\", 3, \"id\"]],\n        template: function MatAutocomplete_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 16, \"ng-template\");\n          }\n        },\n        styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape, var(--mat-app-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}\"],\n        encapsulation: 2,\n        data: {\n          animation: [panelAnimation]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatAutocomplete;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nlet MatAutocompleteOrigin = /*#__PURE__*/(() => {\n  class MatAutocompleteOrigin {\n    constructor( /** Reference to the element on which the directive is applied. */\n    elementRef) {\n      this.elementRef = elementRef;\n    }\n    static {\n      this.ɵfac = function MatAutocompleteOrigin_Factory(t) {\n        return new (t || MatAutocompleteOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatAutocompleteOrigin,\n        selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]],\n        exportAs: [\"matAutocompleteOrigin\"],\n        standalone: true\n      });\n    }\n  }\n  return MatAutocompleteOrigin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' + 'Make sure that the id passed to the `matAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-autocomplete-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY\n};\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nlet MatAutocompleteTrigger = /*#__PURE__*/(() => {\n  class MatAutocompleteTrigger {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n      this._element = _element;\n      this._overlay = _overlay;\n      this._viewContainerRef = _viewContainerRef;\n      this._zone = _zone;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dir = _dir;\n      this._formField = _formField;\n      this._document = _document;\n      this._viewportRuler = _viewportRuler;\n      this._defaults = _defaults;\n      this._componentDestroyed = false;\n      /** Whether or not the label state is being overridden. */\n      this._manuallyFloatingLabel = false;\n      /** Subscription to viewport size changes. */\n      this._viewportSubscription = Subscription.EMPTY;\n      /** Implements BreakpointObserver to be used to detect handset landscape */\n      this._breakpointObserver = inject(BreakpointObserver);\n      this._handsetLandscapeSubscription = Subscription.EMPTY;\n      /**\n       * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n       * closed autocomplete from being reopened if the user switches to another browser tab and then\n       * comes back.\n       */\n      this._canOpenOnNextFocus = true;\n      /** Stream of keyboard events that can close the panel. */\n      this._closeKeyEventStream = new Subject();\n      /**\n       * Event handler for when the window is blurred. Needs to be an\n       * arrow function in order to preserve the context.\n       */\n      this._windowBlurHandler = () => {\n        // If the user blurred the window while the autocomplete is focused, it means that it'll be\n        // refocused when they come back. In this case we want to skip the first focus event, if the\n        // pane was closed, in order to avoid reopening it unintentionally.\n        this._canOpenOnNextFocus = this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n      };\n      /** `View -> model callback called when value changes` */\n      this._onChange = () => {};\n      /** `View -> model callback called when autocomplete has been touched` */\n      this._onTouched = () => {};\n      /**\n       * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n       * will render the panel underneath the trigger if there is enough space for it to fit in\n       * the viewport, otherwise the panel will be shown above it. If the position is set to\n       * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n       * whether it fits completely in the viewport.\n       */\n      this.position = 'auto';\n      /**\n       * `autocomplete` attribute to be set on the input element.\n       * @docs-private\n       */\n      this.autocompleteAttribute = 'off';\n      this._initialized = new Subject();\n      this._injector = inject(Injector);\n      /** Class to apply to the panel when it's above the input. */\n      this._aboveClass = 'mat-mdc-autocomplete-panel-above';\n      this._overlayAttached = false;\n      /** Stream of changes to the selection state of the autocomplete options. */\n      this.optionSelections = defer(() => {\n        const options = this.autocomplete ? this.autocomplete.options : null;\n        if (options) {\n          return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n        }\n        // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n        // Return a stream that we'll replace with the real one once everything is in place.\n        return this._initialized.pipe(switchMap(() => this.optionSelections));\n      });\n      /** Handles keyboard events coming from the overlay panel. */\n      this._handlePanelKeydown = event => {\n        // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n        // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n        if (event.keyCode === ESCAPE && !hasModifierKey(event) || event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey')) {\n          // If the user had typed something in before we autoselected an option, and they decided\n          // to cancel the selection, restore the input value to the one they had typed in.\n          if (this._pendingAutoselectedOption) {\n            this._updateNativeInputValue(this._valueBeforeAutoSelection ?? '');\n            this._pendingAutoselectedOption = null;\n          }\n          this._closeKeyEventStream.next();\n          this._resetActiveItem();\n          // We need to stop propagation, otherwise the event will eventually\n          // reach the input itself and cause the overlay to be reopened.\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      };\n      /**\n       * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n       * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n       * panel. Track the modal we have changed so we can undo the changes on destroy.\n       */\n      this._trackedModal = null;\n      this._scrollStrategy = scrollStrategy;\n    }\n    ngAfterViewInit() {\n      this._initialized.next();\n      this._initialized.complete();\n      const window = this._getWindow();\n      if (typeof window !== 'undefined') {\n        this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n      }\n    }\n    ngOnChanges(changes) {\n      if (changes['position'] && this._positionStrategy) {\n        this._setStrategyPositions(this._positionStrategy);\n        if (this.panelOpen) {\n          this._overlayRef.updatePosition();\n        }\n      }\n    }\n    ngOnDestroy() {\n      const window = this._getWindow();\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('blur', this._windowBlurHandler);\n      }\n      this._handsetLandscapeSubscription.unsubscribe();\n      this._viewportSubscription.unsubscribe();\n      this._componentDestroyed = true;\n      this._destroyPanel();\n      this._closeKeyEventStream.complete();\n      this._clearFromModal();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n      return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n      this._openPanelInternal();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n      this._resetLabel();\n      if (!this._overlayAttached) {\n        return;\n      }\n      if (this.panelOpen) {\n        // Only emit if the panel was visible.\n        // `afterNextRender` always runs outside of the Angular zone, so all the subscriptions from\n        // `_subscribeToClosingActions()` are also outside of the Angular zone.\n        // We should manually run in Angular zone to update UI after panel closing.\n        this._zone.run(() => {\n          this.autocomplete.closed.emit();\n        });\n      }\n      // Only reset if this trigger is the latest one that opened the\n      // autocomplete since another may have taken it over.\n      if (this.autocomplete._latestOpeningTrigger === this) {\n        this.autocomplete._isOpen = false;\n        this.autocomplete._latestOpeningTrigger = null;\n      }\n      this._overlayAttached = false;\n      this._pendingAutoselectedOption = null;\n      if (this._overlayRef && this._overlayRef.hasAttached()) {\n        this._overlayRef.detach();\n        this._closingActionsSubscription.unsubscribe();\n      }\n      this._updatePanelState();\n      // Note that in some cases this can end up being called after the component is destroyed.\n      // Add a check to ensure that we don't try to run change detection on a destroyed view.\n      if (!this._componentDestroyed) {\n        // We need to trigger change detection manually, because\n        // `fromEvent` doesn't seem to do it at the proper time.\n        // This ensures that the label is reset when the\n        // user clicks outside.\n        this._changeDetectorRef.detectChanges();\n      }\n      // Remove aria-owns attribute when the autocomplete is no longer visible.\n      if (this._trackedModal) {\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', this.autocomplete.id);\n      }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n      if (this._overlayAttached) {\n        this._overlayRef.updatePosition();\n      }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n      return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) : of()).pipe(\n      // Normalize the output so we return a consistent type.\n      map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n      if (this.autocomplete && this.autocomplete._keyManager) {\n        return this.autocomplete._keyManager.activeItem;\n      }\n      return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n      return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n        // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n        // fall back to check the first element in the path of the click event.\n        const clickTarget = _getEventTarget(event);\n        const formField = this._formField ? this._formField.getConnectedOverlayOrigin().nativeElement : null;\n        const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n        return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n        // Normally focus moves inside `mousedown` so this condition will almost always be\n        // true. Its main purpose is to handle the case where the input is focused from an\n        // outside click which propagates up to the `body` listener within the same sequence\n        // and causes the panel to close immediately (see #3106).\n        this._document.activeElement !== this._element.nativeElement && (!formField || !formField.contains(clickTarget)) && (!customOrigin || !customOrigin.contains(clickTarget)) && !!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget);\n      }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n      Promise.resolve(null).then(() => this._assignOptionValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      const hasModifier = hasModifierKey(event);\n      // Prevent the default action on all escape key presses. This is here primarily to bring IE\n      // in line with other browsers. By default, pressing escape on IE will cause it to revert\n      // the input value to the one that it had on focus, however it won't dispatch any events\n      // which means that the model value will be out of sync with the view.\n      if (keyCode === ESCAPE && !hasModifier) {\n        event.preventDefault();\n      }\n      this._valueOnLastKeydown = this._element.nativeElement.value;\n      if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n        this.activeOption._selectViaInteraction();\n        this._resetActiveItem();\n        event.preventDefault();\n      } else if (this.autocomplete) {\n        const prevActiveItem = this.autocomplete._keyManager.activeItem;\n        const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n        if (keyCode === TAB || isArrowKey && !hasModifier && this.panelOpen) {\n          this.autocomplete._keyManager.onKeydown(event);\n        } else if (isArrowKey && this._canOpen()) {\n          this._openPanelInternal(this._valueOnLastKeydown);\n        }\n        if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n          this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n          if (this.autocomplete.autoSelectActiveOption && this.activeOption) {\n            if (!this._pendingAutoselectedOption) {\n              this._valueBeforeAutoSelection = this._valueOnLastKeydown;\n            }\n            this._pendingAutoselectedOption = this.activeOption;\n            this._assignOptionValue(this.activeOption.value);\n          }\n        }\n      }\n    }\n    _handleInput(event) {\n      let target = event.target;\n      let value = target.value;\n      // Based on `NumberValueAccessor` from forms.\n      if (target.type === 'number') {\n        value = value == '' ? null : parseFloat(value);\n      }\n      // If the input has a placeholder, IE will fire the `input` event on page load,\n      // focus and blur, in addition to when the user actually changed the value. To\n      // filter out all of the extra events, we save the value on focus and between\n      // `input` events, and we check whether it changed.\n      // See: https://connect.microsoft.com/IE/feedback/details/885747/\n      if (this._previousValue !== value) {\n        this._previousValue = value;\n        this._pendingAutoselectedOption = null;\n        // If selection is required we don't write to the CVA while the user is typing.\n        // At the end of the selection either the user will have picked something\n        // or we'll reset the value back to null.\n        if (!this.autocomplete || !this.autocomplete.requireSelection) {\n          this._onChange(value);\n        }\n        if (!value) {\n          this._clearPreviousSelectedOption(null, false);\n        } else if (this.panelOpen && !this.autocomplete.requireSelection) {\n          // Note that we don't reset this when `requireSelection` is enabled,\n          // because the option will be reset when the panel is closed.\n          const selectedOption = this.autocomplete.options?.find(option => option.selected);\n          if (selectedOption) {\n            const display = this._getDisplayValue(selectedOption.value);\n            if (value !== display) {\n              selectedOption.deselect(false);\n            }\n          }\n        }\n        if (this._canOpen() && this._document.activeElement === event.target) {\n          // When the `input` event fires, the input's value will have already changed. This means\n          // that if we take the `this._element.nativeElement.value` directly, it'll be one keystroke\n          // behind. This can be a problem when the user selects a value, changes a character while\n          // the input still has focus and then clicks away (see #28432). To work around it, we\n          // capture the value in `keydown` so we can use it here.\n          const valueOnAttach = this._valueOnLastKeydown ?? this._element.nativeElement.value;\n          this._valueOnLastKeydown = null;\n          this._openPanelInternal(valueOnAttach);\n        }\n      }\n    }\n    _handleFocus() {\n      if (!this._canOpenOnNextFocus) {\n        this._canOpenOnNextFocus = true;\n      } else if (this._canOpen()) {\n        this._previousValue = this._element.nativeElement.value;\n        this._attachOverlay(this._previousValue);\n        this._floatLabel(true);\n      }\n    }\n    _handleClick() {\n      if (this._canOpen() && !this.panelOpen) {\n        this._openPanelInternal();\n      }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n      if (this._formField && this._formField.floatLabel === 'auto') {\n        if (shouldAnimate) {\n          this._formField._animateAndLockLabel();\n        } else {\n          this._formField.floatLabel = 'always';\n        }\n        this._manuallyFloatingLabel = true;\n      }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n      if (this._manuallyFloatingLabel) {\n        if (this._formField) {\n          this._formField.floatLabel = 'auto';\n        }\n        this._manuallyFloatingLabel = false;\n      }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n      const initialRender = new Observable(subscriber => {\n        afterNextRender(() => {\n          subscriber.next();\n        }, {\n          injector: this._injector\n        });\n      });\n      const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0));\n      // When the options are initially rendered, and when the option list changes...\n      return merge(initialRender, optionChanges).pipe(\n      // create a new stream of panelClosingActions, replacing any previous streams\n      // that were created, and flatten it so our stream only emits closing events...\n      switchMap(() => this._zone.run(() => {\n        // `afterNextRender` always runs outside of the Angular zone, thus we have to re-enter\n        // the Angular zone. This will lead to change detection being called outside of the Angular\n        // zone and the `autocomplete.opened` will also emit outside of the Angular.\n        const wasOpen = this.panelOpen;\n        this._resetActiveItem();\n        this._updatePanelState();\n        this._changeDetectorRef.detectChanges();\n        if (this.panelOpen) {\n          this._overlayRef.updatePosition();\n        }\n        if (wasOpen !== this.panelOpen) {\n          // If the `panelOpen` state changed, we need to make sure to emit the `opened` or\n          // `closed` event, because we may not have emitted it. This can happen\n          // - if the users opens the panel and there are no options, but the\n          //   options come in slightly later or as a result of the value changing,\n          // - if the panel is closed after the user entered a string that did not match any\n          //   of the available options,\n          // - if a valid string is entered after an invalid one.\n          if (this.panelOpen) {\n            this._emitOpened();\n          } else {\n            this.autocomplete.closed.emit();\n          }\n        }\n        return this.panelClosingActions;\n      })),\n      // when the first closing event occurs...\n      take(1))\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n    }\n    /**\n     * Emits the opened event once it's known that the panel will be shown and stores\n     * the state of the trigger right before the opening sequence was finished.\n     */\n    _emitOpened() {\n      this.autocomplete.opened.emit();\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n      if (this._overlayRef) {\n        this.closePanel();\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n      }\n    }\n    /** Given a value, returns the string that should be shown within the input. */\n    _getDisplayValue(value) {\n      const autocomplete = this.autocomplete;\n      return autocomplete && autocomplete.displayWith ? autocomplete.displayWith(value) : value;\n    }\n    _assignOptionValue(value) {\n      const toDisplay = this._getDisplayValue(value);\n      if (value == null) {\n        this._clearPreviousSelectedOption(null, false);\n      }\n      // Simply falling back to an empty string if the display value is falsy does not work properly.\n      // The display value can also be the number zero and shouldn't fall back to an empty string.\n      this._updateNativeInputValue(toDisplay != null ? toDisplay : '');\n    }\n    _updateNativeInputValue(value) {\n      // If it's used within a `MatFormField`, we should set it through the property so it can go\n      // through change detection.\n      if (this._formField) {\n        this._formField._control.value = value;\n      } else {\n        this._element.nativeElement.value = value;\n      }\n      this._previousValue = value;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n      const panel = this.autocomplete;\n      const toSelect = event ? event.source : this._pendingAutoselectedOption;\n      if (toSelect) {\n        this._clearPreviousSelectedOption(toSelect);\n        this._assignOptionValue(toSelect.value);\n        // TODO(crisbeto): this should wait until the animation is done, otherwise the value\n        // gets reset while the panel is still animating which looks glitchy. It'll likely break\n        // some tests to change it at this point.\n        this._onChange(toSelect.value);\n        panel._emitSelectEvent(toSelect);\n        this._element.nativeElement.focus();\n      } else if (panel.requireSelection && this._element.nativeElement.value !== this._valueOnAttach) {\n        this._clearPreviousSelectedOption(null);\n        this._assignOptionValue(null);\n        // Wait for the animation to finish before clearing the form control value, otherwise\n        // the options might change while the animation is running which looks glitchy.\n        if (panel._animationDone) {\n          panel._animationDone.pipe(take(1)).subscribe(() => this._onChange(null));\n        } else {\n          this._onChange(null);\n        }\n      }\n      this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip, emitEvent) {\n      // Null checks are necessary here, because the autocomplete\n      // or its options may not have been assigned yet.\n      this.autocomplete?.options?.forEach(option => {\n        if (option !== skip && option.selected) {\n          option.deselect(emitEvent);\n        }\n      });\n    }\n    _openPanelInternal(valueOnAttach = this._element.nativeElement.value) {\n      this._attachOverlay(valueOnAttach);\n      this._floatLabel();\n      // Add aria-owns attribute when the autocomplete becomes visible.\n      if (this._trackedModal) {\n        const panelId = this.autocomplete.id;\n        addAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      }\n    }\n    _attachOverlay(valueOnAttach) {\n      if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatAutocompleteMissingPanelError();\n      }\n      let overlayRef = this._overlayRef;\n      if (!overlayRef) {\n        this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n          id: this._formField?.getLabelId()\n        });\n        overlayRef = this._overlay.create(this._getOverlayConfig());\n        this._overlayRef = overlayRef;\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && overlayRef) {\n            overlayRef.updateSize({\n              width: this._getPanelWidth()\n            });\n          }\n        });\n        // Subscribe to the breakpoint events stream to detect when screen is in\n        // handsetLandscape.\n        this._handsetLandscapeSubscription = this._breakpointObserver.observe(Breakpoints.HandsetLandscape).subscribe(result => {\n          const isHandsetLandscape = result.matches;\n          // Check if result.matches Breakpoints.HandsetLandscape. Apply HandsetLandscape\n          // settings to prevent overlay cutoff in that breakpoint. Fixes b/284148377\n          if (isHandsetLandscape) {\n            this._positionStrategy.withFlexibleDimensions(true).withGrowAfterOpen(true).withViewportMargin(8);\n          } else {\n            this._positionStrategy.withFlexibleDimensions(false).withGrowAfterOpen(false).withViewportMargin(0);\n          }\n        });\n      } else {\n        // Update the trigger, panel width and direction, in case anything has changed.\n        this._positionStrategy.setOrigin(this._getConnectedElement());\n        overlayRef.updateSize({\n          width: this._getPanelWidth()\n        });\n      }\n      if (overlayRef && !overlayRef.hasAttached()) {\n        overlayRef.attach(this._portal);\n        this._valueOnAttach = valueOnAttach;\n        this._valueOnLastKeydown = null;\n        this._closingActionsSubscription = this._subscribeToClosingActions();\n      }\n      const wasOpen = this.panelOpen;\n      this.autocomplete._isOpen = this._overlayAttached = true;\n      this.autocomplete._latestOpeningTrigger = this;\n      this.autocomplete._setColor(this._formField?.color);\n      this._updatePanelState();\n      this._applyModalPanelOwnership();\n      // We need to do an extra `panelOpen` check in here, because the\n      // autocomplete won't be shown if there are no options.\n      if (this.panelOpen && wasOpen !== this.panelOpen) {\n        this._emitOpened();\n      }\n    }\n    /** Updates the panel's visibility state and any trigger state tied to id. */\n    _updatePanelState() {\n      this.autocomplete._setVisibility();\n      // Note that here we subscribe and unsubscribe based on the panel's visiblity state,\n      // because the act of subscribing will prevent events from reaching other overlays and\n      // we don't want to block the events if there are no options.\n      if (this.panelOpen) {\n        const overlayRef = this._overlayRef;\n        if (!this._keydownSubscription) {\n          // Use the `keydownEvents` in order to take advantage of\n          // the overlay event targeting provided by the CDK overlay.\n          this._keydownSubscription = overlayRef.keydownEvents().subscribe(this._handlePanelKeydown);\n        }\n        if (!this._outsideClickSubscription) {\n          // Subscribe to the pointer events stream so that it doesn't get picked up by other overlays.\n          // TODO(crisbeto): we should switch `_getOutsideClickStream` eventually to use this stream,\n          // but the behvior isn't exactly the same and it ends up breaking some internal tests.\n          this._outsideClickSubscription = overlayRef.outsidePointerEvents().subscribe();\n        }\n      } else {\n        this._keydownSubscription?.unsubscribe();\n        this._outsideClickSubscription?.unsubscribe();\n        this._keydownSubscription = this._outsideClickSubscription = null;\n      }\n    }\n    _getOverlayConfig() {\n      return new OverlayConfig({\n        positionStrategy: this._getOverlayPosition(),\n        scrollStrategy: this._scrollStrategy(),\n        width: this._getPanelWidth(),\n        direction: this._dir ?? undefined,\n        panelClass: this._defaults?.overlayPanelClass\n      });\n    }\n    _getOverlayPosition() {\n      // Set default Overlay Position\n      const strategy = this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(false).withPush(false);\n      this._setStrategyPositions(strategy);\n      this._positionStrategy = strategy;\n      return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n      // Note that we provide horizontal fallback positions, even though by default the dropdown\n      // width matches the input, because consumers can override the width. See #18854.\n      const belowPositions = [{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }];\n      // The overlay edge connected to the trigger should have squared corners, while\n      // the opposite end has rounded corners. We apply a CSS class to swap the\n      // border-radius based on the overlay position.\n      const panelClass = this._aboveClass;\n      const abovePositions = [{\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        panelClass\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        panelClass\n      }];\n      let positions;\n      if (this.position === 'above') {\n        positions = abovePositions;\n      } else if (this.position === 'below') {\n        positions = belowPositions;\n      } else {\n        positions = [...belowPositions, ...abovePositions];\n      }\n      positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n      if (this.connectedTo) {\n        return this.connectedTo.elementRef;\n      }\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n      return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n      return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Reset the active item to -1. This is so that pressing arrow keys will activate the correct\n     * option.\n     *\n     * If the consumer opted-in to automatically activatating the first option, activate the first\n     * *enabled* option.\n     */\n    _resetActiveItem() {\n      const autocomplete = this.autocomplete;\n      if (autocomplete.autoActiveFirstOption) {\n        // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n        // because it activates the first option that passes the skip predicate, rather than the\n        // first *enabled* option.\n        let firstEnabledOptionIndex = -1;\n        for (let index = 0; index < autocomplete.options.length; index++) {\n          const option = autocomplete.options.get(index);\n          if (!option.disabled) {\n            firstEnabledOptionIndex = index;\n            break;\n          }\n        }\n        autocomplete._keyManager.setActiveItem(firstEnabledOptionIndex);\n      } else {\n        autocomplete._keyManager.setActiveItem(-1);\n      }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n      const element = this._element.nativeElement;\n      return !element.readOnly && !element.disabled && !this.autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document?.defaultView || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n      // Given that we are not actually focusing active options, we must manually adjust scroll\n      // to reveal options below the fold. First, we find the offset of the option from the top\n      // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n      // the panel height + the option height, so the active option will be just visible at the\n      // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n      // will become the offset. If that offset is visible within the panel already, the scrollTop is\n      // not adjusted.\n      const autocomplete = this.autocomplete;\n      const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n      if (index === 0 && labelCount === 1) {\n        // If we've got one group label before the option and we're at the top option,\n        // scroll the list to the top. This is better UX than scrolling the list to the\n        // top of the option, because it allows the user to read the top group's label.\n        autocomplete._setScrollTop(0);\n      } else if (autocomplete.panel) {\n        const option = autocomplete.options.toArray()[index];\n        if (option) {\n          const element = option._getHostElement();\n          const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n          autocomplete._setScrollTop(newScrollPosition);\n        }\n      }\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `LiveAnnouncer` and any other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modal = this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      if (!modal) {\n        // Most commonly, the autocomplete trigger is not inside a modal.\n        return;\n      }\n      const panelId = this.autocomplete.id;\n      if (this._trackedModal) {\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      }\n      addAriaReferencedId(modal, 'aria-owns', panelId);\n      this._trackedModal = modal;\n    }\n    /** Clears the references to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n      if (this._trackedModal) {\n        const panelId = this.autocomplete.id;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n      }\n    }\n    static {\n      this.ɵfac = function MatAutocompleteTrigger_Factory(t) {\n        return new (t || MatAutocompleteTrigger)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i3.ViewportRuler), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatAutocompleteTrigger,\n        selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-autocomplete-trigger\"],\n        hostVars: 7,\n        hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() {\n              return ctx._handleFocus();\n            })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() {\n              return ctx._onTouched();\n            })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) {\n              return ctx._handleInput($event);\n            })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            })(\"click\", function MatAutocompleteTrigger_click_HostBindingHandler() {\n              return ctx._handleClick();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-controls\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", ctx.autocompleteDisabled ? null : \"listbox\");\n          }\n        },\n        inputs: {\n          autocomplete: [0, \"matAutocomplete\", \"autocomplete\"],\n          position: [0, \"matAutocompletePosition\", \"position\"],\n          connectedTo: [0, \"matAutocompleteConnectedTo\", \"connectedTo\"],\n          autocompleteAttribute: [0, \"autocomplete\", \"autocompleteAttribute\"],\n          autocompleteDisabled: [2, \"matAutocompleteDisabled\", \"autocompleteDisabled\", booleanAttribute]\n        },\n        exportAs: [\"matAutocompleteTrigger\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatAutocompleteTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatAutocompleteModule = /*#__PURE__*/(() => {\n  class MatAutocompleteModule {\n    static {\n      this.ɵfac = function MatAutocompleteModule_Factory(t) {\n        return new (t || MatAutocompleteModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatAutocompleteModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, CdkScrollableModule, MatOptionModule, MatCommonModule]\n      });\n    }\n  }\n  return MatAutocompleteModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n","import { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { NgModule } from \"@angular/core\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { InputComponent } from \"./input/input.component\";\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { provideNativeDateAdapter } from \"@angular/material/core\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { AppCommonModule } from \"../common-app/app-common.module\";\nimport {MatAutocomplete, MatAutocompleteModule} from \"@angular/material/autocomplete\";\n\n@NgModule({\n  declarations: [\n    InputComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    AppCommonModule,\n    MatAutocomplete,\n    MatAutocompleteModule\n  ],\n  providers: [provideNativeDateAdapter()],\n  exports: [\n    InputComponent\n  ]\n})\nexport class AppCommonInputModule {}\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\nlet MatDivider = /*#__PURE__*/(() => {\n  class MatDivider {\n    constructor() {\n      this._vertical = false;\n      this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n      return this._vertical;\n    }\n    set vertical(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n      return this._inset;\n    }\n    set inset(value) {\n      this._inset = coerceBooleanProperty(value);\n    }\n    static {\n      this.ɵfac = function MatDivider_Factory(t) {\n        return new (t || MatDivider)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDivider,\n        selectors: [[\"mat-divider\"]],\n        hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"],\n        hostVars: 7,\n        hostBindings: function MatDivider_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n            i0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n          }\n        },\n        inputs: {\n          vertical: \"vertical\",\n          inset: \"inset\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDivider_Template(rf, ctx) {},\n        styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDivider;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDividerModule = /*#__PURE__*/(() => {\n  class MatDividerModule {\n    static {\n      this.ɵfac = function MatDividerModule_Factory(t) {\n        return new (t || MatDividerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatDividerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatDividerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-forgot',\n  templateUrl: './auth-forgot.component.html',\n  styleUrl: '../auth-area/auth-area.component.scss',\n})\nexport class AuthForgotComponent {\n\n}\n","<div class=\"auth-container\">\n  <div class=\"auth-box auth-box-login\">\n\n    <h2 class=\"mb-0p\">Cash in your wallet</h2>\n    <span class=\"hint\" translation=\"AUTH.BROKEN_HONKLER\"></span>\n\n    <div class=\"p-10p\">\n      <app-input type=\"input\" [label]=\"'AUTH.LOGIN'\"></app-input>\n      <app-input type=\"input\" [label]=\"'AUTH.EMAIL'\"></app-input>\n    </div>\n\n    <div class=\"d-flex d-flex-jc-end mb-30p mt-10p\">\n      <button mat-flat-button color=\"primary\" translation=\"AUTH.LETS_HONK\"></button>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"mt-30p\">\n      <button mat-button routerLink=\"/auth/login\" translation=\"AUTH.BACK_TO_LOGIN\"></button>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { LocalizationService } from \"../../../../core/services/localization.service\";\nimport { AuthService } from \"../../../../core/services/auth.service\";\n\n@Component({\n  selector: 'app-auth-sign-in',\n  templateUrl: './auth-sign-in.component.html',\n  styleUrl: '../auth-area/auth-area.component.scss',\n})\nexport class AuthSignInComponent implements OnInit {\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  loginForm: FormGroup | undefined;\n\n  constructor(\n    private readonly snackBar: MatSnackBar,\n    private fb: FormBuilder,\n    private readonly localizationService: LocalizationService,\n    private readonly authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      login: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      rememberMe: [false]\n    });\n  }\n\n  public login(): void {\n    if (!this.loginForm!.valid) {\n      Object.keys(this.loginForm!.controls).forEach(key => {\n        const control = this.loginForm!.get(key);\n        if (control) {\n          control.markAsTouched();\n        }\n      });\n      this.snackBar.open(this.localizationService?.getTranslation('ERROR.FORM_VALIDATION') ?? 'ERROR', 'Close', { duration: 3000 });\n      return;\n    }\n\n    this.authService.login(\n      this.loginForm!.value.login,\n      this.loginForm!.value.password,\n      this.loginForm!.value.rememberMe,\n      this.ngUnsubscribe);\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"auth-box auth-box-login\" *ngIf=\"!!loginForm\">\n    <h2 class=\"mb-0p\">Cash in your wallet</h2>\n    <span class=\"hint\" translation=\"AUTH.GREETINGS\"></span>\n\n    <form [formGroup]=\"loginForm\">\n      <div class=\"p-10p\">\n        <app-input type=\"input\" [label]=\"'AUTH.LOGIN'\" [formGroup]=\"loginForm\" controlName=\"login\"></app-input>\n        <app-input type=\"password\" [label]=\"'AUTH.PASSWORD'\" [formGroup]=\"loginForm\" controlName=\"password\"></app-input>\n        <app-input type=\"checkbox\" [label]=\"'AUTH.REMEMBER_ME'\" [formGroup]=\"loginForm\" controlName=\"rememberMe\"></app-input>\n      </div>\n\n      <div class=\"d-flex d-flex-jc-space-between mb-30p mt-10p\">\n        <button mat-button routerLink=\"/auth/forgot\" translation=\"AUTH.FORGOT_PASSWORD\"></button>\n        <button mat-flat-button color=\"primary\" (click)=\"login()\" translation=\"AUTH.LETS_HONK\"></button>\n      </div>\n    </form>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"mt-30p\">\n      <button mat-button routerLink=\"/auth/sign-in\" translation=\"AUTH.BECOME_HONKLER\"></button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-sign-up',\n  templateUrl: './auth-sign-up.component.html',\n  styleUrl: '../auth-area/auth-area.component.scss',\n})\nexport class AuthSignUpComponent {\n\n}\n","<div class=\"auth-container\">\n  <div class=\"auth-box auth-box-register\">\n    <h2 class=\"mb-0p\">Cash in your wallet</h2>\n    <span class=\"hint\" translation=\"AUTH.BECOME_HONKLER\"></span>\n\n    <div class=\"auth-grid-container\">\n      <app-input type=\"input\" [label]=\"'AUTH.LOGIN'\" className=\"grid-item\"></app-input>\n      <app-input type=\"select\" [label]=\"'AUTH.COUNTRY'\" [dataItems]=\"[]\" className=\"grid-item\"></app-input>\n      <app-input type=\"input\" [label]=\"'AUTH.EMAIL'\" className=\"grid-item\"></app-input>\n      <app-input type=\"input\" [label]=\"'AUTH.EMAIL_AGAIN'\" className=\"grid-item\"></app-input>\n      <app-input type=\"password\" [label]=\"'AUTH.PASSWORD'\" className=\"grid-item\"></app-input>\n      <app-input type=\"password\" [label]=\"'AUTH.CONFIRM_PASSWORD'\" className=\"grid-item\"></app-input>\n      <app-input type=\"input\" [label]=\"'AUTH.FULL_NAME'\" className=\"grid-item\"></app-input>\n      <app-input type=\"datepicker\" [label]=\"'AUTH.TODAYS_DATE'\" className=\"grid-item\"></app-input>\n      <app-input type=\"checkbox\" [label]=\"'AUTH.NO_COMPLAINTS'\" className=\"grid-item\"></app-input>\n    </div>\n\n    <div class=\"d-flex d-flex-jc-end mb-30p mt-10p\">\n      <button mat-flat-button color=\"primary\" translation=\"AUTH.LETS_HONK\"></button>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"mt-30p\">\n      <button mat-button routerLink=\"/auth/sign-in\" translation=\"AUTH.BACK_TO_LOGIN\"></button>\n    </div>\n  </div>\n</div>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-restore',\n  templateUrl: './auth-restore.component.html',\n  styleUrl: '../auth-area/auth-area.component.scss'\n})\nexport class AuthRestoreComponent {\n\n}\n","<div class=\"auth-container\">\n  <div class=\"auth-box auth-box-login\">\n    <h2 class=\"mb-0p\">Cash in your wallet</h2>\n    <span class=\"hint\" translation=\"AUTH.RESET_YOUR_HONK\"></span>\n\n    <div class=\"p-10p\">\n      <app-input type=\"input\" [label]=\"'AUTH.LOGIN'\"></app-input>\n      <app-input type=\"input\" [label]=\"'AUTH.EMAIL'\"></app-input>\n      <app-input type=\"password\" [label]=\"'AUTH.NEW_PASSWORD'\"></app-input>\n      <app-input type=\"password\" [label]=\"'AUTH.CONFIRM_PASSWORD'\"></app-input>\n    </div>\n\n    <div class=\"d-flex d-flex-jc-end mb-30p mt-10p\">\n      <button mat-flat-button color=\"primary\" translation=\"AUTH.RESET_HONK\"></button>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"mt-30p\">\n      <button mat-button routerLink=\"/auth/login\" translation=\"AUTH.BACK_TO_LOGIN\"></button>\n    </div>\n  </div>\n</div>\n\n\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { AuthAreaComponent } from \"./auth-area/auth-area.component\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { AppCommonInputModule } from \"../../common/common-input/app-common-input.module\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { AuthForgotComponent } from \"./auth-forgot/auth-forgot.component\";\nimport { AppCommonModule } from \"../../common/common-app/app-common.module\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {AuthSignInComponent} from \"./auth-sign-in/auth-sign-in.component\";\nimport {AuthSignUpComponent} from \"./auth-sign-up/auth-sign-up.component\";\nimport {AuthRestoreComponent} from \"./auth-restore/auth-restore.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthAreaComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'sign-in' },\n      { path: 'sign-in', component: AuthSignInComponent },\n      { path: 'sign-up', component: AuthSignUpComponent },\n      { path: 'forgot', component: AuthForgotComponent },\n      { path: 'restore', component: AuthRestoreComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    AuthAreaComponent,\n    AuthSignInComponent,\n    AuthSignUpComponent,\n    AuthForgotComponent,\n    AuthRestoreComponent\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    ReactiveFormsModule,\n    AppCommonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatGridListModule,\n    AppCommonInputModule,\n    MatDividerModule\n  ],\n  exports: [\n    AuthAreaComponent,\n    AuthSignInComponent,\n    AuthSignUpComponent,\n    AuthForgotComponent,\n    AuthRestoreComponent,\n    RouterModule\n  ]\n})\nexport class AuthAreaModule {}\n"],"mappings":"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","names":["SingleBoxSharedResizeObserver","_box","Subject","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","inject","NgZone","options","box","ɵɵdefineInjectable","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","rf","ctx","ɵɵelement","MatFormField_ng_template_0_Conditional_0_Template","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","ɵɵattribute","ɵɵadvance","ɵɵconditional","MatFormField_ng_template_0_Template","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","labelTemplate_r3","ɵɵreference","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_16_Template","MatFormField_Case_17_Conditional_1_Template","ɵɵtext","ɵɵtextInterpolate","MatFormField_Case_17_Template","MatLabel","ɵɵdefineDirective","MAT_ERROR","InjectionToken","nextUniqueId$1","MatHint","ɵɵdefineDirective","rf","ctx","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","MAT_PREFIX","InjectionToken","MAT_SUFFIX","InjectionToken","MatSuffix","value","ɵɵdefineDirective","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","MatFormFieldFloatingLabel","_elementRef","inject","SharedResizeObserver","NgZone","Subscription","estimateScrollWidth","ɵɵdirectiveInject","ElementRef","rf","ctx","ɵɵclassProp","element","htmlEl","clone","scrollWidth","ACTIVATE_CLASS","DEACTIVATING_CLASS","MatFormFieldLineRipple","ngZone","event","classList","isDeactivating","MatFormFieldNotchedOutline","_ngZone","label","labelWidth","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵStandaloneFeature","_c1","_c2","ɵɵprojectionDef","ɵɵelement","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","matFormFieldAnimations","trigger","state","style","transition","animate","MatFormFieldControl","MAT_FORM_FIELD","InjectionToken","MAT_FORM_FIELD_DEFAULT_OPTIONS","nextUniqueId","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","MatFormField","value","coerceBooleanProperty","oldValue","newAppearance","_elementRef","_changeDetectorRef","_unusedNgZone","_dir","_platform","_defaults","_animationMode","_unusedDocument","contentChild","MatLabel","Subject","inject","Injector","computed","previousControl","control","classPrefix","takeUntil","p","s","merge","afterRender","prop","ids","startHint","hint","endHint","error","floatingLabel","iconPrefixContainer","textPrefixContainer","iconSuffixContainer","textSuffixContainer","iconPrefixContainerWidth","textPrefixContainerWidth","iconSuffixContainerWidth","textSuffixContainerWidth","negate","prefixWidth","labelHorizontalOffset","prefixAndSuffixWidth","element","rootNode","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","NgZone","Directionality","Platform","ANIMATION_MODULE_TYPE","DOCUMENT","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuerySignal","ɵɵcontentQuery","MatFormFieldControl","MAT_PREFIX","MAT_SUFFIX","MAT_ERROR","MatHint","ɵɵqueryAdvance","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c3","_c4","_c5","_c6","_c7","MatFormFieldFloatingLabel","MatFormFieldNotchedOutline","MatFormFieldLineRipple","ɵɵclassProp","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","ɵɵStandaloneFeature","_c9","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c8","ɵɵtemplate","MatFormField_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_Template","ɵɵprojection","ɵɵelementEnd","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_16_Template","MatFormField_Case_17_Template","tmp_16_0","ɵɵadvance","ɵɵconditional","NgTemplateOutlet","matFormFieldAnimations","MatFormFieldModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","ObserversModule","listenerOptions","normalizePassiveListenerOptions","AutofillMonitor","_platform","_ngZone","elementOrRef","EMPTY","element","coerceElement","info","result","Subject","cssClass","listener","event","_info","ɵɵinject","Platform","NgZone","ɵɵdefineInjectable","TextFieldModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_INPUT_VALUE_ACCESSOR","InjectionToken","MAT_INPUT_INVALID_TYPES","nextUniqueId","MatInput","value","coerceBooleanProperty","Validators","getSupportedInputTypes","_elementRef","_platform","ngControl","parentForm","parentFormGroup","defaultErrorStateMatcher","inputValueAccessor","_autofillMonitor","_ngZone","_formField","Subject","t","event","el","element","nodeName","_ErrorStateTracker","options","isFocused","newValue","placeholder","validity","selectElement","firstOption","ids","ɵɵdirectiveInject","ElementRef","Platform","NgControl","NgForm","FormGroupDirective","ErrorStateMatcher","AutofillMonitor","NgZone","MAT_FORM_FIELD","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","ɵɵProvidersFeature","MatFormFieldControl","ɵɵNgOnChangesFeature","MatInputModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatFormFieldModule","TextFieldModule","_c0","_forTrack0","$index","$item","_forTrack1","MatCalendarBody_Conditional_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","ɵɵattribute","ɵɵtextInterpolate1","MatCalendarBody_For_2_Conditional_1_Template","MatCalendarBody_For_2_For_3_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","$event","item_r3","ɵɵrestoreView","ɵɵresetView","ɵɵelement","ɵ$index_14_r4","ɵ$index_7_r5","ɵɵclassProp","ɵɵproperty","MatCalendarBody_For_2_Template","ɵɵtemplate","ɵɵrepeaterCreate","row_r6","ɵɵconditional","ɵɵrepeater","MatMonthView_For_4_Template","day_r1","ɵɵtextInterpolate","_c1","MatCalendar_ng_template_0_Template","MatCalendar_Case_2_Template","_r1","ɵɵtwoWayListener","ctx_r1","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","MatCalendar_Case_3_Template","_r3","MatCalendar_Case_4_Template","_r4","MatDatepickerContent_ng_template_2_Template","_c2","_c3","_c4","MatDatepickerToggle_Conditional_2_Template","ɵɵnamespaceSVG","_c5","_c6","MatDatepickerIntl","Subject","start","end","ɵɵdefineInjectable","uniqueIdCounter$1","MatCalendarCell","value","displayValue","ariaLabel","enabled","cssClasses","compareValue","rawValue","calendarBodyId","activeCapturingEventOptions","normalizePassiveListenerOptions","passiveCapturingEventOptions","passiveEventOptions","MatCalendarBody","_elementRef","_ngZone","inject","Platform","EventEmitter","Injector","row","event","cell","target","getActualTouchTarget","getCellElement","cellElement","element","changes","columnChanges","rows","numCols","rowIndex","colIndex","cellNumber","movePreview","afterNextRender","activeCell","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","col","ɵɵdirectiveInject","ElementRef","NgZone","ɵɵdefineComponent","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_c0","rf","ctx","ɵɵtemplate","MatCalendarBody_Conditional_0_Template","ɵɵrepeaterCreate","MatCalendarBody_For_2_Template","_forTrack0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵconditional","ɵɵadvance","ɵɵrepeater","ɵɵproperty","ɵɵtextInterpolate1","NgClass","isTableCell","node","rangeEnabled","touchLocation","DateRange","MatDateSelectionModel","selection","_adapter","source","oldValue","date","ɵɵinvalidFactory","MatSingleDateSelectionModel","adapter","clone","ɵɵinject","DateAdapter","MatRangeDateSelectionModel","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","Optional","SkipSelf","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","InjectionToken","DefaultMatCalendarRangeStrategy","_dateAdapter","currentRange","activeDate","dragOrigin","originalRange","newDate","isRange","diffYears","diffMonths","diffDays","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","uniqueIdCounter","MatMonthView","oldActiveDate","validDate","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","Subscription","startWith","comparisonChange","selectedDate","rangeStartDate","rangeEndDate","month","isRtl","hasModifierKey","firstOfMonth","previewRange","dragRange","dragDropResult","dayOfMonth","firstDayOfWeek","narrowWeekdays","weekdays","long","i","daysInMonth","dateNames","cellClasses","d1","d2","year","day","selectedValue","ChangeDetectorRef","MAT_DATE_FORMATS","Directionality","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","MatMonthView_For_4_Template","_forTrack1","ɵɵelement","ɵɵlistener","$event","yearsPerPage","yearsPerRow","MatMultiYearView","isSameMultiYearView","minYearOfPage","getActiveOffset","selectedYear","activeMonth","yearName","firstOfYear","dateAdapter","date1","date2","minDate","maxDate","year1","year2","startingYear","getStartingYear","activeYear","euclideanModulo","b","MatYearView","selectedMonth","monthNames","normalizedDate","monthName","maxYear","maxMonth","minYear","minMonth","calendarHeaderId","MatCalendarHeader","_intl","calendar","changeDetectorRef","maxYearOfPage","minYearLabel","maxYearLabel","forwardRef","MatCalendar","_c1","ɵɵprojectionDef","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵprojection","ɵɵtextInterpolate","ɵɵattribute","ɵɵclassProp","MatButton","MatIconButton","viewChangedResult","ComponentPortal","minDateChange","maxDateChange","changeRequiringRerender","view","normalizedYear","normalizedMonth","ɵɵProvidersFeature","MatCalendar_ng_template_0_Template","MatCalendar_Case_2_Template","MatCalendar_Case_3_Template","MatCalendar_Case_4_Template","tmp_1_0","CdkPortalOutlet","CdkMonitorFocus","matDatepickerAnimations","trigger","transition","animate","keyframes","style","state","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","overlay","Overlay","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","newSelection","portal","forceRerender","ɵɵsyntheticHostListener","ɵɵsyntheticHostProperty","ɵɵclassMap","MatDatepickerContent_ng_template_2_Template","tmp_3_0","CdkTrapFocus","MatDatepickerBase","coerceStringArray","_overlay","_unusedNgZone","_viewContainerRef","scrollStrategy","_model","DOCUMENT","positionChange","positionStrategy","FlexibleConnectedPositionStrategy","input","_getFocusedElementPierceShadowDom","canRestoreFocus","completeClose","instance","location","take","activeElement","isDialog","overlayRef","OverlayConfig","keyCode","strategy","primaryX","secondaryX","primaryY","secondaryY","ctrlShiftMetaModifiers","merge","filter","modifier","ViewContainerRef","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","MatDatepicker","ɵMatDatepicker_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","newValue","model","control","controlValue","min","max","dateInputsHaveChanged","fn","c","isDisabled","lastValueWasValid","hasChanged","keys","key","previousValue","currentValue","MAT_DATEPICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","NG_VALIDATORS","datepicker","validValue","wasMatchingValue","elementRef","dateFormats","_formField","signal","Validators","modelValue","MAT_FORM_FIELD","ɵɵhostProperty","MAT_INPUT_VALUE_ACCESSOR","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","datepickerStateChanged","of","inputStateChanged","datepickerToggled","ɵɵinjectAttribute","dirIndex","ɵɵcontentQuery","_c2","_c4","_c3","MatDatepickerToggle_Conditional_2_Template","_computeAriaAccessibleName","_computeAriaAccessibleNameInternal","ssrSafeIsElement","ssrSafeIsHTMLInputElement","ssrSafeIsHTMLTextAreaElement","currentNode","isDirectlyReferenced","validIdRefs","validIds","id","elem","idRef","x","placeholder","title","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","_ErrorStateTracker","ngControl","NgControl","ErrorStateMatcher","NgForm","FormGroupDirective","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","change","range","endInput","isLtr","MatEndDate","startInput","nextUniqueId","MatDateRangeInput","rangePicker","wasMatchingStart","wasMatchingEnd","startEmpty","endEmpty","ids","part","formField","origin","ControlContainer","MatFormFieldControl","_c6","_c5","MatDateRangePicker","ɵMatDateRangePicker_BaseFactory","MatDatepickerModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatDatepickerIntl","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","CommonModule","MatButtonModule","OverlayModule","A11yModule","PortalModule","MatCommonModule","MatDatepickerContent","MatDatepickerToggle","MatCalendarHeader","CdkScrollableModule","CdkDialogContainer_ng_template_0_Template","rf","ctx","DialogConfig","CdkDialogContainer","BasePortalOutlet","_elementRef","_focusTrapFactory","_document","_config","_interactivityChecker","_ngZone","_overlayRef","_focusMonitor","inject","Platform","ChangeDetectorRef","Injector","portal","result","id","index","element","options","callback","selector","elementToFocus","afterNextRender","focusConfig","focusTargetElement","activeElement","_getFocusedElementPierceShadowDom","ɵɵdirectiveInject","ElementRef","FocusTrapFactory","DOCUMENT","DialogConfig","InteractivityChecker","NgZone","OverlayRef","FocusMonitor","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","CdkPortalOutlet","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵattribute","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","ɵɵtemplate","CdkDialogContainer_ng_template_0_Template","DialogRef","overlayRef","config","Subject","event","hasModifierKey","closedSubject","width","height","classes","DIALOG_SCROLL_STRATEGY","InjectionToken","overlay","Overlay","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","uniqueId","Dialog","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","Subject","defer","startWith","componentOrTemplateRef","config","defaults","DialogConfig","__spreadValues","overlayConfig","overlayRef","dialogRef","DialogRef","dialogContainer","reverseForEach","dialog","id","state","OverlayConfig","overlay","userInjector","providers","OverlayRef","containerType","CdkDialogContainer","containerPortal","ComponentPortal","Injector","TemplateRef","injector","context","TemplatePortal","contentRef","fallbackInjector","DIALOG_DATA","Directionality","of","emitEvent","index","previousValue","element","overlayContainer","siblings","sibling","parent","ɵɵinject","Overlay","DEFAULT_DIALOG_CONFIG","OverlayContainer","DIALOG_SCROLL_STRATEGY","ɵɵdefineInjectable","items","callback","i","DialogModule","ɵɵdefineNgModule","ɵɵdefineInjector","OverlayModule","PortalModule","A11yModule","MatDialogContainer_ng_template_2_Template","rf","ctx","MatDialogConfig","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","MatDialogContainer","CdkDialogContainer","elementRef","focusTrapFactory","_document","dialogConfig","interactivityChecker","ngZone","overlayRef","_animationMode","focusMonitor","EventEmitter","parseCssTime","TRANSITION_DURATION_PROPERTY","delta","duration","callback","totalTime","portal","ref","ɵɵdirectiveInject","ElementRef","FocusTrapFactory","DOCUMENT","InteractivityChecker","NgZone","OverlayRef","ANIMATION_MODULE_TYPE","FocusMonitor","ɵɵdefineComponent","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","CdkPortalOutlet","time","coerceNumberProperty","MatDialogState","MatDialogRef","_ref","config","_containerInstance","Subject","filter","event","take","merge","hasModifierKey","_closeDialogVia","dialogResult","position","strategy","width","height","classes","interactionType","result","MAT_DIALOG_DATA","InjectionToken","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","overlay","inject","Overlay","uniqueId","MatDialog","parent","_overlay","injector","location","_defaultOptions","_scrollStrategy","_parentDialog","_overlayContainer","_animationMode","Subject","MatDialogConfig","defer","startWith","Dialog","MatDialogRef","MatDialogContainer","MAT_DIALOG_DATA","componentOrTemplateRef","config","dialogRef","__spreadValues","cdkRef","__spreadProps","DialogConfig","ref","cdkConfig","dialogContainer","index","id","dialog","dialogs","i","ɵɵinject","Overlay","Injector","Location","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","OverlayContainer","ANIMATION_MODULE_TYPE","ɵɵdefineInjectable","MatDialogModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatDialog","DialogModule","OverlayModule","PortalModule","MatCommonModule","MatCardModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","SORT_ANIMATION_TRANSITION","AnimationDurations","AnimationCurves","MatSortHeaderIntl","Subject","ɵɵdefineInjectable","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","Optional","SkipSelf","MatSortModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_SORT_HEADER_INTL_PROVIDER","MatCommonModule","_c0","_c1","_c2","_c3","MatSelect_Conditional_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","MatSelect_Conditional_5_Conditional_1_Template","ɵɵprojection","MatSelect_Conditional_5_Conditional_2_Template","MatSelect_Conditional_5_Template","ɵɵtemplate","ɵɵconditional","MatSelect_ng_template_10_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵclassMapInterpolate1","ɵɵproperty","ɵɵattribute","matSelectAnimations","trigger","transition","query","animateChild","state","style","animate","nextUniqueId","MAT_SELECT_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_TRIGGER","MatSelectChange","source","value","MatSelect","index","option","panel","labelCount","_countGroupLabelsBeforeOption","element","_getOptionScrollPosition","Validators","fn","newValue","_viewportRuler","_changeDetectorRef","_unusedNgZone","defaultErrorStateMatcher","_elementRef","_dir","parentForm","parentFormGroup","_parentFormField","ngControl","tabIndex","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","o1","o2","Subject","defer","options","startWith","switchMap","merge","EventEmitter","filter","o","map","_ErrorStateTracker","SelectionModel","distinctUntilChanged","takeUntil","event","newAriaLabelledby","changes","modal","panelId","removeAriaReferencedId","addAriaReferencedId","isDisabled","selectedOptions","keyCode","isArrowKey","isOpenKey","manager","hasModifierKey","previouslySelectedOption","selectedOption","isTyping","hasDeselectedOptions","opt","previouslyFocusedIndex","take","currentValue","correspondingOption","preferredOrigin","CdkOverlayOrigin","ActiveDescendantKeyManager","changedOrDestroyed","isUserInput","wasSelected","a","b","fallbackValue","valueToEmit","firstEnabledOptionIndex","labelId","labelExpression","isOpen","ids","ɵɵdirectiveInject","ViewportRuler","ChangeDetectorRef","NgZone","ErrorStateMatcher","ElementRef","Directionality","NgForm","FormGroupDirective","MAT_FORM_FIELD","NgControl","ɵɵinjectAttribute","LiveAnnouncer","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatOption","MAT_OPTGROUP","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c0","_c1","CdkConnectedOverlay","ɵɵlistener","$event","ɵɵattribute","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","MatFormFieldControl","MAT_OPTION_PARENT_COMPONENT","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_c3","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c2","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","MatSelect_Conditional_4_Template","MatSelect_Conditional_5_Template","ɵɵelementEnd","ɵɵnamespaceSVG","ɵɵelement","MatSelect_ng_template_10_Template","fallbackOverlayOrigin_r4","ɵɵreference","ɵɵadvance","ɵɵconditional","ɵɵproperty","NgClass","matSelectAnimations","MatSelectModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","CommonModule","OverlayModule","MatOptionModule","MatCommonModule","CdkScrollableModule","MatFormFieldModule","_c0","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","MatTooltip","value","coerceBooleanProperty","isDisabled","coerceNumberProperty","oldMessage","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","TooltipComponent","Subject","inject","Injector","takeUntil","origin","nativeElement","event","listener","delay","overlayRef","ComponentPortal","instance","existingStrategy","ElementRef","scrollableAncestors","strategy","change","hasModifierKey","position","overlay","__spreadValues","offset","isLtr","originPosition","x","y","overlayPosition","afterNextRender","tooltipClass","connectionPair","overlayY","originX","originY","newPosition","classPrefix","point","touch","DEFAULT_LONGPRESS_DELAY","exitListeners","newTarget","touchendListener","listeners","elementUnderPointer","element","gestures","style","ɵɵdirectiveInject","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","MAT_TOOLTIP_SCROLL_STRATEGY","Directionality","MAT_TOOLTIP_DEFAULT_OPTIONS","DOCUMENT","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","_changeDetectorRef","animationMode","relatedTarget","rect","animationName","toVisible","isVisible","tooltip","showClass","hideClass","styles","ChangeDetectorRef","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","NgClass","MatTooltipModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","pageSizeOption_r3","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","MatPaginator_Conditional_2_Conditional_3_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","selectRef_r4","ɵɵreference","ɵɵrepeater","MatPaginator_Conditional_2_Conditional_4_Template","ɵɵtextInterpolate","MatPaginator_Conditional_2_Template","ɵɵtemplate","ɵɵattribute","ɵɵconditional","MatPaginator_Conditional_6_Template","_r5","ɵɵnamespaceSVG","ɵɵelement","MatPaginator_Conditional_13_Template","_r6","MatPaginatorIntl","Subject","page","pageSize","length","startIndex","endIndex","ɵɵdefineInjectable","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","DEFAULT_PAGE_SIZE","MAT_PAGINATOR_DEFAULT_OPTIONS","InjectionToken","nextUniqueId","MatPaginator","value","p","numberAttribute","_intl","_changeDetectorRef","defaults","ReplaySubject","EventEmitter","pageSize","pageSizeOptions","hidePageSize","showFirstLastButtons","previousPageIndex","maxPageIndex","startIndex","DEFAULT_PAGE_SIZE","a","b","ɵɵdirectiveInject","MatPaginatorIntl","ChangeDetectorRef","ɵɵdefineComponent","booleanAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵelementStart","ɵɵtemplate","MatPaginator_Conditional_2_Template","ɵɵtext","ɵɵelementEnd","MatPaginator_Conditional_6_Template","ɵɵlistener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","MatPaginator_Conditional_13_Template","ɵɵadvance","ɵɵconditional","ɵɵtextInterpolate1","ɵɵproperty","ɵɵattribute","MatFormField","MatSelect","MatOption","MatIconButton","MatTooltip","MatPaginatorModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_PAGINATOR_INTL_PROVIDER","MatButtonModule","MatSelectModule","MatTooltipModule","AuthAreaComponent","constructor","store","snackBar","router","ngUnsubscribe","Subject","ngOnInit","select","selectToken","pipe","takeUntil","tap","token","navigate","handleApiError","subscribe","ngOnDestroy","next","complete","ɵɵdirectiveInject","Store","MatSnackBar","Router","selectors","decls","vars","template","rf","ctx","ɵɵelement","MatGridListModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatLineModule","MatCommonModule","_c0","_c1","_c2","nextUniqueId","MatRadioChange","source","value","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatRadioGroup","MAT_RADIO_GROUP","InjectionToken","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","v","newValue","selected","_changeDetector","EventEmitter","radio","isAlreadySelected","fn","isDisabled","ɵɵdirectiveInject","ChangeDetectorRef","ɵɵdefineDirective","rf","ctx","dirIndex","ɵɵcontentQuery","MatRadioButton","_t","ɵɵqueryRefresh","ɵɵloadQuery","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","radioGroup","_elementRef","_focusMonitor","_radioDispatcher","animationMode","_defaultOptions","tabIndex","inject","NgZone","Injector","event","numberAttribute","options","origin","id","name","focusOrigin","groupValueChanged","group","input","afterNextRender","ElementRef","FocusMonitor","UniqueSelectionDispatcher","ANIMATION_MODULE_TYPE","ɵɵinjectAttribute","ɵɵdefineComponent","ɵɵviewQuery","ɵɵlistener","ɵɵattribute","ɵɵclassProp","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","ɵɵelement","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","_MatInternalFormField","MatRadioModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","MatRippleModule","_c0","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","TransitionCheckState","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatCheckbox","MatCheckboxChange","nextUniqueId","defaults","isChecked","event","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","EventEmitter","changes","value","changed","fn","isDisabled","control","newState","oldState","element","animationClass","clickAction","nativeCheckbox","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","NgZone","ɵɵinjectAttribute","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","MatRipple","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","NG_VALIDATORS","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","ɵɵelement","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵprojection","checkbox_r2","ɵɵreference","ɵɵproperty","ɵɵadvance","_MatInternalFormField","MatCheckboxModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCheckbox","MatCommonModule","_c0","_c1","MatSlideToggle_Conditional_10_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSlideToggle","MatSlideToggleChange","source","checked","nextUniqueId","isChecked","value","_elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","EventEmitter","focusOrigin","changes","fn","control","isDisabled","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","NG_VALIDATORS","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","$event","ɵɵprojection","switch_r2","ɵɵreference","ɵɵproperty","ɵɵadvance","ɵɵconditional","MatRipple","_MatInternalFormField","MatSlideToggleModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatSlideToggle","MatCommonModule","_c0","_c1","MatSliderVisualThumb_Conditional_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_c2","_c3","MatSlider_Conditional_6_Conditional_2_For_1_Template","ɵɵelement","tickMark_r1","ɵ$index_14_r2","ctx_r2","ɵɵclassMap","ɵɵstyleProp","MatSlider_Conditional_6_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","ɵɵrepeater","MatSlider_Conditional_6_Template","ɵɵtemplate","ɵɵconditional","MatSlider_Conditional_7_Template","ɵɵproperty","_MatThumb","_MatTickMark","MAT_SLIDER","InjectionToken","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderVisualThumb","_cdr","_ngZone","_elementRef","_slider","inject","Platform","event","rect","isHovered","sliderInput","input","rippleRef","RippleState","animation","ignoreGlobalRippleConfig","_MatThumb","sibling","ɵɵdirectiveInject","ChangeDetectorRef","NgZone","ElementRef","MAT_SLIDER","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","MatRipple","_c0","_c1","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","MAT_SLIDER_VISUAL_THUMB","ɵɵStandaloneFeature","ɵɵtemplate","MatSliderVisualThumb_Conditional_0_Template","ɵɵelement","ɵɵconditional","ɵɵadvance","ɵɵproperty","MatSlider","v","endInput","startInput","min","prevMin","oldEndValue","oldStartValue","oldValue","max","prevMax","step","prevStartValue","_dir","_globalRippleOptions","animationMode","value","eInput","sInput","thumb","thumbPosition","styles","trackStyle","index","source","input1","input2","sourceThumb","valuetext","visualThumb","percentage","activePercentage","numActive","numInactive","_MatTickMark","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","withAnimation","radius","centerX","centerY","dx","dy","Directionality","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","dirIndex","ɵɵcontentQuery","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","_c2","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","_c3","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatSlider_Conditional_6_Template","MatSlider_Conditional_7_Template","MAT_SLIDER_THUMB_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSliderThumb","MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR","MatSliderRangeThumb","numberAttribute","value","stringValue","v","booleanAttribute","_ngZone","_elementRef","_cdr","_slider","EventEmitter","_MatThumb","signal","Subject","inject","Platform","event","isCursorOnSliderThumb","xPos","width","step","numSteps","percentage","impreciseValue","prevValue","min","max","options","fn","isDisabled","ɵɵdirectiveInject","NgZone","ElementRef","ChangeDetectorRef","MAT_SLIDER","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵattribute","ɵɵProvidersFeature","MAT_SLIDER_THUMB","ɵɵInputTransformsFeature","sibling","minWidth","maxWidth","midValue","_percentage","ripplePadding","MAT_SLIDER_RANGE_THUMB","ɵɵInheritDefinitionFeature","MatSliderModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","label","ɵɵelementContainerStart","ɵɵclassMap","icon","hint","ɵɵtext","ɵɵpureFunction1","_c0","currenValue","length","maxLength","ɵɵtextInterpolate2","ɵɵtemplate","InputComponent_div_0_ng_container_1_mat_label_2_Template","ɵɵlistener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","onInput","InputComponent_div_0_ng_container_1_ng_container_5_Template","InputComponent_div_0_ng_container_1_mat_hint_6_Template","InputComponent_div_0_ng_container_1_mat_hint_7_Template","appearance","placeholder","isRequired","controlName","item_r3","id","name","InputComponent_div_0_ng_container_2_mat_label_2_Template","InputComponent_div_0_ng_container_2_mat_option_4_Template","InputComponent_div_0_ng_container_2_ng_container_5_Template","InputComponent_div_0_ng_container_2_mat_hint_6_Template","type","dataItems","InputComponent_div_0_ng_container_3_mat_label_2_Template","_r4","InputComponent_div_0_ng_container_3_ng_container_5_Template","InputComponent_div_0_ng_container_3_mat_hint_6_Template","InputComponent_div_0_ng_container_3_mat_hint_7_Template","InputComponent_div_0_ng_container_4_mat_label_2_Template","_r5","clickEvent","InputComponent_div_0_ng_container_4_mat_hint_7_Template","InputComponent_div_0_ng_container_4_mat_hint_8_Template","hide","ɵɵclassProp","InputComponent_div_0_ng_container_5_mat_label_2_Template","InputComponent_div_0_ng_container_5_mat_hint_4_Template","picker_r6","minDate","maxDate","InputComponent_div_0_ng_container_6_mat_label_2_Template","InputComponent_div_0_ng_container_6_mat_hint_6_Template","internalFormGroup","picker_r7","item_r8","mode","ɵɵpureFunction0","_c1","_c2","_c3","InputComponent_div_0_ng_container_7_mat_label_1_Template","InputComponent_div_0_ng_container_7_mat_radio_button_4_Template","InputComponent_div_0_ng_container_7_mat_hint_5_Template","ɵɵtextInterpolate","tmp_2_0","sliderStep","undefined","formatLabel","InputComponent_div_0_ng_container_1_Template","InputComponent_div_0_ng_container_2_Template","InputComponent_div_0_ng_container_3_Template","InputComponent_div_0_ng_container_4_Template","InputComponent_div_0_ng_container_5_Template","InputComponent_div_0_ng_container_6_Template","InputComponent_div_0_ng_container_7_Template","InputComponent_div_0_ng_container_8_Template","InputComponent_div_0_ng_container_9_Template","InputComponent_div_0_ng_container_10_Template","ɵɵstyleMap","align","className","formGroup","InputComponent","constructor","snackBar","ngUnsubscribe","Subject","value","signal","ngOnInit","FormGroup","inputControl","FormControl","findIndex","x","left","leftValue","right","rightValue","valueChanges","pipe","takeUntil","tap","currentControl","setValue","get","handleApiError","subscribe","ngOnDestroy","next","complete","hasValidator","Validators","required","maxLengthValidator","validator","minLength","minLengthValidator","isDisabled","disabled","Math","round","sliderStepSuffix","event","set","target","stopPropagation","ɵɵdirectiveInject","MatSnackBar","selectors","inputs","leftLabel","rightLabel","rows","cols","decls","vars","consts","template","rf","ctx","InputComponent_div_0_Template","_c0","_c1","MatAutocomplete_ng_template_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵprojection","ɵɵelementEnd","formFieldId_r3","ɵɵclassMap","ɵɵclassProp","ɵɵproperty","ɵɵattribute","panelAnimation","trigger","state","style","transition","group","animate","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","InjectionToken","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","MatAutocomplete","value","_changeDetectorRef","_elementRef","_defaults","platform","Subscription","EventEmitter","ActiveDescendantKeyManager","index","scrollTop","event","labelId","labelExpression","ɵɵdirectiveInject","ChangeDetectorRef","ElementRef","Platform","ɵɵdefineComponent","dirIndex","ɵɵcontentQuery","MatOption","MAT_OPTGROUP","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","TemplateRef","booleanAttribute","ɵɵProvidersFeature","MAT_OPTION_PARENT_COMPONENT","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","ɵɵprojectionDef","ɵɵtemplate","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MatAutocompleteModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","OverlayModule","MatOptionModule","MatCommonModule","CommonModule","CdkScrollableModule","AppCommonInputModule","provideNativeDateAdapter","imports","CommonModule","ReactiveFormsModule","FormsModule","MatSidenavModule","MatToolbarModule","MatIconModule","MatButtonModule","MatMenuModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatRadioModule","MatCheckboxModule","MatSlideToggleModule","MatSliderModule","AppCommonModule","MatAutocomplete","MatAutocompleteModule","MatDivider","value","coerceBooleanProperty","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassProp","ɵɵStandaloneFeature","MatDividerModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","AuthForgotComponent","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","login","ɵɵadvance","ɵɵproperty","loginForm","AuthSignInComponent","constructor","snackBar","fb","localizationService","authService","ngUnsubscribe","Subject","ngOnInit","group","Validators","required","password","rememberMe","valid","Object","keys","controls","forEach","key","control","get","markAsTouched","open","getTranslation","duration","value","ɵɵdirectiveInject","MatSnackBar","FormBuilder","LocalizationService","AuthService","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","AuthSignInComponent_div_1_Template","AuthSignUpComponent","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","AuthRestoreComponent","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","routes","path","component","AuthAreaComponent","children","pathMatch","redirectTo","AuthSignInComponent","AuthSignUpComponent","AuthForgotComponent","AuthRestoreComponent","AuthAreaModule","RouterModule","forChild","CommonModule","ReactiveFormsModule","AppCommonModule","MatInputModule","MatDatepickerModule","MatIconModule","MatDialogModule","MatFormFieldModule","MatCardModule","MatButtonModule","MatToolbarModule","MatSortModule","MatPaginatorModule","MatSelectModule","MatGridListModule","AppCommonInputModule","MatDividerModule"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,21,23]}